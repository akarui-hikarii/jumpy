var searchIndex = JSON.parse('{\
"core":{"doc":"","t":[12,12,12,3,3,7,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11],"n":["0","0","0","BevyBones","CoreMetaHandle","GLOBAL","Session","Snapshot","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","component_ids","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","from_components","from_world","get_components","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","load","main","play_sounds","setup","snapshot_restore","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update_game","update_input","vzip","vzip","vzip","vzip","world"],"q":["core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Marker component for entities that are rendered for bones.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Wait for game meta to load, and then start the game …","","","Setup the game, loading the metadata and starting the game …","","","","","","","","","","","","","","","","","","Update the game simulation.","Update the game session input.","","","","",""],"i":[7,16,5,0,0,0,0,0,7,28,16,5,7,28,16,5,7,28,16,5,7,28,16,5,7,28,16,5,28,5,7,7,28,16,5,7,7,28,16,5,7,28,16,5,7,28,16,5,7,28,16,5,28,5,28,7,28,16,5,7,28,16,5,7,28,16,5,7,28,16,5,7,28,16,5,7,28,16,5,0,0,0,0,0,7,28,16,5,7,28,16,5,7,28,16,5,7,28,16,5,0,0,7,28,16,5,7],"f":[0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4]],[[],5],[6],[7],[6],[6],[6],[6],[7],[6],[6],[6],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[]],[8],[[]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[1,9]]]],[[[10,[9]]],[[10,[1,9]]]],[[[10,[9]]],[[10,[1,9]]]],[[[10,[9]]],[[10,[1,9]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[11,[[11,[1]]]],[12,[[12,[1]]]],[12,[[12,[1]]]],[12,[[12,[1]]]],[12,[[12,[1]]]],[[]],[[]],[[]],[[]],[[13,[15,[[14,[7]]]],[15,[[17,[16]]]],[14,[[19,[18]]]]]],[[]],[[[17,[20]],[15,[[17,[7]]]]]],[[13,[17,[21]]]],[[[14,[5]],[17,[[23,[22]]]],[15,[[14,[7]]]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],15],[[],15],[[],15],[[],15],[8],[[[15,[[14,[7]]]],[17,[[23,[22]]]],[14,[26]]]],[[]],[[]],[[]],[[]],[7,27]],"p":[[8,"Any"],[3,"RenderAssets"],[3,"Components"],[3,"Storages"],[3,"Snapshot"],[15,"usize"],[3,"Session"],[3,"World"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Commands"],[3,"ResMut"],[4,"Option"],[3,"CoreMetaHandle"],[3,"Res"],[3,"CoreMeta"],[3,"Assets"],[6,"Audio"],[3,"AssetServer"],[4,"KeyCode"],[3,"Input"],[4,"Result"],[3,"TypeId"],[3,"Windows"],[3,"World"],[3,"BevyBones"]]},\
"jumpy":{"doc":"Jumpy is a pixel-style, tactical 2D shooter with a fishy …","tn":["EngineState","First","GLOBAL","GameEditorState","Hidden","InGame","InGameState","Input","Last","LoadingGameData","LoadingPlatformStorage","MainMenu","Paused","Playing","PostUpdate","PreUpdate","RollbackStage","Update","Visible","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_str","assets","audio","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","config","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","eq","eq","eq","eq","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","init","init","init","init","input","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","lines","loading","localization","main","metadata","platform","prelude","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","serialize","serialize","serialize","session","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ui","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","0","AssetHandle","EguiFont","EguiFontLoader","JumpyAssetPlugin","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","asset_handle","asset_path","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","extensions","fmt","from","from","from","init","init","init","inner","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","load","raw_clone","raw_drop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","type_uuid","upcast","upcast","upcast","vzip","vzip","vzip","AssetHandle","as_any","as_any_mut","as_bind_group_shader_type","asset_path","borrow","borrow_mut","clone","clone_into","clone_type_data","clone_weak","component_ids","default","deref","deref","deref_mut","deserialize","downcast","drop","erased_serialize","fmt","from","from_components","from_world","get_components","get_normalized_relative_path","init","inner","into","into_any","into_any_arc","into_any_rc","into_sample","load","new","raw_clone","raw_drop","serialize","to_owned","try_from","try_into","type_id","upcast","vzip","0","CurrentMusic","EffectsChannel","JumpyAudioPlugin","MusicChannel","ShuffledPlaylist","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_world","from_world","idx","init","init","init","init","init","instance","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","music_system","raw_clone","raw_clone","raw_drop","raw_drop","setup_audio_defaults","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","MenuCamera","apply","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow_mut","clone_dynamic","clone_value","component_ids","default","deref","deref_mut","downcast","drop","field","field_at","field_at_mut","field_len","field_mut","from","from_components","from_world","get_components","get_field","get_field_mut","get_type_info","get_type_registration","init","into","into_any","into_any","into_any_arc","into_any_rc","into_reflect","into_sample","iter_fields","name_at","path","path_mut","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","set","spawn_menu_camera","try_from","try_into","type_id","type_info","type_name","upcast","vzip","ASSET_DIR_ENV_VAR","DEFAULT_LOG_LEVEL","ENGINE_CONFIG","EngineConfig","SERVER_MODE_ENV_VAR","as_any","as_any_mut","as_bind_group_shader_type","asset_dir","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","clone_type_data","command","command_for_update","deref","deref_mut","downcast","drop","fmt","from","from_arg_matches","from_arg_matches_mut","game_asset","group_id","hot_reload","init","into","into_any","into_any_arc","into_any_rc","into_sample","log_level","raw_clone","raw_drop","sync_test_check_distance","to_owned","try_from","try_into","type_id","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip","0","JumpyDebugPlugin","WorldInspectorEnabled","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","world_inspector","Grab","Jump","JumpyPlayerInputPlugin","Move","PlayerAction","Shoot","Slide","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","fmt","from","from","get_at","get_hash","hash","index","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","raw_clone","raw_drop","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","JumpyLinesPlugin","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","deref","deref_mut","downcast","drop","from","init","into","into_any","into_any_arc","into_any_rc","into_sample","try_from","try_into","type_id","upcast","vzip","0","GameLoader","JumpyLoadingPlugin","PlayerInputCollector","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","commands","component_ids","core_assets","core_assets_loaded","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","egui_ctx","events","from","from","from","from_components","game_assets","game_handle","get_components","hot_reload_game","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","load","load_game","menu_input_map","player_assets","setup","should_skip_run","skip_next_asset_update_event","storage","texture_atlas_assets","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","JumpyLocalizationPlugin","LocalizationExt","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","build","deref","deref_mut","downcast","drop","from","get","init","into","into_any","into_any_arc","into_any_rc","into_sample","load_locales","try_from","try_into","type_id","upcast","vzip","0","0","BorderImageMeta","ButtonBordersMeta","ButtonStylesMeta","ButtonThemeMeta","ColorMetaExt","FontFamily","FontMeta","FontStylesMeta","GameMeta","GameMetaHandle","HudThemeMeta","ImageMeta","MainMenuMeta","MarginMeta","PanelThemeMeta","PlayerControlMethods","PlayerControls","ProgressBarMeta","Settings","TranslationsMeta","UIThemeMeta","UiThemeColors","UiThemeEditor","UiThemeEditorIcons","UiThemeWidgets","WidgetStyle","active","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","background_image","background_image","bg_fill","bg_stroke","bigger","border","border_radius","border_size","borders","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button_styles","clicked","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","color","colors","core","debug_window_fill","default","default","default","default_locale","default_settings","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","detected_locale","downcast","downcast","downcast","downcast","drop","drop","drop","drop","editor","egui_texture","egui_texture_id","erase","erased_serialize","expansion","family","fmt","fmt","fmt","fmt","focused","font","font","font_color","font_families","font_styles","from","from","from","from","from_world","gamemeta_derive_bevy_asset","gamepad","grab","heading","height","hovered","hud","icons","image","image","image_size","image_size","init","init","init","init","install_asset","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_egui","into_sample","into_sample","into_sample","into_sample","jump","keyboard1","keyboard2","left","lifebar","load","load","locales","localization","main_menu","matchmaking_server","menu","menu_width","movement","noninteractive","normal","normal","padding","padding","panel","player_controls","player_hud_width","playlist","portrait_frame","positive","progress_image","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","right","scale","scale","select","serialize","settings","shoot","size","slide","small","smaller","spawn","subtitle_font","text","tile","title_font","to_owned","to_owned","to_owned","to_owned","top","translations","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_uuid","ui","ui_theme","ulid","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","widgets","AssetLoader","RequiredBounds","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","deref","deref_mut","downcast","drop","extensions","from","init","into","into_any","into_any_arc","into_any_rc","into_sample","load","try_from","try_into","type_id","upcast","vzip","TranslationsMeta","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default_locale","deref","deref_mut","deserialize","detected_locale","downcast","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","into_sample","load","locales","raw_clone","raw_drop","to_owned","try_from","try_into","type_id","upcast","vzip","PlayerControlMethods","PlayerControls","STORAGE_KEY","Settings","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","downcast","downcast","downcast","drop","drop","drop","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","gamepad","get_input_map","get_stored_or_default","grab","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","jump","keyboard1","keyboard2","matchmaking_server","movement","player_controls","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","serialize","serialize","serialize","shoot","slide","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","0","BorderImageMeta","ButtonBordersMeta","ButtonStylesMeta","ButtonThemeMeta","FontFamily","FontMeta","FontStylesMeta","HudThemeMeta","MarginMeta","PanelThemeMeta","ProgressBarMeta","UIThemeMeta","UiThemeColors","UiThemeEditor","UiThemeEditorIcons","UiThemeWidgets","WidgetStyle","active","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_list","as_mut_list","background_image","bg_fill","bg_stroke","bigger","border","border_radius","border_size","borders","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","button_styles","clicked","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","color","colored","colors","debug_window_fill","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","editor","egui_texture","erase","expansion","f32_one","family","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused","font","font","font_color","font_families","font_id","font_styles","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","get_egui_widget_style","get_egui_widget_visuals","heading","height","hovered","hud","icons","image","image_size","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","left","lifebar","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","menu","noninteractive","normal","normal","padding","padding","panel","player_hud_width","portrait_frame","positive","progress_image","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","right","scale","scale","select","size","small","smaller","spawn","text","tile","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widgets","0","BackendLost","JumpyPlatformPlugin","Load","NotLoaded","Save","SaveTask","SerializationError","Storage","StorageData","StorageError","StorageRequest","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","backend_sender","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_pending_data_load","data","data_receiver","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from_world","get","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","is_complete","is_loaded","load","load_storage","native","provide","save","set","source","to_string","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_load","try_save","try_set","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","0","data","result_sender","result_sender","init_storage","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","A","ALICE_BLUE","ANTIQUE_WHITE","AQUAMARINE","ATTRIBUTE_COLOR","ATTRIBUTE_JOINT_INDEX","ATTRIBUTE_JOINT_WEIGHT","ATTRIBUTE_NORMAL","ATTRIBUTE_POSITION","ATTRIBUTE_TANGENT","ATTRIBUTE_UV_0","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AZURE","AbntC1","AbntC2","ActionState","ActionStateDriver","Actionlike","Actionlike","AddAsset","AddChild","AddConditionalToSet","Added","Alias","AllScroll","Alt","AncestorIter","AnimatedDecoration","AnyOf","Apostrophe","App","AppLooplessFixedTimestepExt","AppLooplessStateExt","AppTypeRegistry","Apps","Arc","Arrow","AssetEvent","AssetPlugin","AssetServer","Assets","Asterisk","At","At","Audio","AudioApp","AudioChannel","AudioCommandError","AudioControl","AudioEasing","AudioInstance","AudioInstanceAssetsExt","AudioPlugin","AudioSettings","AudioSource","AudioThreadError","AudioTween","Automatic","Ax","Axis","AxisChanged","B","BEIGE","BISQUE","BLACK","BLUE","BVec2","BVec3","BVec4","Back","BackgroundMeta","Backslash","BonesBevyAsset","BonesBevyAsset","BonesBevyAssetLoad","BonesBevyAssetLoad","BorderlessFullscreen","BuildChildren","BuildWorldChildren","BuiltinElementKind","Bundle","Bundle","ButtonChanged","C","C","CRIMSON","CYAN","Calculator","Camera","Camera2d","Camera2dBundle","Camera3d","Camera3dBundle","CameraMeta","Capital","Caret","Cell","Centered","ChangeTrackers","Changed","ChildBuilder","Children","Chord","ClashStrategy","ClearColor","ColResize","Colon","Color","ColorMaterial","ColorMesh2dBundle","ColorMeta","Comma","CommandQueueFull","Commands","Component","Component","Compose","ComputedVisibility","ConditionHelpers","ConditionSet","Connected","ContextMenu","Control","Convert","Copy","Copy","CoreMeta","CoreMetaArc","CorePlugin","CoreStage","Crab","Crate","Created","Crosshair","Current","CurrentState","CursorEntered","CursorIcon","CursorLeft","CursorMoved","Cut","D","DARK_GRAY","DARK_GREEN","DEFAULT_DEADZONE","DISABLED","DPadDown","DPadLeft","DPadRight","DPadUp","Default","DefaultPlugins","Delete","Deref","Deref","DerefMut","DescendantIter","Deserialize","Deserialize","DespawnChildrenRecursive","DespawnRecursive","DespawnRecursiveExt","DetectChanges","Disconnected","Down","Down","DroppedFile","DualAxis","DynamicAudioChannel","DynamicAudioChannels","DynamicPlugin","E","ENABLED","EResize","East","Element","ElementLayer","ElementMeta","ElementSpawn","End","Entity","Equals","Escape","EulerRot","EventReader","EventWriter","Events","EwResize","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","FALSE","FALSE","FALSE","FUCHSIA","FadeIn","FadeOut","Fetch","FileDragAndDrop","First","FixedTimestep","FixedTimestepStage","FixedTimesteps","FromReflect","FromReflect","FromWorld","Fullscreen","G","GOLD","GRAY","GREEN","GameSession","GameSessionInfo","Gamepad","GamepadAxis","GamepadAxisType","GamepadButton","GamepadButtonType","GamepadEvent","GamepadEventType","Gamepads","GetField","GetTupleStructField","GilrsPlugin","GlobalTransform","Grab","Grabbing","Grave","Grenade","H","Hand","Handle","HandleUntyped","HashMap","HashSet","Help","HierarchyPlugin","HierarchyQueryExt","Home","HoveredFile","HoveredFileCancelled","Hsla","I","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","INDIGO","INVISIBLE","INVISIBLE","INVISIBLE_IDENTITY","IVec2","IVec3","IVec4","Image","ImagePlugin","In","In","Index","Inner","Input","InputManagerBundle","InputManagerPlugin","InputMap","Insert","InsertChildren","IntoConditionalSystem","IntoPipeSystem","IntoSystem","IntoSystemDescriptor","J","JumpyCoreAssetsPlugin","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyCode","KickBomb","L","LAlt","LBracket","LControl","LIME_GREEN","LShift","LWin","Last","Lazy","Left","Left","Left","LeftStickX","LeftStickY","LeftThumb","LeftTrigger","LeftTrigger2","LeftZ","Local","M","MAROON","MAX","MAX_PLAYERS","MIDNIGHT_BLUE","MIN","Mail","MainTrack","MapLayerKind","MapLayerMeta","MapMeta","MapTileLayer","MapTileMeta","Mat2","Mat3","Mat4","MediaSelect","MediaStop","MenuAction","Mesh","Middle","Mine","MinimalPlugins","Minus","MockInput","Mode","Modified","Modifier","MonitorSelection","MouseButton","MouseWheelAxisType","MouseWheelDirection","Move","Msaa","Mut","Mute","MyComputer","N","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAVY","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NONE","NResize","N_VARIANTS","Name","NavigateBackward","NavigateForward","NeResize","NeswResize","NextState","NextTrack","NoConvert","NoDrop","NonSend","NonSendMut","None","North","NotAllowed","NsResize","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","NwResize","NwseResize","O","OLIVE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ORANGE","ORANGE_RED","Oem102","Once","Or","Orthographic","OrthographicProjection","Other","Other","Other","Out","P","PINK","PURPLE","PageDown","PageUp","ParallaxLayerMeta","ParallelCommands","ParamSet","Parent","Paste","Pause","Paused","Pausing","Period","Perspective","PerspectiveProjection","PhantomData","PhysicsMeta","PlayAudioCommand","PlayPause","PlaybackState","PlayerMeta","PlayerSounds","PlayerSpawner","PlayerStats","Playing","Plugin","PluginGroup","Plus","PostStartup","PostUpdate","Power","PreStartup","PreUpdate","PressAll","PrevTrack","Primary","PrioritizeLongest","Progress","Projection","PushChildren","Q","Quat","Query","QueryState","Queued","R","RAlt","RBracket","RControl","RED","RShift","RWin","Ray","ReceivedCharacter","Rect","Reflect","Reflect","ReflectComponent","ReflectDefault","ReflectDeserialize","ReflectResource","ReflectSerialize","RemoveChildren","RemoveParent","Removed","RemovedComponents","RenderLayers","Repeating","Res","ResMut","Resource","Resource","Return","Rgba","RgbaLinear","Right","Right","Right","RightStickX","RightStickY","RightThumb","RightTrigger","RightTrigger2","RightZ","RowResize","RunCriteria","RunCriteriaDescriptorCoercion","RunCriteriaLabel","RunCriteriaLabel","S","SALMON","SEA_GREEN","SILVER","SResize","ScanCode","Schedule","ScheduleLooplessFixedTimestepExt","ScheduleLooplessStateExt","Scroll","SeResize","Select","Semicolon","Serialize","Serialize","Shader","Shift","Single","SingleAxis","SizedFullscreen","Slash","Sleep","Snapshot","South","Space","SpatialBundle","Sprite","SpriteBundle","SpriteSheetBundle","Sproinger","Stage","StageLabel","StageLabel","Start","Startup","StartupSchedule","StartupStage","State","StateTransitionStage","StompBoots","Stop","Stopped","Stopping","Storage","Struct","SwResize","Sword","Sysrq","System","System","SystemLabel","SystemLabel","SystemParam","SystemParam","SystemParamFunction","SystemSet","SystemStage","T","TEAL","TOMATO","TOTAL_LAYERS","TRUE","TRUE","TRUE","TURQUOISE","Tab","Target","TaskPoolOptions","Text","TextureAtlas","TextureAtlasBuilder","TextureAtlasSprite","Tile","Time","Timer","TimerMode","ToggleActions","TouchInput","Touches","Transform","TransformBundle","TransformPlugin","TupleStruct","TweenCommand","TypeUlid","TypeUlid","U","ULID","UVec2","UVec3","UVec4","Underline","Unlabeled","Up","Up","Update","UseActionOrder","UserInput","V","VIOLET","VISIBLE","VISIBLE_IDENTITY","ValidParentCheckPlugin","Vec2","Vec3","Vec4","VerticalText","VirtualAxis","VirtualDPad","VirtualDPad","Visibility","VisibilityBundle","VolumeDown","VolumeUp","W","W","W","W","WHITE","WResize","Wait","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","West","Win","Window","WindowDescriptor","WindowMode","WindowMoved","WindowPlugin","WindowPosition","Windowed","Windows","With","Without","World","WorldChildBuilder","X","X","X","X","X","X","X","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","YELLOW","YELLOW_GREEN","YXZ","YZX","Yen","Z","Z","Z","Z","Z","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","ZoomIn","ZoomOut","_marker","_marker","_phantom","_phantom","a","abs","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","accumulator","action","action_data","action_data","action_data_mut","action_state","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_asset","add_asset","add_asset_loader","add_asset_loader","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_audio_channel","add_audio_channel","add_bones_asset","add_child","add_children","add_command","add_debug_asset","add_debug_asset","add_default_stages","add_enter_system","add_enter_system","add_enter_system","add_enter_system","add_enter_system","add_enter_system_set","add_enter_system_set","add_enter_system_set","add_enter_system_set","add_enter_system_set","add_event","add_exit_system","add_exit_system","add_exit_system","add_exit_system","add_exit_system","add_exit_system_set","add_exit_system_set","add_exit_system_set","add_exit_system_set","add_exit_system_set","add_fixed_timestep","add_fixed_timestep","add_fixed_timestep_after_stage","add_fixed_timestep_after_stage","add_fixed_timestep_after_stage","add_fixed_timestep_after_stage","add_fixed_timestep_before_stage","add_fixed_timestep_before_stage","add_fixed_timestep_before_stage","add_fixed_timestep_before_stage","add_fixed_timestep_child_stage","add_fixed_timestep_child_stage","add_fixed_timestep_child_stage","add_fixed_timestep_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_custom_child_stage","add_fixed_timestep_system","add_fixed_timestep_system","add_fixed_timestep_system","add_fixed_timestep_system","add_fixed_timestep_system_set","add_fixed_timestep_system_set","add_fixed_timestep_system_set","add_fixed_timestep_system_set","add_loader","add_loopless_state","add_loopless_state","add_loopless_state_after_stage","add_loopless_state_after_stage","add_loopless_state_after_stage","add_loopless_state_after_stage","add_loopless_state_before_stage","add_loopless_state_before_stage","add_loopless_state_before_stage","add_loopless_state_before_stage","add_mat2","add_mat3","add_mat4","add_plugin","add_plugins","add_primary_window","add_render_command","add_stage","add_stage","add_stage","add_stage_after","add_stage_after","add_stage_before","add_stage_before","add_startup_stage","add_startup_stage_after","add_startup_stage_before","add_startup_system","add_startup_system_set","add_startup_system_set_to_stage","add_startup_system_to_stage","add_state","add_state_to_stage","add_sub_app","add_system","add_system","add_system_run_criteria","add_system_set","add_system_set","add_system_set_to_stage","add_system_set_to_stage","add_system_to_stage","add_system_to_stage","add_texture","add_texture","add_to_set","advance","affine","after","after","after","after","after","after","air_move_speed","all","all","all","all","alpha_mode","alpha_mode","alpha_mode","ambiguous_with","anchor","anchor","angle_between","angle_between","angle_between","animations","any","any","any","any_just_cancelled","any_just_pressed","any_just_pressed","any_just_released","any_just_released","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_vector","any_pressed","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_buffers","apply_buffers","apply_buffers","apply_buffers","apply_or_insert","apply_or_insert","archetype_component_access","archetype_component_access","archetype_component_access","archetype_component_access","archetype_generation","archetypes","archetypes","arrow_keys","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat2","as_dmat3","as_dmat4","as_dvec2","as_dvec2","as_dvec2","as_dvec3","as_dvec3","as_dvec3","as_dvec4","as_dvec4","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f64","as_fd","as_filelike","as_filelike_view","as_hsla","as_hsla_f32","as_ivec2","as_ivec2","as_ivec3","as_ivec3","as_ivec4","as_ivec4","as_label","as_label","as_label","as_linear_rgba_f32","as_linear_rgba_u32","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_nop","as_ptr","as_raw_fd","as_raw_filelike","as_raw_socketlike","as_readonly","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_rgba","as_rgba_f32","as_rgba_linear","as_rgba_u32","as_socketlike","as_socketlike_view","as_str","as_str","as_str","as_str","as_str","as_str","as_str","as_uvec2","as_uvec2","as_uvec3","as_uvec3","as_uvec4","as_uvec4","as_vec2","as_vec2","as_vec3","as_vec3","as_vec3a","as_vec3a","as_vec4","as_vec4","aspect_2d","aspect_ratio","asset_event_system","asset_folder","asset_io","assets","associated_gamepad","assume_init","assume_init","async_compute","at_end","at_start","atlas","attribute","attribute_mut","attributes","attributes","attributes_mut","auto_format_conversion","auto_format_conversion","axis_data","axis_pair","axis_type","axis_type","b","back","back","backend_scale_factor","backend_scale_factor","background","background_color","before","before","before","before","before","before","before_commands","bevy_main","bind_group_layout","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","body_size","bones","border_bottom","border_left","border_right","border_top","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","builtin","bundles","bundles","button_type","bypass_change_detection","bypass_change_detection","bypass_change_detection","bypass_change_detection","calculate_size_for","callsite_enabled","camera","camera","camera","camera_2d","camera_3d","camera_render_graph","camera_render_graph","canvas","canvas","canvas","cast_weak","category","cause","ceil","ceil","ceil","cell","cell","center","center_window","change_tick","change_tick","change_tick","change_tick","change_tick","change_tick","change_tick","channel","channels","char","check_change_tick","check_change_tick","check_change_ticks","child","child","children","children","children","children_query","chord","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamped_axis_pair","clamped_value","clear","clear","clear","clear","clear_action","clear_color","clear_color","clear_entities","clear_gamepad","clear_just_pressed","clear_just_released","clear_schedule","clear_trackers","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_fetch","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_span","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_untyped","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_weak","clone_weak","clone_weak_untyped","close","close_when_requested","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","col","col_mut","col_mut","col_mut","color","color","color","command_capacity","command_queue","command_scope","commands","commands","commands","component_access","component_access","component_access","component_id","component_id","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ids","component_ticks","components","components","compute","compute_aabb","compute_affine","compute_flat_normals","compute_matrix","compute_matrix","compute_transform","computed","computed","computed","computed_visibility","computed_visibility","conditions","conjugate","consume","contains","contains","contains","contains","contains_attribute","contains_resource","convert","copy","copy","count_vertices","create_channel","create_default_pools","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_platform_default_asset_io","cross","cross","cross","current","current","current","current_duration","current_entity","current_mut","current_span","cursor_grab_mode","cursor_grab_mode","cursor_grab_mode","cursor_icon","cursor_icon","cursor_position","cursor_visible","cursor_visible","cursor_visible","custom_size","custom_size","data","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug_span","decorations","decorations","decorations","decrement_strong_count","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_height","default_labels","default_linear","default_nearest","default_sampler","delta","delta","delta_seconds","delta_seconds","delta_seconds_f64","delta_seconds_f64","depth","depth_load_op","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","despawn","despawn_descendants","despawn_recursive","despawn_with_children_recursive","determinant","determinant","determinant","direction","distance","distance","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","down","down","down","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_mut","downcast_mut","downcast_mut","downcast_raw","downcast_rc","downcast_rc","downcast_ref","downcast_ref","downcast_ref","downcast_unchecked","downgrade","dpad","drain","drain_commands","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_span","drop_volume","duplicate_vertices","duration","duration","duration","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","easing","editor_size","egui","elapsed","elapsed","elapsed","elapsed_seconds","elapsed_seconds","elapsed_seconds_f64","elapsed_seconds_f64","elapsed_seconds_wrapped","elapsed_seconds_wrapped","elapsed_seconds_wrapped_f64","elapsed_seconds_wrapped_f64","elapsed_secs","elapsed_wrapped","elapsed_wrapped","element","elements","empty","enabled","enabled","enabled","enabled","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","end_next_loop","enter","enter_stages","entities","entities","entities","entities","entities_mut","entity","entity","entity","entity","entity","entity","entity_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","error","error_span","event","event_count","event_enabled","event_type","events","events","events","events_a","events_b","exclusive_at_end","exclusive_at_end_systems","exclusive_at_start","exclusive_at_start_systems","exclusive_before_commands","exclusive_before_commands_systems","executor","executor_modified","exit","exit_on_all_closed","exit_stages","exp","exp","exp","experimental_maps","extend","extend","extend","extend","extend","extend","extend","extract_asset","extract_asset","extract_component","extract_component","extract_component","extract_resource","extract_resource","fade_in","fade_in","fade_out","far","far","far","far","far","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch","fetch_state","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_fetch","filter_state","finish","finished","finished","first_pressed_position","first_update","first_update","fit_canvas_to_parent","fit_canvas_to_parent","fit_canvas_to_parent","flip_x","flip_x","flip_y","flip_y","floor","floor","floor","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focused","for_each","for_each","for_each_mut","for_each_mut","for_each_unchecked","force","force","force_mut","force_read_only_component_access","format","format","forward","forward","fov","fract","fract","fract","fragment_shader","free_unused_assets","friction_lerp","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_bits","from_buffer","from_center_half_size","from_center_size","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_components","from_corners","from_diagonal","from_diagonal","from_diagonal","from_dynamic","from_euler","from_euler","from_euler","from_fd","from_filelike","from_glsl","from_grid","from_into_filelike","from_into_socketlike","from_iter","from_iter","from_iter","from_layers","from_mat2","from_mat3","from_mat3","from_mat3","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_matrix","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_quat","from_quat","from_raw","from_raw","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_rotation_translation","from_scaled_axis","from_seconds","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_socketlike","from_spirv","from_stage","from_transform","from_transform","from_translation","from_translation","from_translation","from_type","from_type","from_type","from_type","from_type","from_value","from_value","from_vec4","from_wgsl","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyz","from_xyzw","frustum","frustum","func","g","gamepad","gamepad","gamepad","gamepad","gamepad_face_buttons","gamepads","ge","generate_tangents","generation","generation","get","get","get","get","get","get","get","get","get","get","get_added_plugins","get_at","get_by_id","get_channel","get_component","get_component_mut","get_component_unchecked_mut","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_components","get_current","get_current_mut","get_driver","get_entity","get_entity","get_entity_mut","get_executor","get_executor_mut","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage","get_fixed_timestep_child_substage_mut","get_fixed_timestep_child_substage_mut","get_fixed_timestep_child_substage_mut","get_fixed_timestep_child_substage_mut","get_fixed_timestep_stage","get_fixed_timestep_stage","get_fixed_timestep_stage","get_fixed_timestep_stage","get_fixed_timestep_stage_mut","get_fixed_timestep_stage_mut","get_fixed_timestep_stage_mut","get_fixed_timestep_stage_mut","get_group_load_state","get_handle","get_handle","get_handle_path","get_handle_untyped","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_index_buffer_bytes","get_inner","get_just_pressed","get_just_pressed","get_just_released","get_just_released","get_last_change_tick","get_last_change_tick","get_load_state","get_manual","get_many","get_many","get_many_mut","get_many_mut","get_mesh_vertex_buffer_layout","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut_by_id","get_mut_unchecked","get_non_send_resource","get_non_send_resource_mut","get_non_send_resource_unchecked_mut","get_or_insert_with","get_or_spawn","get_or_spawn","get_param","get_param","get_pressed","get_pressed","get_pressed","get_primary","get_primary_mut","get_projection_matrix","get_projection_matrix","get_projection_matrix","get_reader","get_reader_current","get_released","get_released","get_resource","get_resource_by_id","get_resource_mut","get_resource_mut_by_id","get_resource_or_insert_with","get_resource_unchecked_mut","get_serializable","get_serializable","get_single","get_single","get_single","get_single_mut","get_single_mut","get_single_mut","get_single_unchecked","get_single_unchecked_manual","get_sparse_set_index","get_stage","get_stage_mut","get_sub_app","get_sub_app_mut","get_texture_index","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_unchecked","get_unchecked","get_vertex_buffer_data","global","global_transform","global_transform","global_transform","global_transform","global_transform","grab","grab_volume","gravity","gravity","grid_size","gt","half_size","handle","handle","handle_clashes","handle_type","handle_type","has_collision","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hdr","height","height","height","hex","hsl","hsla","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","ids","idx","ignore_all_ambiguities","image","import_path","import_path","imports","imports","inactives","increment_change_tick","increment_strong_count","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_of","index_of","index_of","index_of","index_of","index_of","index_of","index_of","indices","indices","indices_mut","info","info","info","info_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_asset_loader","init_asset_loader","init_component","init_component_with_descriptor","init_debug_asset_loader","init_debug_asset_loader","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_fetch","init_non_send_resource","init_non_send_resource","init_resource","init_resource","init_resource","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","init_state","initial_size","initial_size","initialize","initialize","input_map","insert","insert","insert","insert_at","insert_attribute","insert_children","insert_children","insert_children","insert_chord","insert_modified","insert_multiple","insert_non_send_resource","insert_non_send_resource","insert_or_spawn_batch","insert_or_spawn_batch","insert_resource","insert_resource","insert_resource","insert_resource_by_id","inset","inspect_entity","install_asset","install_asset","install_asset","install_asset","install_asset","instance_handle","instant_started","internal_system","intersect","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_conditional","into_descriptor","into_egui","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_raw","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_resettable","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_system","into_system","into_value","inverse","inverse","inverse","inverse","io","is","is","is","is_active","is_added","is_added","is_added","is_added","is_added","is_added","is_added","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","is_changed","is_channel","is_compressed","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_exclusive","is_exclusive","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_focused","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_normalized","is_normalized","is_normalized","is_normalized","is_paused","is_playing_sound","is_playing_sound","is_playing_sound","is_plugin_added","is_resource_added","is_resource_changed","is_send","is_send","is_strong","is_strong","is_terminal","is_unique","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_visible","is_visible","is_visible_in_hierarchy","is_visible_in_hierarchy","is_visible_in_view","is_visible_in_view","is_weak","is_weak","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_ancestors","iter_ancestors","iter_combinations","iter_combinations","iter_combinations_mut","iter_combinations_mut","iter_combinations_unchecked","iter_combinations_unsafe","iter_current_update_events","iter_descendants","iter_descendants","iter_entities","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_inner","iter_inputs","iter_just_cancelled","iter_just_pressed","iter_just_released","iter_manual","iter_many","iter_many","iter_many_mut","iter_many_mut","iter_many_unsafe","iter_mut","iter_mut","iter_mut","iter_mut","iter_stages","iter_unchecked","iter_unsafe","iter_with_id","jump","jump_speed","jump_through","jump_volume","just_cancelled","just_cancelled","just_finished","just_pressed","just_pressed","just_pressed","just_pressed","just_pressed","just_released","just_released","just_released","just_released","just_released","key_codes","kind","kind","label","label","label","label","label","label","label","label_discard_if_duplicate","label_discard_if_duplicate","labellers","labels","land","land_volume","last_change_tick","last_change_tick","last_change_tick","last_change_tick","last_change_tick","last_change_tick","last_changed","last_changed","last_changed","last_changed","last_tick_check","last_update","last_update","layer","layers","layers","le","left","left","left","left","left_stick","len","len","len","len","len","len","len","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","linear","linear_fade_in","linear_fade_in","linear_fade_out","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load","load_folder","load_glob","load_progress","load_progress","load_untyped","local","local_x","local_y","local_z","lock_accum","log","logical_target_size","logical_viewport_rect","logical_viewport_size","look_at","look_at_lh","look_at_rh","look_to_lh","look_to_rh","looking_at","loop_from","looped","lt","machine","main_thread_validator","make_mut","make_strong","make_writer","many","many_mut","map","map","map_entities","map_entities","map_unchanged","map_unchanged","map_unchanged","mark_unused_assets","marker","marker","marker","marker","marker","matched_archetype_ids","matched_archetypes","matched_table_ids","matched_tables","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","matches_component_set","max","max","max","max","max","max","max","max","max","max","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_level_hint","max_level_hint","max_size","max_size","max_total_threads","merge","meta","min","min","min","min","min","min","min","min","min","min","min_camera_size","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_total_threads","mode","mode","mode","mode","mode","modified","monitor","mouse_motion","mouse_motion","mouse_motion_x","mouse_motion_y","mouse_wheel","mouse_wheel","mouse_wheel_x","mouse_wheel_y","move_lerp_factor","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_transform","mul_transform","mul_vec2","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec4","must_read_resource","mutate","n_matching","name","name","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","ndc_to_world","ne","near","near","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","negative_low","negative_only","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_archetype","new_archetype","new_cyclic","new_empty","new_fill","new_from_entities","new_span","new_uninit","new_uninit_slice","new_with_far","new_zeroed","new_zeroed_slice","next","next","next","non_send_resource","non_send_resource_mut","none","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","not","not","not","not","not","not","not","not","not","offset","oldest_event_count","on_enter","on_enter","on_enter_set","on_exit","on_exit","on_exit_set","on_in_stack_update","on_in_stack_update","on_inactive_update","on_inactive_update","on_inactive_update_set","on_pause","on_pause","on_pause_set","on_resume","on_resume","on_resume_set","on_update","on_update","on_update_set","options_from_derive","options_from_derive","origin","orthographic_lh","orthographic_rh","orthographic_rh_gl","overwrite_pop","overwrite_push","overwrite_replace","overwrite_restart","overwrite_set","p0","p0","p0","p0","p0","p0","p0","p0","p1","p1","p1","p1","p1","p1","p1","p2","p2","p2","p2","p2","p2","p3","p3","p3","p3","p3","p4","p4","p4","p4","p5","p5","p5","p6","p6","p7","par_for_each","par_for_each","par_for_each_mut","par_for_each_mut","par_for_each_unchecked","parallel","parallel","parallel_systems","param_states","parent","parent","parent","parent","parent_entities","parent_entity","parent_entity","parent_query","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","pause","pause","pause","pause","pause","pause","paused","paused","paused","paused","percent","percent_left","perp","perp","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","phantom","phantom","phase","physical_cursor_position","physical_cursor_position","physical_height","physical_height","physical_target_size","physical_viewport_rect","physical_viewport_size","physical_width","physical_width","physics","pin","pipe","pipe","pipe","play","play","play","player_camera_box_size","player_info","players","plugin_name_added","plugin_registry","pop","pos","pos","position","position","position","position","position","position","position","positive_low","positive_only","powf","powf","powf","prepare_asset","prepare_asset","present_mode","present_mode","present_mode","press","press","pressed","pressed","pressed","pressed","pressed","pressed","pressed","pressed","pressed_for_gamepad","pressed_for_gamepad","pressed_for_gamepad","previous_duration","primary","primary_mut","primitive_topology","primitive_topology","priority","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","projection","projection","projection_matrix","provide","provide","provide","ptr","ptr_eq","push","push_children","push_children","push_children","push_children","que","que","query","query_filtered","queue","r","radius_vec3a","rate_lock","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_delta","raw_delta","raw_delta_seconds","raw_delta_seconds","raw_delta_seconds_f64","raw_delta_seconds_f64","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_elapsed","raw_elapsed","raw_elapsed_seconds","raw_elapsed_seconds","raw_elapsed_seconds_f64","raw_elapsed_seconds_f64","raw_elapsed_seconds_wrapped","raw_elapsed_seconds_wrapped","raw_elapsed_seconds_wrapped_f64","raw_elapsed_seconds_wrapped_f64","raw_elapsed_wrapped","raw_elapsed_wrapped","raw_handle","raw_handle","raw_inputs","read","read_change_tick","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","reader","recip","recip","recip","record","record_follows_from","rect","rects_to_place","ref_change_sender","reflect","reflect","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_hash","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_trait","reflect_unchecked_mut","reflect_unchecked_mut","register_asset_reflect","register_asset_reflect","register_callsite","register_type","register_type_data","reinterpret_size","reinterpret_stacked_2d_as_array","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","relative_speed","relative_speed","relative_speed_f64","release","release","release_all","release_all","release_input","release_input","release_input","release_input_as_gamepad","release_input_as_gamepad","release_input_as_gamepad","released","reload_asset","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","remaining","remaining_secs","remove","remove","remove","remove","remove","remove","remove_at","remove_attribute","remove_channel","remove_children","remove_children","remove_children","remove_non_send_resource","remove_parent","remove_resource","remove_resource","remove_resource_by_id","remove_resource_unchecked","removed","removed_components","removed_with_id","replace","report_ambiguities","represents","requested_height","requested_height","requested_width","requested_width","reserve","reset","reset","reset_all","reset_inputs","reset_inputs","reset_inputs","resizable","resizable","resizable","resize","resize_constraints","resize_constraints","resize_constraints","resource","resource_mut","resource_scope","restart","restart","restore","resume","resume","resume","resume","reverse","rgb","rgb_linear","rgb_u8","rgba","rgba_linear","rgba_u8","right","right","right","right","right_stick","rotate","rotate","rotate","rotate_around","rotate_axis","rotate_local","rotate_local_axis","rotate_local_x","rotate_local_y","rotate_local_z","rotate_x","rotate_y","rotate_z","rotation","round","round","round","row","row","row","run","run","run","run","run","run","run","run","run_criteria","run_criteria","run_criteria","run_if","run_if","run_if","run_if_not","run_if_not","run_if_not","run_if_resource_added","run_if_resource_added","run_if_resource_added","run_if_resource_equals","run_if_resource_equals","run_if_resource_equals","run_if_resource_exists","run_if_resource_exists","run_if_resource_exists","run_if_resource_removed","run_if_resource_removed","run_if_resource_removed","run_in_bevy_state","run_in_bevy_state","run_in_bevy_state","run_in_state","run_in_state","run_in_state","run_not_in_bevy_state","run_not_in_bevy_state","run_not_in_bevy_state","run_not_in_state","run_not_in_state","run_not_in_state","run_on_event","run_on_event","run_on_event","run_once","run_unless_resource_equals","run_unless_resource_equals","run_unless_resource_equals","run_unless_resource_exists","run_unless_resource_exists","run_unless_resource_exists","run_unsafe","run_unsafe","runner","sampler_descriptor","samples","scale","scale","scale","scale_factor","scale_factor","scale_factor_override","scale_factor_override","scale_factor_override","scaling_mode","schedule","scheduled","scratch_world","seek_by","seek_to","select","select","select","select","select","select","select","select","select","send","send","send_batch","send_default","send_default","send_event","send_event_batch","send_event_default","send_input","send_input","send_input","send_input_as_gamepad","send_input_as_gamepad","send_input_as_gamepad","serializable","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server","server","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set_a","set_action_data","set_apply_buffers","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_archetype","set_b","set_changed","set_changed","set_changed","set_changed","set_cursor_grab_mode","set_cursor_icon","set_cursor_position","set_cursor_visibility","set_decorations","set_duration","set_elapsed","set_enter_stage","set_enter_stage","set_enter_stage","set_enter_stage","set_enter_stage","set_executor","set_exit_stage","set_exit_stage","set_exit_stage","set_exit_stage","set_exit_stage","set_g","set_gamepad","set_import_path","set_indices","set_last_change_tick","set_last_change_tick","set_last_changed","set_last_changed","set_last_changed","set_last_changed","set_maximized","set_metadata","set_minimized","set_mode","set_mode","set_must_read_resource","set_panning","set_panning","set_panning","set_panning","set_parent","set_playback_rate","set_playback_rate","set_playback_rate","set_playback_rate","set_position","set_present_mode","set_r","set_rate_lock","set_relative_speed","set_relative_speed_f64","set_resizable","set_resize_constraints","set_resolution","set_run_criteria","set_run_criteria","set_runner","set_scale_factor_override","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_table","set_title","set_untracked","set_visible_in_view","set_volume","set_volume","set_volume","set_volume","set_wrap_period","settings","shape","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink","shrink_to_fit","signum","signum","signum","signum","signum","signum","single","single","single","single","single_mut","single_mut","single_mut","single_threaded","size","size","size","size","size","slerp","slow_fall_speed","snapshot","sound","sound_capacity","sounds","source","source","source","sparse_set_index","spawn","spawn","spawn","spawn","spawn_batch","spawn_batch","spawn_bundle","spawn_bundle","spawn_bundle","spawn_empty","spawn_empty","spawn_empty","spawn_empty","speed","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","sprite","sprite","stable_maps","stack","stage","stage","stage_order","stage_run_criteria","stages","stages","stages","start_from","startup","startup","state","state","state","state","state","state","state","state","state","states","states","stats","step","step","steps_per_second","stop","stop","stop","stop","stop_threshold","stopwatch","storages","storages","strong_count","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_app","sub_app_mut","sub_apps","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swap","symmetric","symmetric","system_adapter","system_meta","systems","systems_modified","take","target","task_pool_options","terminal_velocity","texture","texture","texture","texture_atlas","texture_descriptor","texture_handles","texture_view_descriptor","textures","tick","tick","ticks","ticks","ticks","ticks","ticks","tile_size","tilemap","tiles","times_finished_this_tick","times_finished_this_tick","title","title","title","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_bits","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_readonly","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","tonemapping","tonemapping","top","trace","trace_span","transform","transform","transform","transform","transform","transform_point","transform_point","transform_point2","transform_point3","transform_point3a","transform_vector2","transform_vector3","transform_vector3a","transition","translate_around","translation","translation","translation_mut","translation_vec3a","transparent","transpose","transpose","transpose","truncate","truncate","truncate","truncate","truncate","truncate","try_close","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_dynamic","try_new","try_new_uninit","try_new_zeroed","try_normalize","try_normalize","try_normalize","try_pin","try_unwrap","tween","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","type_uuid","typed","typed_weak","ulid","ulid","ulid","ulid","ulid","ulid","uninitialized_at_end","uninitialized_at_start","uninitialized_before_commands","uninitialized_parallel","uninitialized_run_criteria","union","union_point","unpause","unpause","unwrap_or_clone","up","up","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update","update","update","update","update","update_actual_position_from_backend","update_actual_size_from_backend","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetype_component_access","update_archetypes","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_component_access","update_cursor_physical_position_from_backend","update_focused_status_from_backend","update_input","update_scale_factor_from_backend","update_system","update_with_instant","validate_world","value","value","value","value","value","value","value","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_index","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_name","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variant_type","variants","vec_system_container_debug","vecdeque","viewport","viewport_to_world","visibility","visibility","visibility","visibility","visible_entities","visible_entities","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w_axis","walk_speed","warn","warn_span","wasd","watch_for_changes","weak","weak","weak_count","weak_from_u64","which_pressed","width","width","width","window","window_origin","windows","with","with_boxed_io","with_children","with_children","with_children","with_deadzone","with_deadzone","with_easing","with_enter_stage","with_enter_system","with_enter_system_set","with_exit_stage","with_exit_system","with_exit_system_set","with_import_path","with_label","with_num_threads","with_panning","with_playback_rate","with_rate_lock","with_rotation","with_run_criteria","with_run_criteria","with_run_criteria","with_run_criteria","with_scale","with_stage","with_stage","with_stage_after","with_stage_before","with_system","with_system","with_system","with_system_in_stage","with_system_run_criteria","with_system_set","with_translation","with_volume","without","world","world","world","world","world","world","world_id","world_id","world_to_ndc","world_to_viewport","wrap_period","wrap_period","write","write","write","write","write","write","write","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","ww","www","www","www","wwww","wwww","wwww","wwwx","wwwx","wwwx","wwwy","wwwy","wwwy","wwwz","wwwz","wwwz","wwx","wwx","wwx","wwxw","wwxw","wwxw","wwxx","wwxx","wwxx","wwxy","wwxy","wwxy","wwxz","wwxz","wwxz","wwy","wwy","wwy","wwyw","wwyw","wwyw","wwyx","wwyx","wwyx","wwyy","wwyy","wwyy","wwyz","wwyz","wwyz","wwz","wwz","wwz","wwzw","wwzw","wwzw","wwzx","wwzx","wwzx","wwzy","wwzy","wwzy","wwzz","wwzz","wwzz","wx","wx","wx","wxw","wxw","wxw","wxww","wxww","wxww","wxwx","wxwx","wxwx","wxwy","wxwy","wxwy","wxwz","wxwz","wxwz","wxx","wxx","wxx","wxxw","wxxw","wxxw","wxxx","wxxx","wxxx","wxxy","wxxy","wxxy","wxxz","wxxz","wxxz","wxy","wxy","wxy","wxyw","wxyw","wxyw","wxyx","wxyx","wxyx","wxyy","wxyy","wxyy","wxyz","wxyz","wxyz","wxz","wxz","wxz","wxzw","wxzw","wxzw","wxzx","wxzx","wxzx","wxzy","wxzy","wxzy","wxzz","wxzz","wxzz","wy","wy","wy","wyw","wyw","wyw","wyww","wyww","wyww","wywx","wywx","wywx","wywy","wywy","wywy","wywz","wywz","wywz","wyx","wyx","wyx","wyxw","wyxw","wyxw","wyxx","wyxx","wyxx","wyxy","wyxy","wyxy","wyxz","wyxz","wyxz","wyy","wyy","wyy","wyyw","wyyw","wyyw","wyyx","wyyx","wyyx","wyyy","wyyy","wyyy","wyyz","wyyz","wyyz","wyz","wyz","wyz","wyzw","wyzw","wyzw","wyzx","wyzx","wyzx","wyzy","wyzy","wyzy","wyzz","wyzz","wyzz","wz","wz","wz","wzw","wzw","wzw","wzww","wzww","wzww","wzwx","wzwx","wzwx","wzwy","wzwy","wzwy","wzwz","wzwz","wzwz","wzx","wzx","wzx","wzxw","wzxw","wzxw","wzxx","wzxx","wzxx","wzxy","wzxy","wzxy","wzxz","wzxz","wzxz","wzy","wzy","wzy","wzyw","wzyw","wzyw","wzyx","wzyx","wzyx","wzyy","wzyy","wzyy","wzyz","wzyz","wzyz","wzz","wzz","wzz","wzzw","wzzw","wzzw","wzzx","wzzx","wzzx","wzzy","wzzy","wzzy","wzzz","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","xw","xw","xw","xww","xww","xww","xwww","xwww","xwww","xwwx","xwwx","xwwx","xwwy","xwwy","xwwy","xwwz","xwwz","xwwz","xwx","xwx","xwx","xwxw","xwxw","xwxw","xwxx","xwxx","xwxx","xwxy","xwxy","xwxy","xwxz","xwxz","xwxz","xwy","xwy","xwy","xwyw","xwyw","xwyw","xwyx","xwyx","xwyx","xwyy","xwyy","xwyy","xwyz","xwyz","xwyz","xwz","xwz","xwz","xwzw","xwzw","xwzw","xwzx","xwzx","xwzx","xwzy","xwzy","xwzy","xwzz","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxw","xxww","xxww","xxww","xxwx","xxwx","xxwx","xxwy","xxwy","xxwy","xxwz","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyw","xyww","xyww","xyww","xywx","xywx","xywx","xywy","xywy","xywy","xywz","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xz","xzw","xzw","xzw","xzww","xzww","xzww","xzwx","xzwx","xzwx","xzwy","xzwy","xzwy","xzwz","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","yw","yw","yw","yww","yww","yww","ywww","ywww","ywww","ywwx","ywwx","ywwx","ywwy","ywwy","ywwy","ywwz","ywwz","ywwz","ywx","ywx","ywx","ywxw","ywxw","ywxw","ywxx","ywxx","ywxx","ywxy","ywxy","ywxy","ywxz","ywxz","ywxz","ywy","ywy","ywy","ywyw","ywyw","ywyw","ywyx","ywyx","ywyx","ywyy","ywyy","ywyy","ywyz","ywyz","ywyz","ywz","ywz","ywz","ywzw","ywzw","ywzw","ywzx","ywzx","ywzx","ywzy","ywzy","ywzy","ywzz","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxw","yxww","yxww","yxww","yxwx","yxwx","yxwx","yxwy","yxwy","yxwy","yxwz","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyw","yyww","yyww","yyww","yywx","yywx","yywx","yywy","yywy","yywy","yywz","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yz","yzw","yzw","yzw","yzww","yzww","yzww","yzwx","yzwx","yzwx","yzwy","yzwy","yzwy","yzwz","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z_axis","z_axis","zoom_in_lerp_factor","zoom_out_lerp_factor","zw","zw","zw","zww","zww","zww","zwww","zwww","zwww","zwwx","zwwx","zwwx","zwwy","zwwy","zwwy","zwwz","zwwz","zwwz","zwx","zwx","zwx","zwxw","zwxw","zwxw","zwxx","zwxx","zwxx","zwxy","zwxy","zwxy","zwxz","zwxz","zwxz","zwy","zwy","zwy","zwyw","zwyw","zwyw","zwyx","zwyx","zwyx","zwyy","zwyy","zwyy","zwyz","zwyz","zwyz","zwz","zwz","zwz","zwzw","zwzw","zwzw","zwzx","zwzx","zwzx","zwzy","zwzy","zwzy","zwzz","zwzz","zwzz","zx","zx","zx","zx","zx","zx","zxw","zxw","zxw","zxww","zxww","zxww","zxwx","zxwx","zxwx","zxwy","zxwy","zxwy","zxwz","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zy","zyw","zyw","zyw","zyww","zyww","zyww","zywx","zywx","zywx","zywy","zywy","zywy","zywz","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zz","zzw","zzw","zzw","zzww","zzww","zzww","zzwx","zzwx","zzwx","zzwy","zzwy","zzwy","zzwz","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","handle","handle","handle","angular_velocity","angular_velocity","angular_velocity","arm_delay","arm_delay","arm_delay","arm_sound","arm_sound_handle","armed_anim_end","armed_anim_fps","armed_anim_start","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","body_offset","body_offset","body_offset","body_offset","body_offset","body_offset","body_offset","body_size","body_size","body_size","body_size","body_size","body_size","body_size","bounciness","bounciness","bounciness","break_sound","break_timeout","breaking_anim_fps","breaking_anim_frames","breaking_atlas","can_rotate","can_rotate","can_rotate","comfortable_scared_distance","comfortable_spawn_distance","cooldown_frames","damage_region_lifetime","damage_region_lifetime","damage_region_lifetime","damage_region_size","damage_region_size","damage_region_size","end_frame","end_frame","explosion_anim_fps","explosion_anim_frames","explosion_atlas","explosion_atlas","explosion_atlas","explosion_fps","explosion_fps","explosion_frames","explosion_frames","explosion_lifetime","explosion_lifetime","explosion_sound","explosion_sound","explosion_sound","explosion_sound_handle","explosion_sound_handle","explosion_volume","fps","fps","fuse_sound","fuse_sound","fuse_sound_handle","fuse_sound_volume","fuse_time","fuse_time","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","map_icon","player_decoration","run_speed","same_level_threshold","sound","sound","sound_volume","sound_volume","spring_velocity","start_frame","start_frame","throw_velocity","throw_velocity","throw_velocity","throw_velocity","throw_velocity","timer_delay_max","walk_speed","alpha","alpha","alpha","blue","blue","green","green","hue","lightness","red","red","saturation","id","id","id","path_buf","path_buf","0","0","0","0","0","1","1","0","0","0","0","position","position","position","position","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","AXES","AXES","AXES","AXES","Affine2","Affine3A","AlreadyBorrowed","AnimatedSprite","AssetPath","AssetProvider","AssetProviderMut","AssetProviderRef","AssetProviders","AssetProvidersResource","Atlas","AtlasSprite","AtomicComponentStore","AtomicComponentStoreRef","AtomicComponentStoreRefMut","AtomicRef","AtomicRefCell","AtomicRefMut","AtomicResource","AudioEvent","AudioEvents","AudioSource","BVec2","BVec3","BVec3A","BVec4","BVec4A","BevyWorld","BitFmt","BitSet","BitSetVec","BorrowError","BorrowMutError","Camera","CameraShake","CameraTraumaEvents","ClearColor","CommandQueue","Commands","Comp","CompMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","CoreStage","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","Deref","DerefMut","DispatcherExecutionFailed","EcsData","EcsError","Entities","EntitiesIterWith","Entity","EntityIterator","EulerRot","FALSE","FALSE","First","FrameTime","Handle","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IVec2","IVec3","IVec4","Image","IntoBevy","IntoSystem","Iter","Key","KeyError","Last","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NotAscii","NotInitialized","ONE","ONE","ONE","ONE","Param","PlaySound","PostUpdate","PreUpdate","Quat","QueryItem","RAND_BITS","RawFns","Res","ResAssetProviders","ResMut","Resources","ShakeNoise","SimpleSystemStage","Sprite","StageLabel","State","System","SystemError","SystemParam","SystemResult","SystemStage","SystemStages","TIME_BITS","TRUE","TRUE","Tile","TileLayer","Time","TooLong","Transform","TypeUlid","TypeUlid","TypeUlidCollision","TypedComponentOps","TypedEcsData","ULID","UVec2","UVec3","UVec4","Ulid","UlidMap","UntypedAssetProvider","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","UntypedHandle","UntypedResource","UntypedResourceInfo","UntypedResources","Update","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","W","Window","World","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","YXZ","YZX","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","_phantom","_phantom","_phantom","_phantom","_phantom","_phantom","_private","_private","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","active","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat3","add_mat3","add_mat4","add_system","add_system","add_system_to_stage","add_trauma","alive","all","all","angle_between","angle_between","angle_between","angle_between","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_bitset","apply_bitset","apply_bitset","apply_bitset","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat3","as_dvec3","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f32","as_ivec2","as_ivec3","as_ivec3","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_uvec2","as_uvec3","as_uvec3","as_uvec4","as_vec2","as_vec3","as_vec3a","as_vec4","atlas","atlas","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_test","bit_xor","bitand","bitand","bitand_assign","bitand_assign","bitmask","bitmask","bitor","bitor","bitor","bitor_assign","bitor_assign","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitset","bitxor","bitxor","bitxor_assign","bitxor_assign","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","cell","cell","center","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clear_killed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fn","clone_fn","clone_fn","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col_mut","col_mut","col_mut","col_mut","components","components","components","components","components","components","components","components","conjugate","contains","contains","contains","contains","contains","create","create_bitset","cross","cross","current_id","current_id","current_id","current_id","datetime","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","decay_rate","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","determinant","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dquat","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_fn","drop_fn","drop_fn","dvec2","dvec3","dvec4","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","elapsed","end","entities","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","exp","extend","extend","extend","f32","f64","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_map","filter_map","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_type","fps","fract","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_components","from_components_unsafe","from_components_unsafe","from_datetime","from_datetime_with_source","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_parts","from_quat","from_quat","from_quat","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_socketlike","from_str","from_string","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","generation","generation","generations","generations","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_bevy_handle","get_bevy_handle","get_bevy_handle_untyped","get_by_uuid","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_state","get_state","get_state","get_state","get_state","get_state","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","grid_size","has_deleted","hash","hash","hash","hash","hash","hash","hash","hash","height","i32","id","id","id","id","id","idx","image","impl_bitset","increment","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize_systems","insert","insert","insert","insert","insert","insert","insert_stage_after","insert_stage_before","install","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bevy","into_bevy","into_bevy","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_resettable","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_untyped","into_untyped","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_alive","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_nil","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_with","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","ivec2","ivec3","ivec4","key","kill","killed","killed","label","layout","layout","layout","layout","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","load","load_progress","load_progress","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","maintain","map","map","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","max","max","max","max","max_angle_rad","max_element","max_element","max_element","max_element","max_id","max_offset","min","min","min","min","min_element","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat3","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec4","multiunzip","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_raw","next","next","next","next","next","next","next_id","next_id","next_id","nil","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_relative_to","not","not","ops","ops","ops","orthographic_lh","orthographic_rh","orthographic_rh_gl","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","perp","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","phantom","play","powf","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","provide","provide","providers","quat","query","queue","queue","queue","random","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","recip","recip","recip","recip","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","remove","remove","remove","remove","remove","remove","repeat","resources","resources","rotate","rotation","round","round","round","round","row","row","row","row","run","run","run","run","run","run_initialized_system","run_system","scale","select","select","select","select","send","send","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","signum","signum","signum","signum","size","slerp","splat","splat","splat","splat","splat","splat","stages","start","storage","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat3","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swizzles","system","system","systems","tile_size","tiles","timer","timestamp_ms","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","translation","translation","translation","translation","translation","transpose","transpose","transpose","transpose","trauma","truncate","truncate","truncate","try_borrow","try_borrow_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get","try_get_by_uuid","try_get_mut","try_init","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","try_remove","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ids","type_ids","type_ids","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","typed","u32","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","untyped","untyped","untyped","untyped","untyped","untyped","untyped_mut","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uvec2","uvec3","uvec4","value","value","value","vec2","vec3","vec3a","vec4","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","w","w_axis","w_axis","with_core_stages","with_source","with_trauma","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","www","www","wwww","wwww","wwwx","wwwx","wwwy","wwwy","wwwz","wwwz","wwx","wwx","wwxw","wwxw","wwxx","wwxx","wwxy","wwxy","wwxz","wwxz","wwy","wwy","wwyw","wwyw","wwyx","wwyx","wwyy","wwyy","wwyz","wwyz","wwz","wwz","wwzw","wwzw","wwzx","wwzx","wwzy","wwzy","wwzz","wwzz","wx","wx","wxw","wxw","wxww","wxww","wxwx","wxwx","wxwy","wxwy","wxwz","wxwz","wxx","wxx","wxxw","wxxw","wxxx","wxxx","wxxy","wxxy","wxxz","wxxz","wxy","wxy","wxyw","wxyw","wxyx","wxyx","wxyy","wxyy","wxyz","wxyz","wxz","wxz","wxzw","wxzw","wxzx","wxzx","wxzy","wxzy","wxzz","wxzz","wy","wy","wyw","wyw","wyww","wyww","wywx","wywx","wywy","wywy","wywz","wywz","wyx","wyx","wyxw","wyxw","wyxx","wyxx","wyxy","wyxy","wyxz","wyxz","wyy","wyy","wyyw","wyyw","wyyx","wyyx","wyyy","wyyy","wyyz","wyyz","wyz","wyz","wyzw","wyzw","wyzx","wyzx","wyzy","wyzy","wyzz","wyzz","wz","wz","wzw","wzw","wzww","wzww","wzwx","wzwx","wzwy","wzwy","wzwz","wzwz","wzx","wzx","wzxw","wzxw","wzxx","wzxx","wzxy","wzxy","wzxz","wzxz","wzy","wzy","wzyw","wzyw","wzyx","wzyx","wzyy","wzyy","wzyz","wzyz","wzz","wzz","wzzw","wzzw","wzzx","wzzx","wzzy","wzzy","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xww","xww","xwww","xwww","xwwx","xwwx","xwwy","xwwy","xwwz","xwwz","xwx","xwx","xwxw","xwxw","xwxx","xwxx","xwxy","xwxy","xwxz","xwxz","xwy","xwy","xwyw","xwyw","xwyx","xwyx","xwyy","xwyy","xwyz","xwyz","xwz","xwz","xwzw","xwzw","xwzx","xwzx","xwzy","xwzy","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxww","xxww","xxwx","xxwx","xxwy","xxwy","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyww","xyww","xywx","xywx","xywy","xywy","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xzw","xzw","xzww","xzww","xzwx","xzwx","xzwy","xzwy","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yww","yww","ywww","ywww","ywwx","ywwx","ywwy","ywwy","ywwz","ywwz","ywx","ywx","ywxw","ywxw","ywxx","ywxx","ywxy","ywxy","ywxz","ywxz","ywy","ywy","ywyw","ywyw","ywyx","ywyx","ywyy","ywyy","ywyz","ywyz","ywz","ywz","ywzw","ywzw","ywzx","ywzx","ywzy","ywzy","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxww","yxww","yxwx","yxwx","yxwy","yxwy","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyww","yyww","yywx","yywx","yywy","yywy","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yzw","yzw","yzww","yzww","yzwx","yzwx","yzwy","yzwy","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zww","zww","zwww","zwww","zwwx","zwwx","zwwy","zwwy","zwwz","zwwz","zwx","zwx","zwxw","zwxw","zwxx","zwxx","zwxy","zwxy","zwxz","zwxz","zwy","zwy","zwyw","zwyw","zwyx","zwyx","zwyy","zwyy","zwyz","zwyz","zwz","zwz","zwzw","zwzw","zwzx","zwzx","zwzy","zwzy","zwzz","zwzz","zx","zx","zx","zx","zx","zxw","zxw","zxww","zxww","zxwx","zxwx","zxwy","zxwy","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zyw","zyw","zyww","zyww","zywx","zywx","zywy","zywy","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zzw","zzw","zzww","zzww","zzwx","zzwx","zzwy","zzwy","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","sound_source","volume","0","0","0","0","BVec2","BVec3","BVec3A","BVec4","BVec4A","w","x","x","x","y","y","y","z","z","0","0","0","0","Affine2","Affine3A","Mat2","Mat3","Mat3A","Mat4","Quat","Vec2","Vec3","Vec3A","Vec4","mat2","mat3","mat3a","mat4","matrix2","matrix3","quat","translation","translation","vec2","vec3","vec3a","vec4","w_axis","x","x","x_axis","x_axis","x_axis","y","y","y_axis","y_axis","y_axis","z","z_axis","z_axis","z_axis","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","IVec2","IVec3","IVec4","ivec2","ivec3","ivec4","w","x","x","x","y","y","y","z","z","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","UVec2","UVec3","UVec4","uvec2","uvec3","uvec4","w","x","x","x","y","y","y","z","z","Aspect","Box","Capsule","CapsuleUvProfile","Circle","Cube","Fixed","Icosphere","Plane","Quad","RegularPolygon","Torus","UVSphere","Uniform","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","default","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","flip","flipped","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","latitudes","longitudes","max_x","max_y","max_z","min_x","min_y","min_z","new","new","new","new","new","radius","radius","radius","radius","radius","radius","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","ring_radius","rings","sectors","sides","size","size","size","stacks","subdivisions","subdivisions_segments","subdivisions_sides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uv_profile","vertices","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ignore","new","unwrap","0","JumpySessionPlugin","Session","SessionManager","SessionStage","Update","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","commands","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","menu_camera","play_sounds","restart","session","start","stop","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","update_game","update_input","vzip","vzip","vzip","vzip","world","0","0","0","Args","DisableMenuInput","EguiFontDefinitions","JumpyUiPlugin","StateInstances","WidgetAdjacencies","WidgetAdjacency","WidgetAdjacencyEntry","WidgetId","WidgetSystem","above","adjacencies","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","below","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","debug_tools","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","down","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","get_hash","handle_menu_input","hash","id","init","init","init","init","init","init","init","init","input","instances","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","left","main_menu","map","new","pause_menu","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","right","system","text_boxes","to_left_of","to_owned","to_owned","to_owned","to_right_of","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_egui_fonts","update_ui_scale","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","widget","widget","widgets","with","0","DebugToolsPlugin","FrameDiagState","ShowFameTimeDiagnostics","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","debug_tools_window","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","frame_diagnostic_window","from","from","from","from_world","from_world","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","max_fps","max_frame_time","min_fps","min_frame_time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","Back","Confirm","Down","Left","MenuAction","Pause","Right","Start","ToggleFullscreen","UiInputPlugin","Up","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_dyn_eq","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","dyn_eq","dyn_hash","eq","equals","equivalent","fmt","from","from","get_at","get_hash","hash","index","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","raw_clone","raw_drop","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","Home","HomeMenu","MainMenu","MainMenuBackground","MainMenuPlugin","MapSelect","MenuPage","PlayerSelect","Settings","_phantom","app_exit","apply","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_reflect","as_reflect_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clean_up_main_menu","clone","clone_dynamic","clone_into","clone_type_data","clone_value","commands","component_ids","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_menu_input","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","field","field_at","field_at_mut","field_len","field_mut","from","from","from","from","from","from_components","from_world","game","get_components","get_field","get_field_mut","get_type_info","get_type_registration","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_reflect","into_sample","into_sample","into_sample","into_sample","into_sample","iter_fields","localization","main_menu_system","map_select","menu_page","menu_page","modified_settings","name_at","path","path_mut","player_select","player_select_state","raw_clone","raw_drop","reflect_mut","reflect_owned","reflect_partial_eq","reflect_ref","set","settings","setup_main_menu","storage","system","system","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_info","type_name","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","is_waiting","MapSelectMenu","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","commands","core","deref","deref_mut","downcast","drop","from","game","game_state","handle_match_setup_messages","init","into","into_any","into_any_arc","into_any_rc","into_sample","localization","map_assets","menu_input","menu_page","pause_page","player_select_state","session_manager","system","try_from","try_into","type_id","upcast","vzip","0","PlayerAtlasEguiTextures","PlayerSelectMenu","PlayerSelectPanel","PlayerSelectState","PlayerSlot","active","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas_meta_assets","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","confirmed","core","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","from","from","from","from","from","from_world","from_world","game","game","handle_match_setup_messages","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","into_sample","into_sample","keyboard_input","localization","localization","menu_input","menu_page","player_atlas_egui_textures","player_image","player_meta_assets","player_select_state","player_select_state","players","selected_player","slots","system","system","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","0","Controls","ModifiedSettings","Networking","SettingsMenu","SettingsTab","Sound","TABS","_phantom","adjacencies","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","control_inputs","controls","current_tab","currently_binding_input_idx","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","dyn_eq","eq","equals","equivalent","from","from","from","from_world","from_world","game","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_sample","into_sample","into_sample","localization","menu_input","menu_page","modified_settings","networking","raw_clone","raw_drop","sound","storage","system","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","vzip","vzip","vzip","BindingKind","ControlInputBindingEvents","Gamepad","KeyboardMouse","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","controls_settings_ui","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","format_input","from","from","gamepad_buttons","gamepad_events","get_event","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","keys","mouse","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip","networking_settings_ui","sound_settings_ui","Default","MapSelect","PauseMenuPage","PausePlugin","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dyn_eq","eq","equals","equivalent","from","from","from_world","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","pause_menu_default","pause_menu_map_select","pause_system","raw_clone","raw_drop","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unpause_system","upcast","upcast","vzip","vzip","EguiContextExt","EguiResponseExt","EguiUiExt","bordered_button","bordered_frame","clear_focus","focus_by_default","themed_label","BorderedButton","as_any","as_any_mut","as_bind_group_shader_type","border","borrow","borrow_mut","default_border","deref","deref_mut","downcast","drop","focus_on_hover","focus_on_hover","from","init","into","into_any","into_any_arc","into_any_rc","into_sample","margin","margin","min_size","min_size","new","on_click_border","on_click_border","on_focus_border","on_focus_border","padding","padding","sense","sense","show","text","themed","try_from","try_into","type_id","ui","upcast","vzip","wrap","wrap","BorderedFrame","BorderedFramePrepared","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","background_shape_idx","begin","bg_texture","border_only","border_only","border_scale","border_scale","borrow","borrow","borrow_mut","borrow_mut","content_ui","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","end","frame","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_sample","into_sample","margin","margin","new","padding","padding","paint","show","show_dyn","texture_border_size","texture_size","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vzip","vzip"],"q":["jumpyjumpy::assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::assets::asset_handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::audio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::lines","","","","","","","","","","","","","","","","","","","","","","","jumpy::loading","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::localization","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadatajumpy::metadata::gamemeta_derive_bevy_asset","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadata::localization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadata::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::metadata::uijumpy::platform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::platform::StorageError","jumpy::platform::StorageRequest","","","jumpy::platform::native","jumpy::preludejumpy::prelude::AssetEvent","","","jumpy::prelude::BuiltinElementKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::prelude::Color","","","","","","","","","","","","jumpy::prelude::FileDragAndDrop","","","","","jumpy::prelude::GamepadAxisType","jumpy::prelude::GamepadButtonType","jumpy::prelude::GamepadEventType","","","","","jumpy::prelude::MapLayerKind","","jumpy::prelude::MonitorSelection","jumpy::prelude::MouseButton","jumpy::prelude::PlaybackState","","","","jumpy::prelude::Projection","","jumpy::prelude::UserInput","","","","jumpy::prelude::WindowPosition","jumpy::prelude::bonesjumpy::prelude::bones::AudioEvent","","jumpy::prelude::bones::EcsError","","jumpy::prelude::bones::bool","","","","","","","","","","","","","","","","jumpy::prelude::bones::f32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::prelude::bones::f64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::prelude::bones::i32","","","","","","","","","","","","","","","jumpy::prelude::bones::swizzlesjumpy::prelude::bones::u32","","","","","","","","","","","","","","","jumpy::prelude::shapejumpy::prelude::system_adapter","","","jumpy::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::uijumpy::ui::debug_tools","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menujumpy::ui::main_menu::MenuPage","jumpy::ui::main_menu::map_select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::player_select","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::settings::controls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::main_menu::settings::networking","jumpy::ui::main_menu::settings::sound","jumpy::ui::pause_menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::widgets","","","","","","","","jumpy::ui::widgets::bordered_button","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy::ui::widgets::bordered_frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Plugin for easily drawing lines in the world for debugging …","","","","Data structures for things like assets and settings that …","Systems and utilities related to specific platform support …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper around <code>Handle&lt;T&gt;</code> that also contains the <code>AssetPath</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","A wrapper around <code>Handle&lt;T&gt;</code> that also contains the <code>AssetPath</code>…","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calculate an asset’s full path relative to another asset","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Loops through all the game music as the game is on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The directory to load assets from","","","","","","","","","","","","","","","Returns the argument unchanged.","","","The .game.yaml asset to load at startup","","Hot reload assets","","Calls <code>U::from(self)</code>.","","","","","Set the log level","","","Sets the sync test distance during local play.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","The control inputs that a player may make.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","System param used to load and hot reload the game","","","","","","","","","","","","","","","","","","","","","","Run criteria that waits until the necessary core assets …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","System to check for asset changes and hot reload the game","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","This function is called once when the game starts up and, …","System to run the initial game load","","","","","","","","","","","","","","","","","","","","","","","Plugin for initializing and loading the <code>Localization</code> …","Extension trait to reduce boilerplate when getting values …","","","","","","","","","","","Returns the argument unchanged.","Request message content and get an empty string if it doesn…","","Calls <code>U::from(self)</code>.","","","","","Watch for locale <code>BundleAsset</code> load events and add any new …","","","","","","","","","","","","Helper trait for converting color meta to <code>egui::Color32</code>.","This is a helper to reduce clones on font family strings …","","","","Resource containing the main <code>Handle&lt;GameMeta&gt;</code>.","","","","","","","Binds inputs to player actions","","Global settings, stored and accessed through …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The default locale that will be used if a message is not …","","","","","","","","","","","","","","","The locale setting detected on the user’s system","","","","","","","","","","","Egui texture ID may not be valid on all <code>ImageMeta</code> unless …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Controls for game remotes","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Controls for keyboard player 1","Controls for keyboard player 2","","","","","The handles to the locale bundle assets","","","The address of the matchmaking server to connect to for …","","","","","","","","","","The player controller bindings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The default locale that will be used if a message is not …","","","","The locale setting detected on the user’s system","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","The handles to the locale bundle assets","","","","","","","","","","Binds inputs to player actions","The key used to store the settings in the …","Global settings, stored and accessed through …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Controls for game remotes","Get the input map for the given player index","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Controls for keyboard player 1","Controls for keyboard player 2","The address of the matchmaking server to connect to for …","","The player controller bindings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a helper to reduce clones on font family strings …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codecode>Storage::save()</code> task handle that can be used to check …","","Resource for accessing platform specific persistent …","The type of the inner data in <code>Storage</code>","","","","","","","","","","","","","","","","","","The sender we use to send storage requests to the storage …","","","","","","","","","","","","","The in-memory storage data that we operate on when getting …","A data receiver that gets set when we are awaiting the …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Get a value from the in-memory storage cache.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Get whether or not saving has been completed.","Get whether or not storage has been loaded.","Load from platform storage into memory.","Bevy system that will load the <code>Storage</code> and wait for it to …","Native platform support","","Saves the in-memory storage cache to persistent storage.","Set a value in the in-memory storage cache.","","","","","","","","Try to get a value from the in-memory storage cache.","","","","","","Load from platform storage into memory.","Saves the in-memory storage cache to persistent storage.","Set a value in the in-memory storage cache.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>A</code> key.","","","","Per vertex coloring. Use in conjunction with …","Per vertex joint transform matrix index. Use in …","Per vertex joint transform matrix weight. Use in …","The direction the vertex normal is facing in. Use in …","Where the vertex is located in space. Use in conjunction …","The direction of the vertex tangent. Used for normal …","Texture coordinates for the vertex. Use in conjunction …","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","","The <code>AbntC1</code> key.","The <code>AbntC2</code> key.","Stores the canonical input-method-agnostic representation …","A component that allows the attached entity to drive the …","Allows a type to be used as a gameplay action in an …","","<code>App</code> extension methods for adding new asset types.","Command that adds a child to an entity","Helper trait to make syntax for adding systems to …","A filter on a component that only retains results added …","Indicates that an alias of something is to be created.","Indicates that the user can scroll by dragging the mouse.","Corresponds to <code>KeyCode::LAlt</code> and <code>KeyCode::RAlt</code>.","An <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.","An animated decoration such as seaweed or anemones","The <code>AnyOf</code> query parameter fetches entities with any of the …","The <code>Apostrophe</code> / <code>&#39;</code> key.","A container of app logic and data.","Extension trait with the methods to add to Bevy’s <code>App</code>","Extension trait with the methods to add to Bevy’s <code>App</code>","The <code>Resource</code> that stores the <code>App</code>’s <code>TypeRegistry</code>.","The <code>Apps</code> key.","A thread-safe reference-counting pointer. ‘Arc’ stands …","An arrow. This is the default cursor on most systems.    ","Events that involve assets of type <code>T</code>.","Adds support for Assets to an App.","Loads assets from the filesystem in the background.","Stores Assets of a given type and tracks changes to them.","The <code>Asterik</code> / <code>*</code> key.","The <code>At</code> / <code>@</code> key.","The window’s top-left corner will be placed at the …","The default audio channel","Extension trait to add new audio channels to the …","Channel to play and control audio","Errors that can occur when directly controlling audio","Play and control audio","Different kinds of easing for fade-in and fade-out","Asset for direct audio control","Extension trait to remove some boilerplate when","A Bevy plugin for audio","This resource is used to configure the audio backend at …","A source of audio data","Something went wrong when handling the command in the …","A tween for audio transitions","The position will be set by the window manager.","The <code>Ax</code> key.","Stores the position data of the input devices of type <code>T</code>.","The value of a <code>Gamepad</code> axis has changed.","The <code>B</code> key.","","","","","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 4-dimensional <code>bool</code> vector mask.","The <code>Back</code> / <code>Backspace</code> key.","","The <code>Backslash</code> / <code>\\\\</code> key.","Trait that may be derived to implement a Bevy asset type.","Derive macro for the <code>BonesBevyAsset</code> trait.","Trait implemented for types that may appear in the fields …","Derive macro for the <code>BonesBevyAssetLoad</code> trait.","Creates a borderless window that uses the full size of the …","Trait defining how to build children","Trait that defines adding children to an entity directly …","The kind of built-in","The <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…","","The value of a <code>Gamepad</code> button has changed.","The C button.","The <code>C</code> key.","","","The <code>Calculator</code> key.","The defining component for camera entities, storing …","","","Configuration for the “main 3d render graph”.","","","The <code>Capital</code> key.","The <code>Caret</code> / <code>^</code> key.","Indicates that a cell (or set of cells) may be selected.","Center the window on the monitor.","<code>WorldQuery</code> that tracks changes and additions for component …","A filter on a component that only retains results added or …","Struct for building children onto an entity","Contains references to the child entities of this entity.","A combination of buttons, pressed simultaneously","How should clashing inputs by handled by an <code>InputMap</code>?","A <code>Resource</code> that stores the color that is used to clear the …","Indicates that a column can be resized horizontally.","The <code>Colon</code> / <code>:</code> key.","","A 2d material that renders 2d meshes with a texture tinted …","A component bundle for entities with a <code>Mesh2dHandle</code> and a …","","The <code>Comma</code> / <code>,</code> key.","The audio command que of the audio manager is full","A <code>Command</code> queue to perform impactful changes to the <code>World</code>.","A data type that can be used to store data for an entity.","","The <code>Compose</code> key on Linux.","Algorithmically-computed indication of whether an entity …","Trait to help impl the default helper methods we provide …","Syntax sugar to apply the same conditions and/or labels to …","A <code>Gamepad</code> has been connected.","Indicates that a context menu is available.","Corresponds to <code>KeyCode::LControl</code> and <code>KeyCode::RControl</code>.","The <code>Convert</code> key.","Indicates something is to be copied.","The <code>Copy</code> key.","","Resource containing the session’s <code>CoreMeta</code>.","Adds core functionality to Apps.","The names of the default <code>App</code> stages.","A crab roaming on the ocean floor","The throwable crate item","","A simple crosshair.   ","Uses current monitor of the window.","This will be available as a resource, indicating the …","An event that is sent whenever the user’s cursor enters …","The icon to display for a window’s cursor.","An event that is sent whenever the user’s cursor leaves …","An event reporting that the mouse cursor has moved on a …","The <code>Cut</code> key.","The <code>D</code> key.","","","The default size of the deadzone used by constructor …","A <code>ToggleActions</code> in disabled state.","The down button of the D-Pad.","The left button of the D-Pad.","The right button of the D-Pad.","The up button of the D-Pad.","The platform-dependent default cursor.","This plugin group will add all the default plugins:","The <code>Delete</code> key.","Used for immutable dereferencing operations, like <code>*v</code>.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","An <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.","A <strong>data structure</strong> that can be deserialized from any data …","","Despawns the given entity’s children recursively","Despawns the given entity and all its children recursively","Trait that holds functions for despawning recursively down …","Types that implement reliable change detection.","A <code>Gamepad</code> has been disconnected.","The <code>Down</code> / <code>Down Arrow</code> key.","Corresponds to <code>-y</code>","","Two directional axes combined as one input.","A dynamic channel to play and control audio","Resource to play and control audio in dynamic channels","Generates a dynamic plugin entry point function for the …","The <code>E</code> key.","A <code>ToggleActions</code> in enabled state.","Indicates that an edge of a box is to be moved right …","The right action button of the action pad (i.e. PS: …","","","","","The <code>End</code> key.","Lightweight identifier of an entity.","The <code>Equals</code> / <code>=</code> key.","The <code>Escape</code> / <code>ESC</code> key, next to the <code>F1</code> key.","Euler rotation sequences.","Reads events of type <code>T</code> in order and tracks which events …","Sends events of type <code>T</code>.","An event collection that represents the events that …","Indicates a bidirectional resize cursor.","The <code>F</code> key.","The <code>F1</code> key.","The <code>F10</code> key.","The <code>F11</code> key.","The <code>F12</code> key.","The <code>F13</code> key.","The <code>F14</code> key.","The <code>F15</code> key.","The <code>F16</code> key.","The <code>F17</code> key.","The <code>F18</code> key.","The <code>F19</code> key.","The <code>F2</code> key.","The <code>F20</code> key.","The <code>F21</code> key.","The <code>F22</code> key.","The <code>F23</code> key.","The <code>F24</code> key.","The <code>F3</code> key.","The <code>F4</code> key.","The <code>F5</code> key.","The <code>F6</code> key.","The <code>F7</code> key.","The <code>F8</code> key.","The <code>F9</code> key.","All false.","All false.","All false.","","Marker trait for tween commands that are fading in.","Marker trait for tween commands that are fading out.","","Events related to files being dragged and dropped on a …","The <code>Stage</code> that runs before all other app stages.","A system run criteria that enables systems or stages to …","A Stage that runs a number of child stages with a fixed …","Resource type that allows you to get info about and to …","A trait for types which can be constructed from a …","Derives the <code>FromReflect</code> trait.","Creates an instance of the type this trait is implemented …","Creates a fullscreen window that uses the maximum …","The <code>G</code> key.","","","","The implementation of a Jumpy game session.","Information needed to start a game session.","A gamepad with an associated <code>ID</code>.","An axis of a <code>Gamepad</code>.","A type of a <code>GamepadAxis</code>.","A button of a <code>Gamepad</code>.","A type of a <code>GamepadButton</code>.","An event of a <code>Gamepad</code>.","The data contained in a <code>GamepadEvent</code> or <code>GamepadEventRaw</code>.","A collection of connected <code>Gamepad</code>s.","A convenience trait which combines fetching and …","A convenience trait which combines fetching and …","","Describe the position of an entity relative to the …","Indicates that something can be grabbed.","Indicates that something is grabbed.","The <code>Grave</code> / <code>Backtick</code> / <code>`</code> key.","Grenades item","The <code>H</code> key.","A hand (often used to indicate links in web browsers).    ","A handle into a specific <code>Asset</code> of type <code>T</code>.","A non-generic version of <code>Handle</code>.","A <code>HashMap</code> implementing aHash, a high speed keyed hashing …","A <code>HashSet</code> implementing aHash, a high speed keyed hashing …","Help indicator (often rendered as a “?”)    ","The base plugin for handling <code>Parent</code> and <code>Children</code> components","An extension trait for <code>Query</code> that adds hierarchy related …","The <code>Home</code> key.","","","HSL (hue, saturation, lightness) color with an alpha …","The <code>I</code> key.","An identity <code>GlobalTransform</code> that maps all points in space …","An identity <code>Transform</code> with no translation, rotation, and a …","An identity <code>TransformBundle</code> with no translation, rotation, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","","A <code>Visibility</code>, set as invisible.","A <code>ComputedVisibility</code>, set as invisible.","An invisible <code>SpatialBundle</code>, with no translation, rotation, …","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","","Adds the <code>Image</code> as an asset and makes sure that they are …","Wrapper type to mark a <code>SystemParam</code> as an input.","The system’s input. See <code>In</code> for <code>FunctionSystem</code>s.","Uses monitor with the specified index.","The type contained within this smart pointer","A “press-able” input of type <code>T</code>.","This <code>Bundle</code> allows entities to collect and interpret …","A <code>Plugin</code> that collects <code>Input</code> from disparate sources, …","Maps from raw inputs to an input-method agnostic …","The <code>Insert</code> key, next to the <code>Backspace</code> key.","Command that inserts a child at a given index of a parent…","Extension trait allowing any system to be converted into a …","An extension trait providing the <code>IntoPipeSystem::pipe</code> …","Conversion trait to turn something into a <code>System</code>.","","The <code>J</code> key.","","The <code>K</code> key.","The <code>Kana</code> key.","The <code>Kanji</code> key.","The <code>0</code> key over the letters.","The <code>1</code> key over the letters.","The <code>2</code> key over the letters.","The <code>3</code> key over the letters.","The <code>4</code> key over the letters.","The <code>5</code> key over the letters.","The <code>6</code> key over the letters.","The <code>7</code> key over the letters.","The <code>8</code> key over the letters.","The <code>9</code> key over the letters.","The key code of a <code>KeyboardInput</code>.","","The <code>L</code> key.","The <code>LAlt</code> / <code>Left Alt</code> key. Maps to <code>Left Option</code> on Mac.","The <code>LBracket</code> / <code>Left Bracket</code> key.","The <code>LControl</code> / <code>Left Control</code> key.","","The <code>LShift</code> / <code>Left Shift</code> key.","The <code>LWin</code> / <code>Left Windows</code> key. Maps to <code>Left Command</code> on Mac.","The <code>Stage</code> that runs after all other app stages.","A value which is initialized on the first access.","The <code>Left</code> / <code>Left Arrow</code> key.","Corresponds to <code>-x</code>","The left mouse button.","The horizontal value of the left stick.","The vertical value of the left stick.","The left thumb stick button.","The first left trigger.","The second left trigger.","The value of the left <code>Z</code> button.","A system local <code>SystemParam</code>.","The <code>M</code> key.","","The largest possible axis value.","","","The smallest possible axis value.","The <code>Mail</code> key.","Type for the default audio channel","","","","","","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","The <code>MediaSelect</code> key.","The <code>MediaStop</code> key.","","","The middle mouse button.","The mine item","Minimal plugin group that will add the following plugins:","The <code>Minus</code> / <code>-</code> key.","Send fake input events for testing purposes","The mode button.","","A keyboard modifier that combines two <code>KeyCode</code> values into …","Defines which monitor to use.","A button on a mouse device.","The direction of motion of the mouse wheel.","A buttonlike-input triggered by <code>MouseWheel</code> events","Indicates something is to be moved.    ","Configuration resource for Multi-Sample Anti-Aliasing.","Unique mutable borrow of an entity’s component","The <code>Mute</code> key.","The <code>MyComputer</code> key.","The <code>N</code> key.","All NAN:s.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","","Indicates that an edge of a box is to be moved up (north).","The number of variants of this action type","Component used to identify an entity. Stores a hash for …","The <code>NavigateBackward</code> / <code>Next</code> key.","The <code>NavigateForward</code> / <code>Prior</code> key.","Indicates that an edge of a box is to be moved up and …","Indicates a bidirectional resize cursor.","When you want to change state, insert this as a resource","The <code>NextTrack</code> key.","The <code>NoConvert</code> key.","Indicates that the dragged item cannot be dropped here.","Shared borrow of a non-<code>Send</code> resource.","Unique borrow of a non-<code>Send</code> resource.","This is not a built-in item","The upper action button of the action pad (i.e. PS: …","Cursor showing that something cannot be done.    ","Indicates a bidirectional resize cursor.","The <code>Numlock</code> key.","The <code>Numpad0</code> / <code>0</code> key.","The <code>Numpad1</code> / <code>1</code> key.","The <code>Numpad2</code> / <code>2</code> key.","The <code>Numpad3</code> / <code>3</code> key.","The <code>Numpad4</code> / <code>4</code> key.","The <code>Numpad5</code> / <code>5</code> key.","The <code>Numpad6</code> / <code>6</code> key.","The <code>Numpad7</code> / <code>7</code> key.","The <code>Numpad8</code> / <code>8</code> key.","The <code>Numpad9</code> / <code>9</code> key.","The <code>NumpadAdd</code> / <code>+</code> key.","The <code>NumpadComma</code> / <code>,</code> key.","The <code>NumpadDecimal</code> / <code>.</code> key.","The <code>NumpadDivide</code> / <code>/</code> key.","The <code>NumpadEnter</code> key.","The <code>NumpadEquals</code> / <code>=</code> key.","The <code>NumpadMultiply</code> / <code>*</code> key.","The <code>NumpadSubtract</code> / <code>-</code> key.","indicates that an edge of a box is to be moved up and left …","Indicates a bidirectional resize cursor.","The <code>O</code> key.","","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","","","The <code>Oem102</code> key.","Run once and stop.","A filter that tests if any of the given filters apply.","","","Miscellaneous buttons, considered non-standard (i.e. Extra …","Non-standard support for other axis types (i.e. HOTAS …","Another mouse button with the associated number.","The system’s output.","The <code>P</code> key.","","","The <code>PageDown</code> key.","The <code>PageUp</code> key.","","An alternative to <code>Commands</code> that can be used in parallel …","","Holds a reference to the parent entity of this entity. …","The <code>Paste</code> key.","The <code>Pause</code> / <code>Break</code> key, next to the <code>Scroll</code> key.","The instance is paused.","The instance is fading out and will be paused when the …","The <code>Period</code> / <code>.</code> key.","","A 3D camera projection in which distant objects appear …","Zero-sized type used to mark things that “act like” …","","A command for interacting with playing sound.","The <code>PlayPause</code> key.","Playback status of a currently playing sound.","","","Player spawner","","The instance is playing.","A collection of Bevy app logic and configuration.","Combines multiple <code>Plugin</code>s into a single unit.","The <code>Plus</code> / <code>+</code> key.","The <code>Stage</code> that runs once after <code>StartupStage::Startup</code>.","The <code>Stage</code> that runs after <code>CoreStage::Update</code>.","The <code>Power</code> key.","The <code>Stage</code> that runs once before <code>StartupStage::Startup</code>.","The <code>Stage</code> that runs before <code>CoreStage::Update</code>.","All matching inputs will always be pressed","The <code>PrevTrack</code> key.","Uses primary monitor of the system.","Only press the action that corresponds to the longest chord","Progress indicator. Shows that processing is being done.","A configurable <code>CameraProjection</code> that can select its …","Command that pushes children to the end of the entity’s …","The <code>Q</code> key.","A quaternion representing an orientation.","System parameter that provides selective access to the …","Provides scoped access to a <code>World</code> state according to a …","The instance is queued","The <code>R</code> key.","The <code>RAlt</code> / <code>Right Alt</code> key. Maps to <code>Right Option</code> on Mac.","The <code>RBracket</code> / <code>Right Bracket</code> key.","The <code>RControl</code> / <code>Right Control</code> key.","","The <code>RShift</code> / <code>Right Shift</code> key.","The <code>RWin</code> / <code>Right Windows</code> key. Maps to <code>Right Command</code> on Mac.","A ray is an infinite line starting at <code>origin</code>, going in …","An event that is sent whenever a window receives a …","A rectangle defined by two opposite corners.","A reflected Rust type.","","A struct used to operate on reflected <code>Component</code> of a type.","A struct used to provide the default value of a type.","A struct used to deserialize reflected instances of a type.","A struct used to operate on reflected <code>Resource</code> of a type.","A struct used to serialize reflected instances of a type.","Command that removes children from an entity, and removes …","Command that removes the parent of an entity, and removes …","","A <code>SystemParam</code> that grants access to the entities that had …","Describes which rendering layers an entity belongs to.","Reset when finished.","Shared borrow of a <code>Resource</code>.","Unique mutable borrow of a <code>Resource</code>.","A type that can be inserted into a <code>World</code> as a singleton.","","The <code>Return</code> / <code>Enter</code> key.","sRGBA color","RGBA color in the Linear sRGB colorspace (often …","The <code>Right</code> / <code>Right Arrow</code> key.","Corresponds to <code>+x</code>","The right mouse button.","The horizontal value of the right stick.","The vertical value of the right stick.","The right thumb stick button.","The first right trigger.","The second right trigger.","The value of the right <code>Z</code> button.","Indicates that the row can be resized vertically.","","","A strongly-typed class of labels used to identify run …","Generates an impl of the <code>RunCriteriaLabel</code> trait.","The <code>S</code> key.","","","","Indicates that an edge of a box is to be moved down …","The scan code of a <code>KeyboardInput</code>.","A container of <code>Stage</code>s set to be run in a linear order.","Extension trait with the methods to add to Bevy’s …","Extension trait with the methods to add to Bevy’s …","The <code>Scroll</code> / <code>Scroll Lock</code> key.","The cursor indicates that an edge of a box is to be moved …","The select button.","The <code>Semicolon</code> / <code>;</code> key.","A <strong>data structure</strong> that can be serialized into any data …","","A shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …","The key that makes letters capitalized, corresponding to …","A single button","A single directional axis with a configurable trigger zone.","Creates a fullscreen window that will render at desktop …","The <code>Slash</code> / <code>/</code> key.","The <code>Sleep</code> key.","The <code>Snapshot</code> / <code>Print Screen</code> key.","The bottom action button of the action pad (i.e. PS: …","The <code>Space</code> / <code>Spacebar</code> / <code> </code> key.","A <code>Bundle</code> with the following <code>Component</code>s:","","","A Bundle of components for drawing a single sprite from a …","This is a sproinger","A type that can run as a step of a <code>Schedule</code>.","A strongly-typed class of labels used to identify <code>Stage</code>s.","Generates an impl of the <code>StageLabel</code> trait.","The start button.","The <code>Stage</code> that runs once when an <code>App</code> starts up.","The label for the startup <code>Schedule</code>, which runs once at the …","The names of the default <code>App</code> startup stages.","Stack based state machine","This stage serves as the “driver” for states of a …","","The <code>Stop</code> key.","The instance cannot be found anymore. This might might …","The instance is fading out and will be stopped when the …","","A reflected Rust regular struct type.","The cursor indicates that an edge of a box is to be moved …","This is a sword","The <code>Sysrq</code> key.","An ECS system that can be added to a <code>Schedule</code>","","A strongly-typed class of labels used to identify <code>System</code>s.","Generates an impl of the <code>SystemLabel</code> trait.","A parameter that can be used in a <code>System</code>.","Implement <code>SystemParam</code> to use a struct as a parameter in a …","A trait implemented for all functions that can be used as …","A builder for describing several systems at the same time.","Stores and executes systems. Execution order is not …","The <code>T</code> key.","","","The total number of layers supported.","All true.","All true.","All true.","","The <code>Tab</code> / <code>   </code> key.","The resulting type after dereferencing.","Helper for configuring and creating the default task …","Indicates text that may be selected or edited.    ","An atlas containing multiple textures (like a spritesheet …","A builder which is used to create a texture atlas from …","","","A clock that tracks how much it has advanced (and how much …","Tracks elapsed time. Enters the finished state once …","Specifies <code>Timer</code> behavior.","Controls whether or not the <code>ActionState</code> / <code>InputMap</code> pairs …","A touch input event.","A collection of <code>Touch</code>es.","Describe the position of an entity. If the entity has a …","A <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …","The base plugin for handling <code>Transform</code> components","A reflected Rust tuple struct.","A command for interacting with the tweening of the playing …","Associates a <code>Ulid</code> ID to a Rust type.","Derive macro for the <code>TypeUlid</code> trait.","The <code>U</code> key.","The type’s <code>Ulid</code>.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","The <code>Underline</code> / <code>_</code> key.","The <code>Unlabeled</code> key.","The <code>Up</code> / <code>Up Arrow</code> key.","Corresponds to <code>+y</code>","The <code>Stage</code> responsible for doing most app logic. Systems …","Use the order in which actions are defined in the enum to …","Some combination of user input, which may cross [<code>Input</code>]…","The <code>V</code> key.","","A <code>Visibility</code>, set as visible.","A visible <code>SpatialBundle</code>, with no translation, rotation, …","Print a warning for each <code>Entity</code> with a <code>T</code> component whose …","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector with SIMD support.","Indicates vertical text that may be selected or edited.","A virtual axis that you can get a <code>SingleAxis</code> from","A virtual DPad that you can get an [<code>AxisPair</code>] from","A virtual DPad that you can get an [<code>AxisPair</code>] from","User indication of whether an entity is visible. …","A <code>Bundle</code> of the <code>Visibility</code> and <code>ComputedVisibility</code> <code>Component</code>…","The <code>VolumeDown</code> key.","The <code>VolumeUp</code> key.","The <code>W</code> key.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","","Indicates that an edge of a box is to be moved left (west).","Program busy indicator.    ","The <code>Wake</code> key.","The <code>WebBack</code> key.","The <code>WebFavorites</code> key.","The <code>WebForward</code> key.","The <code>WebHome</code> key.","The <code>WebRefresh</code> key.","The <code>WebSearch</code> key.","The <code>WebStop</code> key.","The left action button of the action pad (i.e. PS: Square, …","The OS or “Windows” key, corresponding to <code>KeyCode::LWin</code>…","An operating system window that can present content and …","Describes the information needed for creating a window.","Defines the way a window is displayed.","An event that is sent when a window is repositioned in …","A <code>Plugin</code> that defines an interface for windowing support …","Defines where window should be placed at on creation.","Creates a window that uses the given size.","A collection of <code>Window</code>s with unique <code>WindowId</code>s.","Filter that selects entities with a component <code>T</code>.","Filter that selects entities without a component <code>T</code>.","Stores and exposes operations on entities, components, …","Struct for adding children to an entity directly through …","Horizontal movement.","The <code>X</code> key.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","Vertical movement.","The <code>Y</code> key.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","","","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","The <code>Yen</code> key.","The Z button.","The <code>Z</code> key.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Indicates that the user can zoom in.","Indicates that the user can zoom out.","","","","","Get alpha.","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","The action triggered by this entity","A reference to the <code>ActionData</code> of the corresponding <code>action</code>","The <code>ActionData</code> of each action","A mutable reference of the <code>ActionData</code> of the corresponding …","An <code>ActionState</code> component","Adds an asset to the collection, returning a Strong handle …","Add the provided <code>Window</code> to the <code>Windows</code> resource.","Pushes a generic <code>Command</code> to the command queue.","","","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","Registers <code>T</code> as a supported asset in the application.","","Adds the provided asset loader to the application.","","","","","","","","","","","","","","","","","","","","","","","","","Add a new audio channel to the application","","","Adds a single child","Creates a <code>ChildBuilder</code> with the given children built in …","Adds a command to this <code>ChildBuilder</code>","Registers <code>T</code> as a supported internal asset in the …","","Adds utility stages to the <code>Schedule</code>, giving it a …","Add an enter system for the given state","Add an enter system for the given state","","Add a system to run when entering the given state","","Add an enter system set for the given state","Add an enter system set for the given state","","Add a system set with multiple systems to run when …","","Setup the application to manage events of type <code>T</code>.","Add an exit system for the given state","Add an exit system for the given state","","Add a system to run when exiting the given state","","Add an exit system set for the given state","Add an exit system set for the given state","","Add a system set with multiple systems to run when exiting …","","Create a new fixed timestep stage and add it to the …","","Create a new fixed timestep stage and add it to the …","Create a new fixed timestep stage and add it to the …","","","Create a new fixed timestep stage and add it to the …","Create a new fixed timestep stage and add it to the …","","","Add a child sub-stage to a fixed timestep stage","Add a child sub-stage to a fixed timestep stage","","","Add a custom child sub-stage to a fixed timestep stage","Add a custom child sub-stage to a fixed timestep stage","","","Add a system to run under a fixed timestep","Add a system to run under a fixed timestep","","","Add many systems to run under a fixed timestep","Add many systems to run under a fixed timestep","","","Adds the provided asset loader to the server.","Add a <code>StateTransitionStage</code> in the default position","","Add a <code>StateTransitionStage</code> after the specified stage","Add a <code>StateTransitionStage</code> after the specified stage","","","Add a <code>StateTransitionStage</code> before the specified stage","Add a <code>StateTransitionStage</code> before the specified stage","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Adds a single <code>Plugin</code>.","Adds a group of <code>Plugin</code>s.","Whether to create a window when added.","","Adds a <code>Stage</code> with the given <code>label</code> to the last position of …","Add a child stage","Adds the given <code>stage</code> at the last position of the schedule.","Adds a <code>Stage</code> with the given <code>label</code> to the app’s <code>Schedule</code>, …","Adds the given <code>stage</code> immediately after the <code>target</code> stage.","Adds a <code>Stage</code> with the given <code>label</code> to the app’s <code>Schedule</code>, …","Adds the given <code>stage</code> immediately before the <code>target</code> stage.","Adds a <code>Stage</code> with the given <code>label</code> to the last position of …","Adds a startup stage with the given <code>label</code>, immediately …","Adds a startup stage with the given <code>label</code>, immediately …","Adds a system to the startup stage of the app’s <code>Schedule</code>.","Adds a <code>SystemSet</code> to the startup stage.","Adds a <code>SystemSet</code> to the startup schedule, in the stage …","Adds a system to the startup schedule, in the stage …","Adds a new <code>State</code> with the given <code>initial</code> value. This …","Adds a new <code>State</code> with the given <code>initial</code> value. This …","Adds an <code>App</code> as a child of the current one.","Adds a system to the update stage of the app’s <code>Schedule</code>.","","","Adds a <code>SystemSet</code> to the update stage.","","Adds a <code>SystemSet</code> to the <code>Stage</code> identified by <code>stage_label</code>.","Adds the given <code>system_set</code> to the stage identified by …","Adds a system to the <code>Stage</code> identified by <code>stage_label</code>.","Adds the given <code>system</code> to the stage identified by …","Add a sprite to the list of textures in the <code>TextureAtlas</code> …","Adds a texture to be copied to the texture atlas.","Add self to the set","Run a single simulation frame","Returns the 3d affine transformation matrix as an <code>Affine3A</code>.","Specifies that this criteria must be evaluated after a …","Specifies that the system should run after systems with …","","Add an after-ordering","","","","Create a new <code>RenderLayers</code> that belongs to all layers.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Get the window’s <code>CompositeAlphaMode</code>.","","Specifies how the alpha channel of the textures should be …","Marks this system as ambiguous with any system with the …","<code>Anchor</code> point of the sprite in the world","","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Checks if any touch input was just cancelled.","Returns <code>true</code> if any item in <code>inputs</code> has just been pressed.","Checks if any touch input was just pressed.","Returns <code>true</code> if any item in <code>inputs</code> has just been released.","Checks if any touch input was just released.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns <code>true</code> if any item in <code>inputs</code> has been pressed.","Applies a reflected value to this value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","","","","","","","","","","If true, buffers will be automatically applied at the end …","Uses reflection to set the value of this <code>Component</code> type in …","Uses reflection to set the value of this <code>Resource</code> type in …","Returns the system’s archetype component <code>Access</code>.","","","Access cache used by WorldCell.","","Retrieves this world’s Archetypes collection","","Generates a <code>VirtualDPad</code> corresponding to the arrow …","Returns the value as a <code>&amp;dyn Any</codeeturns the value as a <code>&amp;mut dyn Any</codeasts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Hsla</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from HSL colorspace","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Converts this type into an opaque, strongly-typed label.","Converts this type into an opaque, strongly-typed label.","Converts this type into an opaque, strongly-typed label.","Converts a <code>Color</code> to a <code>[f32; 4]</code> from linear RGB colorspace","Converts Color to a u32 from linear RGB colorspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","Provides a raw pointer to the data.","","","","Converts this <code>QueryState</code> reference to a <code>QueryState</code> that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a reflected value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts this type to a mutable reflected value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Color</code> to variant <code>Color::Rgba</code>","Converts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace","Converts a <code>Color</code> to variant <code>Color::RgbaLinear</code>","Converts <code>Color</code> to a <code>u32</code> from sRGB colorspace.","","","Returns the representation of this label as a string …","Returns the representation of this label as a string …","Returns the representation of this label as a string …","Gets the name of the entity as a <code>&amp;str</code>.","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Returns the aspect ratio (height/width) of a 2D image.","The aspect ratio (width divided by height) of the viewing …","A system that creates <code>AssetEvent</code>s at the end of the frame …","The base folder where assets are loaded from, relative to …","Returns the associated asset I/O.","","","Converts to <code>Arc&lt;T&gt;</code>.","Converts to <code>Arc&lt;[T]&gt;</code>.","Used to determine number of async compute threads to …","Specifies that the system should run with other exclusive …","Specifies that the system should run with other exclusive …","","Retrieves the data currently set to the vertex attribute …","Retrieves the data currently set to the vertex attribute …","Returns an iterator that yields references to the data of …","<code>std::collections::BTreeMap</code> with all defined vertex …","Returns an iterator that yields mutable references to the …","Control whether the added texture should be converted to …","Enable automatic format conversion for textures if they …","The position data of the input devices.","Get the <code>DualAxisData</code> from the binding that triggered the …","The type of the axis.","The axis that is being checked.","Get blue in sRGB colorspace.","Return the local back vector (Z).","Equivalent to <code>local_z()</code>","The window scale factor as reported by the window backend.","","The parallax background layers","The background color of the map, behind the parallax layers","Specifies that this criteria must be evaluated before a …","Specifies that the system should run before systems with …","","Add a before-ordering","","","Specifies that the system should run with other exclusive …","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bones lib preludeonfigures the <code>App</code> to which this plugin is added.","Configures the <code>Plugin</code>s that are to be added.","","","","","","","","","","","","","Constructs a new <code>InputMap</code> from a <code>&amp;mut InputMap</code>, allowing …","","","Retrieves this world’s Bundles collection","","The type of the button.","Manually bypasses change detection, allowing you to mutate …","","","","","","","","","","","","","The “html canvas” element selector.","","The “html canvas” element selector.","Recasts this handle as a weak handle of an Asset <code>U</code>.","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Retrieves a <code>WorldCell</code>, which safely enables multiple …","","The center point of the rectangle.","Modifies the position of the window to be in the center of …","","","","","","","","Get a channel to play and control audio in","","","","","","","Child entity to add","","","","","Creates a <code>UserInput::Chord</code> from an iterator of inputs of …","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Get the <code>DualAxisData</code> associated with the corresponding …","Get the value associated with the corresponding <code>action</code>, …","Clears the inner asset map, removing all key-value pairs.","Clears the <code>just pressed</code> and <code>just released</code> data for every …","Removes all events.","Consumes the iterator.","Clears all inputs registered for the <code>action</code>","","The clear color operation to perform for the main 3d pass.","","Clears any Gamepad associated with the entity controlled …","Clears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…","Clears the <code>just_released</code> state of the <code>input</code> and returns …","Clears the scheduled state operation.","Clears component tracker state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Makes a clone of the <code>Arc</code> pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","Clones the struct into a <code>DynamicStruct</code>.","Clones the struct into a <code>DynamicTupleStruct</codereates an untyped copy of this handle.","Clones the value as a <code>Reflect</code> trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a weak copy of this handle.","Creates a weak copy of this handle.","Creates a weak, untyped copy of this handle.","Close the operating system window corresponding to this …","Whether to close windows when they are requested to be …","","","","","","","Comparison for two <code>Arc</code>s.","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","","The sprite’s color tint","","The number of commands that can be sent to the audio …","","","","","","Returns the system’s component <code>Access</code>.","","","Returns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.","","","","","","","","","","","","","","","","","","","","","","","Retrieves this world’s Components collection","","Used to determine number of compute threads to allocate","Compute the Axis-Aligned Bounding Box of the mesh vertices …","Returns the 3d affine transformation matrix from this …","Calculates the <code>Mesh::ATTRIBUTE_NORMAL</code> of a mesh.","Returns the 3d affine transformation matrix as a <code>Mat4</code>.","Returns the 3d affine transformation matrix from this …","Returns the transformation as a <code>Transform</code>.","Computed values for this camera, such as the projection …","The computed visibility of the entity.","The computed visibility of the entity.","Algorithmically-computed indication of whether an entity …","Algorithmically-computed indication of whether an entity …","“applicator”: closure that adds the condition to the …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Consumes the <code>action</code>","Check if a point lies within this rectangle, inclusive of …","Returns <code>true</code> if the <code>gamepad</code> is connected.","Checks if an asset exists for the given handle","Returns <code>true</code> if the given <code>Entity</code> matches the query.","","Returns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …","Convert a texture from a format to another. Only a few …","Gets the value of this <code>Component</code> type from entity from …","Gets the value of this <code>Resource</code> type from <code>source_world</code> and …","Counts all vertices of the mesh.","Creates and returns an audio channel for the given key","Inserts the default thread pools into the given resource …","","","","","","","","","","","","","","","Creates an instance of the platform’s default <code>AssetIo</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Panicking version of [<code>get_current</code>]","","","The <code>Duration</code> for which the action has been held or released","","Panicking version of [<code>get_current_mut</code>]","","Get whether or how the cursor is grabbed.","","Sets whether and how the window grabs the cursor.","Get the current <code>CursorIcon</code>","","The current mouse position, in logical pixels, taking into …","Get whether or not the cursor is visible.","","Sets whether the cursor is visible when the window has …","An optional custom size for the sprite that will be used …","An optional custom size for the sprite that will be used …","","","Debug formatter for the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs an event at the debug level.","Constructs a span at the debug level.","Get whether or not decorations are enabled.","","Sets whether the window should have borders and bars.","Decrements the strong reference count on the <code>Arc&lt;T&gt;</code> …","An ergonomic abbreviation for <code>Default::default()</code> to make …","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.","","","","","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","The starting state value","","","The default labels for the system","Creates image settings with linear sampling by default.","Creates image settings with nearest sampling by default.","The default image sampler to use when <code>ImageSampler</code> is set …","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","Returns how much time has advanced since the last <code>update</code>, …","","","The depth clear operation to perform for the main 3d pass.","Dereferences the valueeserialize this value from the given Serde deserializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deserializes a reflected value.","","","","","","","","","","","","","","","","","","","","Despawns the given <code>entity</code>, if it exists. This will also …","Despawns all descendants of the given entity.","Despawns the provided entity alongside all descendants.","Function for despawning an entity and all its children","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","The direction of the ray.","","","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Return the local down vector (-Y).","Equivalent to <code>-local_y()</code>","The input that represents the down direction in this …","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Downcasts the value to type <code>T</code>, consuming the trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a boxed object from a boxed trait object if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempt to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the object within the trait …","Downcasts the value to type <code>T</code> by mutable reference.","Returns a mutable reference to the object within the trait …","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …","Returns a reference to the object within the trait object …","Downcasts the value to type <code>T</code> by reference.","Returns a reference to the object within the trait object …","Downcasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …","Creates a new <code>Weak</code> pointer to this allocation.","Generates a <code>VirtualDPad</code> corresponding to the DPad on a …","Creates a draining iterator that removes all eventsrops the <code>Arc</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Duplicates the vertex attributes so that no vertices are …","Returns the duration of the timer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the bounding rect for the element in the editor","","Returns how much time has advanced since <code>startup</code>, as …","Returns the time elapsed on the timer. Guaranteed to be …","","Returns how much time has advanced since <code>startup</code>, as <code>f32</code> …","","Returns how much time has advanced since <code>startup</code>, as <code>f64</code> …","","Returns how much time has advanced since <code>startup</code> modulo …","","Returns how much time has advanced since <code>startup</code> modulo …","","Returns the time elapsed on the timer as an <code>f32</code>. See also …","Returns how much time has advanced since <code>startup</code> modulo …","","","","Creates a new empty <code>App</code> with minimal default configuration.","","","","When this is false, <code>ActionState</code>’s corresponding to <code>A</code> …","","","","","","","The enter schedules of each state","Retrieves this world’s Entities collection","","","","Retrieves this world’s Entities collection mutably","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>.","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Target entity","Target entity","The entity whose action state should be updated","","Retrieves an <code>EntityMut</code> that exposes read and write …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Equality for two <code>Arc</code>sonstructs an event at the error level.","Constructs a span at the error level.","","","","The type of the event.","","","","Holds the oldest still active events. Note that …","Holds the newer events.","Topologically sorted exclusive systems that want to be run …","Topologically sorted exclusive systems that want to be run …","Topologically sorted exclusive systems that want to be run …","Topologically sorted exclusive systems that want to be run …","Topologically sorted exclusive systems that want to be run …","Topologically sorted exclusive systems that want to be run …","Instance of a scheduling algorithm for running the systems.","Determines if the stage’s executor was changed.","","Whether to exit the app when there are no open windows.","The exit schedules of each state","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","","","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Clones the mesh.","Clones the Image.","","","","","","Set how will the sound fade in, given its duration and …","Set how will the sound fade in, given its duration and …","Set how will the sound fade out, given its duration and …","","","","The distance from the camera in world units of the viewing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the value of the field named <code>name</code> …","Returns a reference to the value of the field with index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the value of the field with index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the value of the field with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of fields in the struct.","Returns the number of fields in the tuple struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and returns a result with a new …","Returns <code>true</code> if the timer has reached its duration at …","","Retrieves the position of the first currently pressed …","Returns the <code>Instant</code> when <code>update</code> was first called, if it …","","Whether or not to fit the canvas element’s size to its …","","Whether or not to fit the canvas element’s size to its …","Flip the sprite along the <code>X</code> axis","","Flip the sprite along the <code>Y</code> axis","","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …uns <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>f</code> on each read-only query item.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Runs <code>f</code> on each query item.","Runs <code>func</code> on each query result for the given <code>World</code>. This …","Forces the evaluation of this lazy value and returns a …","Describes how hard the screen was pressed.","Forces the evaluation of this lazy value and returns a …","","Sets the texture format for textures in the atlas.","The texture format for the textures that will be loaded in …","Return the local forward vector (-Z).","Equivalent to <code>-local_z()</code>","The vertical field of view (FOV) in radians.","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","Frees unused assets, unloading them from memory.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …","Convert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create <code>InputMap&lt;A&gt;</code> from <code>HashMap&lt;A, Vec&lt;UserInput&gt;&gt;</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Converts an <code>OsString</code> into an Arc&lt;OsStr&gt; by moving the …","Allocate a reference-counted slice and move <code>v</code>’s items …","Converts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> …","Allocate a reference-counted slice and fill it by cloning <code>v</code>…","Converts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents …","Returns the argument unchanged.","Copies the string into a newly allocated Arc&lt;OsStr&gt;.","","Converts a <code>T</code> into an <code>Arc&lt;T&gt;</code>","Converts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …","Move a boxed object to a new, reference-counted allocation.","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.","Converts an atomically reference-counted string slice into …","Converts a <code>PathBuf</code> into an Arc&lt;Path&gt; by moving the <code>PathBuf</code> …","Create an atomically reference-counted pointer from a …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Reconstruct an <code>Entity</code> previously destructured with …","Load a bytes buffer in a <code>Image</code>, according to type …","Create a new rectangle from its center and half-size.","Create a new rectangle from its center and size.","Creates a 3x3 matrix from two column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","","","","","","","","","","","","","","","","","","","","","Create a new rectangle from two corner points.","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Converts a <code>DynamicImage</code> to an <code>Image</code>.","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","","","","Generate a <code>TextureAtlas</code> by splitting a texture into a grid …","","","Create <code>InputMap&lt;A&gt;</code> from iterator with item type …","Takes each element in the <code>Iterator</code> and collects it into an …","","Create a <code>RenderLayers</code> from a list of layers.","Creates an affine transformation matrix from the given 2x2 …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Extracts the translation, rotation, and scale from <code>matrix</code>. …","","","","","","","","","","","","","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Creates a new entity reference with the specified <code>index</code> …","Constructs an <code>Arc&lt;T&gt;</code> from a raw pointer.","Constructs a concrete instance of <code>Self</code> from a reflected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Transform</code>, with <code>rotation</code>. Translation will …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transformation matrix from the given 3D …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a new <code>Transform</code>, with <code>scale</code>. Translation will be 0 …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a new timer with a given duration in seconds.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","Helper to create a <code>FixedTimestepStage</code> with a single child …","Creates a new <code>TransformBundle</code> from a <code>Transform</code>.","Creates a new <code>SpatialBundle</code> from a <code>Transform</code>.","Creates a new <code>Transform</code>, with <code>translation</code>. Rotation will …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","","","","","","Creates a <code>SingleAxis</code> with the specified <code>axis_type</code> and <code>value</code>…","Creates a <code>SingleAxis</code> with the specified <code>axis_type</code> and <code>value</code>…","Creates a new rotation quaternion from a 4D vector.","","Creates <code>Self</code> using data from the given World","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>Transform</code> at the position <code>(x, y, z)</code>. In 2d, …","Creates a new rotation quaternion.","","","","Get green in sRGB colorspace.","Fetches the Gamepad associated with the entity controlled …","The gamepad this event corresponds to.","The gamepad on which the button is located on.","The gamepad on which the axis is located on.","Generates a <code>VirtualDPad</code> corresponding to the face buttons …","The collection of the connected <code>Gamepad</code>s.","‘Greater than or equal to’ comparison for two <code>Arc</code>s.","Generate tangents for the mesh using the <code>mikktspace</code> …","Returns the generation of this Entity’s index. The …","","Gets the reference to the result of this lazy value if it …","Returns a position data corresponding to the <code>input_device</code>.","Gets the <code>Entity</code> ID of the parent.","Returns a reference to the timestep info for a given …","Gets the asset for the given handle.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Get a reference to the <code>Window</code> of <code>id</code>.","Returns the <code>action</code> mappings","Returns the read-only query item for the given <code>Entity</code>.","Retrieves a reference to the given <code>entity</code>’s Component of …","Returns a vector of references to any plugins of type <code>T</code> …","Returns the default value for the action stored at the …","Retrieves an immutable untyped reference to the given …","Get a channel to play and control audio in","Returns a shared reference to the component <code>T</code> of the given …","Returns a mutable reference to the component <code>T</code> of the …","Returns a mutable reference to the component <code>T</code> of the …","","","","","","","","","","","","","","","","","","","","","Returns a reference to the timestep info for the currently …","Returns a mut reference to the timestep info for the …","Creates a driver set for the State.","Returns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …","Retrieves an <code>EntityRef</code> that exposes read-only operations …","Retrieves an <code>EntityMut</code> that exposes read and write …","","","Returns a reference to the value of the field named <code>name</code>, …","Returns a reference to the value of the field with index …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the value of the field …","Returns a mutable reference to the value of the field with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to the i-th child sub-stage of the fixed …","Get access to the i-th child sub-stage of the fixed …","","","Get mut access to the i-th child sub-stage of the fixed …","Get mut access to the i-th child sub-stage of the fixed …","","","Get access to the <code>FixedTimestepStage</code> for the fixed …","Get access to the <code>FixedTimestepStage</code> for the fixed …","","","Get mut access to the <code>FixedTimestepStage</code> for the fixed …","Get mut access to the <code>FixedTimestepStage</code> for the fixed …","","","Gets the overall load state of a group of assets from the …","Gets a strong handle for an asset with the provided id.","Gets a <em>Strong</em> handle pointing to the same asset as the …","Gets the source path of an asset from the provided handle.","Gets an untyped strong handle for an asset with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes and returns the index data of the mesh as bytes. …","Returns the query item for the given <code>Entity</code>, with the …","Which actions were just pressed?","An iterator visiting every just pressed input in arbitrary …","Which actions were just released?","An iterator visiting every just released input in …","Gets the system’s last change tick","","Gets the load state of an asset from the provided handle.","","Returns the read-only query results for the given array of …","Returns the read-only query items for the given array of …","Returns the query results for the given array of <code>Entity</code>.","Returns the query items for the given array of <code>Entity</code>.","For a given <code>descriptor</code> returns a <code>VertexBufferLayout</code> …","Gets the reference to the result of this lazy value if it …","Returns a mut reference to the timestep info for a given …","Get mutable access to the asset for the given handle.","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Get a mutable reference to the provided <code>WindowId</code>.","Returns the query item for the given <code>Entity</code>.","Retrieves a mutable reference to the given <code>entity</code>’s …","Returns a mutable reference into the given <code>Arc</code>, if there …","Retrieves a mutable untyped reference to the given <code>entity</code>…","Returns a mutable reference into the given <code>Arc</code>, without …","Gets a reference to the non-send resource of the given …","Gets a mutable reference to the non-send resource of the …","Gets a mutable reference to the non-send resource of the …","Gets mutable access to an asset for the given handle, …","Pushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …","Returns an <code>EntityMut</code> for the given <code>entity</code> (if it exists) …","","","Which actions are currently pressed?","An iterator visiting every pressed input in arbitrary …","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it is …","Get a reference to the primary <code>Window</code>.","Get a mutable reference to the primary <code>Window</code>.","","","","Gets a new <code>ManualEventReader</code>. This will include all events …","Gets a new <code>ManualEventReader</code>. This will ignore all events …","Which actions are currently released?","Returns the <code>Touch</code> input corresponding to the <code>id</code> if it has …","Gets a reference to the resource of the given type if it …","Gets a resource to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of the given type …","Gets a resource to the resource with the id <code>ComponentId</code> if …","Gets a mutable reference to the resource of type <code>T</code> if it …","Gets a mutable reference to the resource of the given …","Turn the value into a serializable representation","","Returns a reference to the timestep info, assuming you …","Returns a single immutable query result when there is …","Returns a single read-only query item when there is …","Returns a mut reference to the timestep info, assuming you …","Returns a single mutable query result when there is …","Returns a single query item when there is exactly one …","Returns a query result when there is exactly one entity …","Returns a query result when there is exactly one entity …","","Returns a shared reference to the stage identified by <code>label</code>…","Returns a unique, mutable reference to the stage …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","Retrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …","","Returns the <code>TypeInfo</code> of the underlying type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the query result for the given <code>World</code> and <code>Entity</code>.","Returns the query item for the given <code>Entity</code>.","Computes and returns the vertex data of the mesh as bytes. …","The global transform of the entity.","","","","","The global transform of the entity.","","","","","Size of the map in tiles","Greater-than comparison for two <code>Arc</code>s.","Rectangle half-size.","Get the handle of the audio instance.","","Resolve clashing inputs, removing action presses that have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is set to <code>true</code>, the camera will use an …","Rectangle height (max.y - min.y).","The current logical height of the window’s client area.","The requested logical height of the window’s client area.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> with HSL representation in sRGB colorspace.","New <code>Color</code> with HSL representation in sRGB colorspace.","The ID of the asset as contained within its respective …","Get the window’s <code>WindowId</code>.","Retrieves this <code>World</code>’s unique ID","The <code>ID</code> of the gamepad.","The identifier of the window the cursor has moved on.","","","","","An unique identifier to an Asset.","","","","The unique identifier of the finger.","","Gets an iterator over all <code>HandleId</code>’s in the collection.","","Specifies that this system should opt out of execution …","","","","","","","","Increments the strong reference count on the <code>Arc&lt;T&gt;</code> …","Returns the position in the defining enum of the given …","Return a transiently unique identifier.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the vertex <code>indices</code> of the mesh.","","Retrieves the vertex <code>indices</code> of the mesh mutably.","","","Constructs an event at the info level.","Constructs a span at the info leveldds an asset loader <code>T</code> using default values.","","Initializes a new <code>Component</code> type and returns the …","Initializes a new <code>Component</code> type and returns the …","Adds an asset loader <code>T</code> for internal assets using default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a non-send <code>Resource</code> with standard starting …","Inserts a new non-send resource with standard starting …","Initialize a <code>Resource</code> with standard starting values by …","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Inserts a new resource with standard starting values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the initial size of the atlas in pixels.","The initial atlas size in pixels.","Initialize the system.","","An <code>InputMap</code> component","Insert a mapping between <code>input</code> and <code>action</code>","Insert a reflected <code>Component</code> into the entity like <code>insert()</code>.","Insert a reflected <code>Resource</code> into the world like <code>insert()</code>.","Insert a mapping between <code>input</code> and <code>action</code> at the provided …","Sets the data for a vertex attribute (position, normal …","Inserts children at the given index","Inserts children at the given index","","Insert a mapping between the simultaneous combination of …","Inserts a mapping between the simultaneous combination of …","Insert a mapping between the provided <code>input_action_pairs</code>","Inserts a non-send resource to the app.","Inserts a new non-send resource with the given <code>value</code>.","Pushes a <code>Command</code> to the queue for creating entities, if …","For a given batch of (Entity, Bundle) pairs, either spawns …","Inserts a <code>Resource</code> to the current <code>App</code> and overwrites any …","Pushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …","Inserts a new resource with the given <code>value</code>.","Inserts a new resource with the given <code>value</code>. Will replace …","Create a new rectangle with a constant inset.","Returns the components of an <code>Entity</code> through <code>ComponentInfo</code>.","Install the asset loader for this type.","","","","","","The <code>Instant</code> that the action was last pressed or released","","Build a new rectangle formed of the intersection of this …","Determine if a <code>RenderLayers</code> intersects another.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the value as a <code>Box&lt;dyn Any&gt;</codereate a conditional system descriptor from a general bevy …","","","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","Consume <code>self</code> and return a mutable reference to the …","","","","","","","","","","","","","","","Consumes the <code>Arc</code>, returning the wrapped pointer.","Casts this type to a boxed reflected valueurns this value into its corresponding <code>System</code>.","","Consumes this <code>Lazy</code> returning the stored value.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Used to determine number of IO threads to allocate","Returns true if the trait object wraps an object of type …","Returns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>","Returns true if the trait object wraps an object of type …","If this is set to <code>true</code>, this camera will be rendered to …","Returns <code>true</code> if this value was added after the system last …","","","","Returns true if this component has been added since the …","Returns <code>true</code> if the resource was added after the system …","Returns <code>true</code> if the resource was added after the system …","Returns <code>true</code> if this value was added or mutably …","","","","Returns true if this component has been changed since the …","Returns <code>true</code> if the resource was added or mutably …","Returns <code>true</code> if the resource was added or mutably …","Checks if there is a channel available for the given key.","Whether the texture format is compressed or uncompressed","Check if the rectangle is empty.","Returns <code>true</code> if there are no stored assets.","Checks if the query is empty for the given <code>World</code>, where …","","Are any input bindings registered at all?","Is the number of buttons in the <code>UserInput</code> 0?","Returns <code>true</code> if there are no query items.","Returns true if there are no events in this collection.","Determines if no events are available to be read without …","Returns true if the system must be run exclusively.","","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Get whether or not the window has focus.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns <code>true</code> if the clock is currently paused.","Returns <code>true</code> if there is any sound in this channel that is …","Returns <code>true</code> if there is any sound in this channel that is …","Returns <code>true</code> if there is any sound in this channel that is …","Checks if a <code>Plugin</code> has already been added.","","","Returns true if the system is <code>Send</code>.","","Returns <code>true</code> if this is a strong handle.","Returns <code>true</code> if this is a strong handle.","","If the plugin can be meaningfully instantiated several …","","","","","","","","","","","","","","","Whether this entity is visible to something this frame. …","Indicates whether this entity is visible. Hidden values …","Whether this entity is visible in the entity hierarchy, …","","Whether this entity is visible in <em>any</em> view (Cameras, …","","Returns <code>true</code> if this is a weak handle.","Returns <code>true</code> if this is a weak handle.","Returns an iterator over registered <code>Gamepad</code>s in an …","Gets an iterator over all assets in the collection.","Returns an <code>Iterator</code> over the query results for the given …","An iterator over all registered <code>Window</code>s.","Returns an iterator over actions with their inputs","An iterator visiting every pressed <code>Touch</code> input in …","Returns an <code>Iterator</code> over the read-only query items.","Returns an iterator over the entities that had their <code>T</code> …","Iterates over the events this <code>EventReader</code> has not seen …","Get an iterator of the layers.","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Returns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …","Returns an <code>Iterator</code> over all possible combinations of <code>K</code> …","Iterates over all possible combinations of <code>K</code> query items …","Iterates over events that happened since the last “update…","Returns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …","","Returns an <code>Entity</code> iterator of current entities.","Returns an iterator over the values of the reflectable …","Returns an iterator over the values of the tuple struct’…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Iterator</code> over the query items, with the actual …","Returns an iterator over all mapped inputs","An iterator visiting every just cancelled <code>Touch</code> input in …","An iterator visiting every just pressed <code>Touch</code> input in …","An iterator visiting every just released <code>Touch</code> input in …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the read-only query items …","Returns an <code>Iterator</code> over the read-only query items …","Returns an iterator over the query items generated from an …","Returns an iterator over the query items generated from an …","Returns an <code>Iterator</code> over the query items generated from an …","Gets a mutable iterator over all assets in the collection.","Returns an <code>Iterator</code> over the query results for the given …","A mutable iterator over all registered <code>Window</code>s.","Returns an <code>Iterator</code> over the query items.","Iterates over all of schedule’s stages and their labels, …","Returns an <code>Iterator</code> over the query results for the given …","Returns an <code>Iterator</code> over the query items.","Like <code>iter</code>, except also returning the <code>EventId</code> of the events.","","","","","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","A collection of every <code>Touch</code> that just got cancelled.","Returns <code>true</code> only on the tick the timer reached its …","Was this <code>action</code> pressed since the last time tick was …","Returns <code>true</code> if the <code>input</code> has just been pressed.","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","A collection of every button that has just been pressed.","A collection of every <code>Touch</code> that just got pressed.","Was this <code>action</code> released since the last time tick was …","Returns <code>true</code> if the <code>input</code> has just been released.","Returns <code>true</code> if the input corresponding to the <code>id</code> has just …","A collection of every button that has just been released.","A collection of every <code>Touch</code> that just got released.","Returns the pair of <code>KeyCode</code> values associated with this …","","","Assigns a label to the criteria. Must be unique.","Assigns a label to the system; there can be more than one, …","","Add a label","","","","Assigns a label to the criteria. If the given label is …","","label applicator","","","","","","","","","","Returns the change tick recording the previous time this …","","","","Saves the value of the World change_tick during the last …","Returns the <code>Instant</code> when <code>update</code> was last called, if it …","","Create a new <code>RenderLayers</code> belonging to the given layer.","The layers of the map","","‘Less than or equal to’ comparison for two <code>Arc</code>s.","Return the local left vector (-X).","Equivalent to <code>-local_x()</code>","The input that represents the left direction in this …","","Creates a <code>DualAxis</code> for the left analogue stick of the …","Gets the number of assets in the collection.","How many textures are in the <code>TextureAtlas</code>","How many input bindings are registered total?","The number of logical inputs that make up the <code>UserInput</code>.","","Determines the number of events available to be read from …","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Create a new linear tween with the given duration","Set how long will the sound fade in linearly.","Set how long will the sound fade in linearly.","Set how long will the sound fade out linearly.","Allows the field to do any extra loading that it might …","Queues an <code>Asset</code> at the provided relative path for …","","","","","","","","","","","","","","Loads assets from the specified folder recursively.","","","","Queues the <code>Asset</code> at the provided path for loading and …","The transform of the entity.","Get the unit vector in the local <code>X</code> direction.","Get the unit vector in the local <code>Y</code> direction.","Get the unit vector in the local <code>Z</code> direction.","","","The full logical size of this camera’s <code>RenderTarget</code>, …","The rendered logical bounds (minimum, maximum) of the …","The logical size of this camera’s viewport. If the …","Rotates this <code>Transform</code> so that its local negative <code>Z</code> …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view matrix using a camera …","Updates and returns this <code>Transform</code> by rotating it so that …","Loop the playing sound, starting from the given position.","Loop the playing sound.","Less-than comparison for two <code>Arc</code>s.","","","Makes a mutable reference into the given <code>Arc</code>.","Makes this handle Strong if it wasn’t already.","","Returns the read-only query items for the given array of …","Returns the query items for the given array of <code>Entity</code>.","The selected map","The raw vector of PetitSets used to store the input …","","","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","Maps to an inner value by applying a function to the …","Iterates through asset references and marks assets with no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum corner point of the rect.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","","","Sets the max size of the atlas in pixels.","The absolute maximum size of the texture atlas in pixels.","If the number of physical cores is greater than …","Merges the provided <code>InputMap</code> into the <code>InputMap</code> this method …","The core metadata.","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","The minimum corner point of the rect.","","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","If the number of physical cores is less than …","Returns <code>true</code> if the timer is repeating.","Get the window’s <code>WindowMode</code>","","","Sets the <code>WindowMode</code>.","Creates a <code>UserInput::Chord</code> from a <code>Modifier</code> and an <code>input</code> …","The monitor to place the window on.","Creates a <code>DualAxis</code> corresponding to horizontal and …","Generates a <code>VirtualDPad</code> corresponding to discretized mouse …","Creates a <code>SingleAxis</code> corresponding to horizontal …","Creates a <code>SingleAxis</code> corresponding to vertical <code>MouseMotion</code> …","Creates a <code>DualAxis</code> corresponding to horizontal and …","Generates a <code>VirtualDPad</code> corresponding to discretized …","Creates a <code>SingleAxis</code> corresponding to horizontal <code>MouseWheel</code>…","Creates a <code>SingleAxis</code> corresponding to vertical <code>MouseWheel</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Multiplies <code>self</code> with <code>transform</code> component by component, …","Multiplies <code>self</code> with <code>transform</code> component by component, …","Transforms a 2D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","Updates the name of the entity in place.","How many of the provided <code>buttons</code> are found in the <code>UserInput</code>","Returns the system’s name.","","Configures a name for the <code>Plugin</code> which is primarily used …","Configures a name for the <code>PluginGroup</code> which is primarily …","","","","","","Returns the name of the field with index <code>index</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given a position in Normalized Device Coordinates, use the …","Inequality for two <code>Arc</code>s.","The distance from the camera in world units of the viewing …","","","","","","","","","","","","Any axis value lower than this will trigger the input.","Creates a <code>SingleAxis</code> with the <code>axis_type</code> and <code>negative_low</code> …","Creates a new <code>App</code> with some default structure to enable …","Create a new rectangle from two corner points.","Create an empty <code>ConditionSet</code>","Creates a new <code>Name</code> from any string-like type.","Creates a new lazy value with the given initializing …","Create a new empty <code>FixedTimestepStage</code> with no child stages","Constructs a new <code>Time</code> instance with a specific startup …","Returns a new <code>DescendantIter</code>.","Create a new game session","Returns a new <code>AncestorIter</code>.","Create a new transitions stage for the given state type","Creates a new timer with a given duration.","Creates a new <code>Gamepad</code>.","Create a new tween with the given duration and easing","Creates a new <code>GamepadEvent</code>.","Creates a new asset server with the provided asset I/O.","Creates a new <code>GamepadButton</code>.","Creates a new <code>GamepadAxis</code>.","Creates a new <code>QueryState</code> from a given <code>World</code> and inherits …","Creates a new <code>Window</code>.","","","Creates a new <code>InputMap</code> from an iterator of …","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …","Creates a new empty World","Construct a new mesh. You need to provide a …","Constructs a new <code>Arc&lt;T&gt;</code>.","Creates a new image from raw binary data and the …","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Create a custom implementation of <code>ReflectComponent</code>.","Create a custom implementation of <code>ReflectResource</code>.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","","","Creates a new <code>Archetype</code>.","","Constructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …","Create a new <code>TextureAtlas</code> that has a texture, but does not …","Creates a new image from raw binary data and the …","Returns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …","","Constructs a new <code>Arc</code> with uninitialized contents.","Constructs a new atomically reference-counted slice with …","Create an orthographic projection camera with a custom <code>Z</code> …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Constructs a new atomically reference-counted slice with …","","","","Gets an immutable reference to the non-send resource of …","Gets a mutable reference to the non-send resource of the …","Create a new <code>RenderLayers</code> that belongs to no layers.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The origin of the ray.","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Same as <code>Self::pop</code>, but if there is already a next state, …","Same as <code>Self::push</code>, but if there is already a next state, …","Same as <code>Self::replace</code>, but if there is already a next …","Same as <code>Self::restart</code>, but if there is already a scheduled …","Same as <code>Self::set</code>, but if there is already a next state, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs <code>func</code> on each query result in parallel.","Runs <code>f</code> on each read-only query item in parallel.","Runs <code>func</code> on each query result in parallel.","Runs <code>f</code> on each read-only query item in parallel.","Runs <code>func</code> on each query result in parallel.","","Topologically sorted parallel systems.","Topologically sorted parallel systems.","","","Parent entity to add the child to","","","","Returns the parent entity of this <code>ChildBuilder</code>","Returns the parent entity of this <code>WorldChildBuilder</code>","","","","","","","","","Partial comparison for two <code>Arc</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pause all audio","Stops the clock, preventing it from advancing until …","Pauses the Timer. Disables the ticking of the timer.","Pause all audio","Pause all audio","Pause the audio instance with the given easing","Builder method for starting in a paused state","Returns <code>true</code> if the timer is paused.","","","Returns the percentage of the timer elapsed time (goes …","Returns the percentage of the timer remaining time (goes …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Marker that stores the type of action to toggle","","The phase of the touch input.","The current mouse position, in physical pixels.","","The window’s client area height in physical pixels.","","The full physical size of this camera’s <code>RenderTarget</code>, …","The rendered physical bounds (minimum, maximum) of the …","The physical size of this camera’s viewport. If the …","The window’s client area width in physical pixels.","","","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…","Pass the output of this system <code>A</code> into a second system <code>B</code>, …","","Constructs a new run criteria that will retrieve the …","Play audio","","Play audio","","The player selections.","","","","Same as <code>Self::set</code>, but does a pop operation instead of a …","","","Get the playback position in seconds","The window’s client position in physical pixels.","The position of the cursor, in window coordinates.","","","The position on the screen that the window will be placed …","The position of the finger on the touchscreen.","Any axis value higher than this will trigger the input.","Creates a <code>SingleAxis</code> with the <code>axis_type</code> and <code>positive_low</code> …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Converts the extracted mesh a into <code>GpuMesh</code>.","Converts the extracted image into a <code>GpuImage</code>.","Get the window’s <code>PresentMode</code>.","","Controls when a frame is presented to the screen. The …","Press the <code>action</code>","Registers a press for the given <code>input</code>.","Is the provided <code>user_input</code> pressed?","","Is this <code>action</code> currently pressed?","Returns <code>true</code> if the <code>input</code> has been pressed.","Is at least one of the corresponding inputs for <code>action</code> …","","A collection of every button that is currently being …","A collection of every <code>Touch</code> that is currently being …","Is the provided <code>user_input</code> pressed for the provided <code>Gamepad</code>…","","","The <code>Duration</code> for which the action was last held or released","Get a reference to the primary <code>Window</code>.","Get a mutable reference to the primary <code>Window</code>.","Returns the topology of the mesh.","","Cameras with a lower priority will be rendered before …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","","","The projection matrix computed using this camera’s …","","","","","Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation …","Same as <code>Self::set</code>, but does a push operation instead of a …","Pushes children to the back of the builder’s children","Pushes children to the back of the builder’s children","","","","","Returns <code>QueryState</code> for the given <code>WorldQuery</code>, which is used …","Returns <code>QueryState</code> for the given filtered <code>WorldQuery</code>, …","","Get red in sRGB colorspace.","Get an upper bound of the radius from the given <code>extents</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much real time has elapsed since the last …","","Returns how much real time has elapsed since the last …","","Returns how much real time has elapsed since the last …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns how much real time has elapsed since <code>startup</code>, as …","","Returns how much real time has elapsed since <code>startup</code>, as …","","Returns how much real time has elapsed since <code>startup</code>, as …","","Returns how much real time has elapsed since <code>startup</code> modulo","","Returns how much real time has elapsed since <code>startup</code> modulo","","Returns how much real time has elapsed since <code>startup</code> modulo","","Get the <code>RawHandleWrapper</code> corresponding to this window if …","","Returns the raw inputs that make up this <code>UserInput</code>","","","","","","","","","","","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","An optional rectangle representing the region of the sprite…","The grouped rects which must be placed with a key value …","","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","","Returns a hash of the value (which includes the type).","","","","","","","","","","","","","Returns a mutable enumeration of “kinds” of type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the value of this <code>Component</code> type from the entity as a …","Gets the value of this <code>Resource</code> type from the world as a …","","","","","","","Returns an owned enumeration of “kinds” of type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a “partial equality” comparison result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an enumeration of “kinds” of type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","Registers the asset type <code>T</code> using <code>[App::register]</code>, and adds …","","","Registers the type <code>T</code> in the <code>TypeRegistry</code> resource, adding …","Adds the type data <code>D</code> to type <code>T</code> in the <code>TypeRegistry</code> …","Changes the <code>size</code>, asserting that the total number of data …","Takes a 2D image containing vertically stacked images of …","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the speed the clock advances relative to your …","","Returns the speed the clock advances relative to your …","Release the <code>action</code>","Registers a release for the given <code>input</code>.","Releases all actions","Registers a release for all currently pressed inputs.","Releases the specified <code>user_input</code> directly","","","Releases the specified <code>user_input</code> directly, using the …","","","Is this <code>action</code> currently released?","Force an <code>Asset</code> to be reloaded.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the remaining time using Duration","Returns the remaining time in seconds","Removes the position data of the <code>input_device</code>, returning …","Removes an asset for the given handle.","","Removes the input for the <code>action</code>, if it exists","Removes this <code>Component</code> type from the entity. Does nothing …","Removes this <code>Resource</code> type from the world. Does nothing if …","Removes the input for the <code>action</code> at the provided index","Removes the data for a vertex attribute","Remove the channel behind the given key","Removes the given children","Removes the given children","","","Removes the parent of this entity.","Pushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …","Removes the resource of a given type and returns it, if it …","Removes the resource of a given type, if it exists. …","Safety","Returns an iterator of entities that had components of …","","Returns an iterator of entities that had components with …","Schedule a state change that replaces the full stack with …","Logs execution order ambiguities between systems.","Returns <code>true</code> if the underlying value represents a value of …","The requested window client area height in logical pixels …","","The requested window client area width in logical pixels …","","Reserves capacity for at least additional more elements to …","Resets the timer. The reset doesn’t affect the <code>paused</code> …","Clears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …","Clears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …","Clears all user input streams, resetting them to their …","","","Get whether or not the window is resizable.","","Sets whether the window is resizable.","Resizes the image to the new size, by removing information …","The window’s client resize constraint in logical pixels.","","Sets minimum and maximum resize limits.","Gets a reference to the resource of the given type","Gets a mutable reference to the resource of the given type","Temporarily removes the requested resource from this <code>World</code>…","","Schedule a state change that restarts the active state. …","Restore the world state","Resume all audio","Resume all audio","Resume all audio","Resume the audio instance with the given easing","Reverse the playing sound.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from sRGB colorspace.","New <code>Color</code> from linear RGB colorspace.","New <code>Color</code> from sRGB colorspace.","Return the local right vector (X).","Equivalent to <code>local_x()</code>","The input that represents the right direction in this …","","Creates a <code>DualAxis</code> for the right analogue stick of the …","Rotates this <code>Transform</code> by the given rotation.","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Rotates this <code>Transform</code> around a <code>point</code> in space.","Rotates this <code>Transform</code> around the given <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> by the given <code>rotation</code>.","Rotates this <code>Transform</code> around its local <code>axis</code> by <code>angle</code> (in …","Rotates this <code>Transform</code> around its local <code>X</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Y</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around its local <code>Z</code> axis by <code>angle</code> …","Rotates this <code>Transform</code> around the <code>X</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Y</code> axis by <code>angle</code> (in …","Rotates this <code>Transform</code> around the <code>Z</code> axis by <code>angle</code> (in …","Rotation of the entity.","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Runs the stage; this happens once per update. Implementors …","","Starts the application by calling the app’s runner …","","","","Runs the system with the given input in the world.","","Topologically sorted run criteria of systems.","","","The base run condition; other methods impld in terms of …","(provided so users don’t have to type <code>.into_conditional()</code>…","Add a condition to this set, to be applied to all systems","Helper: add a condition, but flip its result","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition, but flip its result","Helper: add a condition to run if a resource was added","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource was added","Helper: add a condition to run if a resource equals the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource equals the …","Helper: add a condition to run if a resource of a given …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource of a given …","Helper: add a condition to run if a resource was removed","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource was removed","Helper: run in a specific Bevy state (checks the <code>State&lt;T&gt;</code> …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run in a specific Bevy state (checks the <code>State&lt;T&gt;</code> …","Helper: run in a specific state (checks the <code>CurrentState</code> …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run in a specific state (checks the <code>CurrentState</code> …","Helper: run when not in a specific Bevy state (checks the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run when not in a specific Bevy state (checks the …","Helper: run when not in a specific state (checks the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: run when not in a specific state (checks the …","Helper: add a condition to run if there are events of the …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if there are events of the …","Executes each <code>Stage</code> contained in the schedule, one at a …","Helper: add a condition to run if a resource does not …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource does not …","Helper: add a condition to run if a resource of a given …","(provided so users don’t have to type <code>.into_conditional()</code>…","Helper: add a condition to run if a resource of a given …","Runs the system with the given input in the world. Unlike …","","The runner function is primarily responsible for managing …","The <code>ImageSampler</code> to use during rendering.","The number of samples to run for Multi-Sample …","Scale of the entity.","","","The ratio of physical pixels to logical pixels","Returns the scale factor for the <code>Window</code> of <code>id</code>, or <code>1.0</code> if …","The scale factor set with <code>set_scale_factor_override</code>.","","Overrides the window’s ratio of physical pixels to …","","A container of <code>Stage</code>s set to be run in a linear order.","","","Moves the playback position by the specified amount of …","Sets the playback position to the specified time in …","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","“Sends” an <code>event</code> by writing it to the current event …","Sends an <code>event</code>. <code>EventReader</code>s can then read the event. See …","","Sends the default value of the event. Useful when the …","Sends the default value of the event. Useful when the …","Sends an <code>Event</code>.","Sends a batch of <code>Event</code>s from an iterator.","Sends the default value of the <code>Event</code> of type <code>E</code>.","Send the specified <code>user_input</code> directly","","","Send the specified <code>user_input</code> directly, using the …","","","Returns a serializable version of the value.","Serialize this value into the given Serde serializer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a version of the plugin intended to run on the …","","Performs a type-checked assignment of a reflected value to …","","Sets the value of the given <code>Plugin</code>, if it exists","","Sets the entity’s name.","","","","Sets the position data of the <code>input_device</code> to <code>position_data</code>…","","","","","","","","Add/modify the asset pointed to by the given handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule a state change that replaces the active state …","Set alpha.","Manually sets the <code>ActionData</code> of the corresponding <code>action</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set blue in sRGB colorspace.","Flags this value as having been changed.","","","","Set whether and how the cursor is grabbed.","Set the <code>CursorIcon</code>","Set the cursor’s position","Set whether or not the cursor is visible.","Set whether or not decorations are enabled.","Sets the duration of the timer.","Sets the elapsed time of the timer without any other …","Add a custom stage to execute for the given state","Add a custom stage to execute for the given state","","Provide the stage to run when entering the given state","","","Add a custom stage to execute for the given state","Add a custom stage to execute for the given state","","Provide the stage to run when exiting the given state","","Set green in sRGB colorspace.","Assigns a particular <code>Gamepad</code> to the entity controlled by …","","Sets the vertex indices of the mesh. They describe how …","Sets the system’s last change tick","","Manually sets the change tick recording the previous time …","","","","Set whether or not the window is maximized.","Set the game metadata.","Sets the window to minimized or back.","Sets whether the timer is repeating or not.","Set the window’s <code>WindowMode</code>","","Set panning","Set panning","Set panning","Sets the panning of the sound","Sets the parent of this entity.","Set playback rate","Set playback rate","Set playback rate","Sets the playback rate of the sound.","Sets the <code>position</code> of the window on the selected <code>monitor</code> in …","Set the window’s <code>PresentMode</code>.","Set red in sRGB colorspace.","Enable EXPERIMENTAL “rate locking” algorithm","Sets the speed the clock advances relative to your system …","Sets the speed the clock advances relative to your system …","Set whether or not the window is resizable.","Modifies the minimum and maximum window bounds for …","Request the OS to resize the window such the client area …","","","Sets the function that will be called when the app is run.","Override the os-reported scaling factor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the window’s title.","Add/modify the asset pointed to by the given handle.","Sets <code>is_visible_in_view</code> to <code>true</code>. This is not reversible …","Set the volume","Set the volume","Set the volume","Set the volume of the audio instance","Sets the modulus used to calculate <code>elapsed_wrapped</code> and …","","Generation for some primitive shape meshes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shrinks the capacity of the asset map as much as possible.","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Panicking version of [<code>get_single</code>]","Returns a single immutable query result when there is …","","Returns a single read-only query item when there is …","Panicking version of [<code>get_single_mut</code>]","Returns a single mutable query result when there is …","Returns a single query item when there is exactly one …","","Rectangle size.","","Returns the size of a 2D image.","","","Performs a spherical linear interpolation between <code>self</code> and …","","Snapshot the world state","The Kira sound making up this <code>AudioSource</code>","The maximum number of sounds that can be playing at a time.","","","","","","Spawns an entity with the given bundle and inserts it into …","Spawns an entity with the given bundle and inserts it into …","Pushes a <code>Command</code> to the queue for creating a new entity …","Spawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …","Pushes a <code>Command</code> to the queue for creating entities with a …","Spawns a batch of entities with the same component Bundle …","Spawns an entity with the given bundle and inserts it into …","Spawns an entity with the given bundle and inserts it into …","","Spawns an <code>Entity</code> with no components and inserts it into …","Spawns an <code>Entity</code> with no components and inserts it into …","Pushes a <code>Command</code> to the queue for creating a new empty …","Spawns a new <code>Entity</code> and returns a corresponding <code>EntityMut</code>, …","","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","The specific sprite from the texture atlas to be drawn","","The current states in the stack.","Fetches the <code>Stage</code> of type <code>T</code> marked with <code>label</code> from the …","Fetches the <code>Stage</code> of type <code>T</code> marked with <code>label</code>, then …","","Determines whether the stage should run.","","","","Start the sound from the given position in seconds.","Returns the <code>Instant</code> the clock was created.","","Get state for a playback instance.","Get the playback state of the audio instance","Get state for a playback instance.","Get state for a playback instance.","Pause the audio instance with the given easing","","","","","","","","Creates a <code>FixedTimestep</code> that ticks once every <code>step</code> seconds.","","Creates a <code>FixedTimestep</code> that ticks once every <code>rate</code> times …","Stop all audio","Stop all audio","Stop all audio","Stop the audio instance with the given easing","","","Retrieves this world’s Storages collection","","Gets the number of strong (<code>Arc</code>) pointers to this …","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","Retrieves a <code>SubApp</code> stored inside this <code>App</code>.","","","","","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","","","","","","","","","Swaps the child at <code>a_index</code> with the child at <code>b_index</code>.","Creates a <code>SingleAxis</code> with both <code>positive_low</code> and …","Creates a <code>DualAxis</code> with both <code>positive_low</code> and <code>negative_low</code> …","A collection of common adapters for piping the result of a …","","","Determines if the stage was modified and needs to rebuild …","Downcasts the value to type <code>T</code>, unboxing and consuming the …","The “target” that this camera will render to.","Options for the <code>TaskPool</code> created at application start.","","","","The handle to the texture in which the sprites are stored","A handle to the texture atlas that holds the sprite images","","","","The specific areas of the atlas where each texture can be …","Advance the timer by <code>delta</code> seconds. Non repeating timer …","Advances the time for all actions","","","","","","The size of the tiles in pixels","","","Returns the number of times a repeating timer finished …","","Get the window’s title.","","Sets the title that displays on the window top bar, on the …","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Convert to a form convenient for passing outside of rust.","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Converts a physical size in this <code>Camera</code> to a logical size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns another <code>Query</code> from this that fetches the read-only …","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","","","","","","","","","","","","","Toggle the visibility.","","","","Constructs an event at the trace level.","Constructs a span at the trace level.","","Data pertaining to how the sprite is drawn on the screen","","","The transform of the entity.","Transforms the given <code>point</code>, applying shear, scale, …","Transforms the given <code>point</code>, applying scale, rotation and …","Transforms the given 2D vector as a point.","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code> as 3D point.","Rotates the given 2D vector.","Transforms the give 3D vector as a direction.","Transforms the give <code>Vec3A</code> as 3D vector.","","Translates this <code>Transform</code> around a <code>point</code> in space.","Get the translation as a <code>Vec3</code>.","Position of the entity. In 2d, the last value of the <code>Vec3</code> …","Mutably access the internal translation.","Get the translation as a <code>Vec3A</code>.","Sets whether the background of the window should be …","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …onvert a <code>Image</code> to a <code>DynamicImage</code>. Usefull for editing …","Constructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …","Constructs a new <code>Arc</code> with uninitialized contents, …","Constructs a new <code>Arc</code> with uninitialized contents, with the …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Constructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …","Returns the inner value, if the <code>Arc</code> has exactly one strong …eturns the [<code>TypeId</code>] used to differentiate labels.","Returns the [<code>TypeId</code>] used to differentiate labels.","Returns the [<code>TypeId</code>] used to differentiate labels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of the underlying type.","","","","","","","","","","","Returns the type name of this value’s type.","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","","Returns the type name of this value’s type.","","","","","","Returns the type name of this value’s type.","","","","","","Returns the type name of this value’s type.","","Returns the type name of this value’s type.","","Returns the type name of this value’s type.","","","Returns the type name of this value’s type.","","","","","","","","Returns the type name of this value’s type.","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","","","","","","","","","","","","","","","","","","","","","","","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Converts this handle into a typed <code>Handle</code> of an <code>Asset</code> <code>T</code>.","Create a weak typed <code>Handle</code> from this handle.","","","","","","","Newly inserted systems that will be initialized at the …","Newly inserted systems that will be initialized at the …","Newly inserted systems that will be initialized at the …","Newly inserted systems that will be initialized at the …","Newly inserted run criteria that will be initialized at …","Build a new rectangle formed of the union of this …","Build a new rectangle formed of the union of this …","Resumes the clock if paused.","Unpauses the Timer. Resumes the ticking of the timer.","If we have the only reference to <code>T</code> then unwrap it. …","Return the local up vector (Y).","Equivalent to <code>local_y()</code>","The input that represents the up direction in this virtual …dvances the execution of the <code>Schedule</code> by one cycle.","Updates the internal time measurements.","Updates the <code>ActionState</code> based on a vector of <code>ActionData</code>, …","","","","Swaps the event buffers and clears the oldest event …","","","Update the system’s archetype component <code>Access</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a query for the given <code>World</code>, checks if the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provide a closure to update the game inputs.","","A system that calls <code>Events::update</code> once per frame.","Updates time with a specified <code>Instant</code>.","","Get the value associated with the corresponding <code>action</code>","","","","The target value for this input, used for input mocking.","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates over the possible actions in the order they were …","","","If set, this camera will render to the given <code>Viewport</code> …","Returns a ray originating from the camera, that passes …","User indication of whether an entity is visible","User indication of whether an entity is visible","The visibility of the entity.","The visibility of the entityonstructs an event at the warn level.","Constructs a span at the warn level.","Generates a <code>VirtualDPad</code> corresponding to the <code>WASD</code> keyboard …","Whether to watch for changes in asset files. Requires the …","Creates a weak handle into an Asset identified by <code>id</code>.","Create a weak, untyped handle into an Asset identified by …","Gets the number of <code>Weak</code> pointers to this allocation.","Creates a weak untyped handle with an arbitrary id.","Returns the actions that are currently pressed, and the …","Rectangle width (max.x - min.x).","The current logical width of the window’s client area.","The requested logical width of the window’s client area.","","","","Add the given layer.","Creates a new asset server with a boxed asset I/O.","Creates a <code>ChildBuilder</code> with the given children built in …","Creates a <code>WorldChildBuilder</code> with the given children built …","","Returns this <code>SingleAxis</code> with the deadzone set to the …","Returns this <code>DualAxis</code> with the deadzone set to the …","Set an easing for the tween","Builder version of <code>set_enter_stage</code>","Builder version of <code>add_enter_system</code>","Builder version of <code>add_enter_system_set</code>","Builder version of <code>set_exit_stage</code>","Builder version of <code>add_exit_system</code>","Builder version of <code>add_exit_system_set</code>","","Sets the label for the timestep. Setting a label allows a …","Create a configuration that forces using the given number …","Set the panning of the sound.","Set the playback rate of the sound.","Builder-style method for [<code>set_rate_lock</code>]","Returns this <code>Transform</code> with a new rotation.","Assigns a run criteria to the system. Can be a new …","","","","Returns this <code>Transform</code> with a new scale.","Builder method for adding a child stage","Similar to <code>add_stage</code>, but it also returns itself.","Similar to <code>add_stage_after</code>, but it also returns itself.","Similar to <code>add_stage_before</code>, but it also returns itself.","Add the first system, converting into a <code>ConditionSystemSet</code>","","","Similar to <code>add_system_to_stage</code>, but it also returns itself.","","","Returns this <code>Transform</code> with a new translation.","Set the volume of the sound.","Removes the given rendering layer.","The main ECS <code>World</code> of the <code>App</code>. This stores and provides …","","","","","","","The WorldId this stage was last run on.","Given a position in world space, use the camera’s …","Given a position in world space, use the camera to compute …","Returns the modulus used to calculate <code>elapsed_wrapped</code> and …","","","","","","","","","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","","","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The axis representing horizontal movementeturns the vector part of the quaternion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The axis representing vertical movementhe delay after throwing the mine, before it becomes armed …","","","","","","","The grenade atlas","","","","","","","The grenade atlas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time in seconds before a grenade explodes","The time in seconds before a grenade explodes","","","","","","","","","","","","","","","","","","","","","","45 fix updates per second, so if this is 45 the maximum …","","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Alpha channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Blue channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Green channel. [0.0, 1.0]","Hue channel. [0.0, 360.0]","Lightness channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Red channel. [0.0, 1.0]","Saturation channel. [0.0, 1.0]","","","","","","","","","","","","","","","","","Current playback position in seconds","Current playback position in seconds","Current playback position in seconds","Current playback position in seconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","The requested resource is already borrowed.","Component that may be added to entities with an <code>AtlasSprite</code>…","A path to an asset.","Trait for asset providers.","A mutable borrow of an <code>AssetProvider</code>.","A borrow of an <code>AssetProvider</code>.","A resource that may be used to access <code>AssetProvider</code>s for …","The type of the <code>AssetProviders</code> resource.","An atlas image asset type, contains no data, but …","An animated sprite component.","A typed, wrapper handle around <code>UntypedComponentStore</code> that …","A read-only borrow of <code>AtomicComponentStore</code>.","A mutable borrow of <code>AtomicComponentStore</code>.","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","A handle to a resource from a <code>Resources</code> collection.","An audio event that may be sent to the <code>AudioEvents</code> …","Resource containing the audio event queue.","The audio source asset type, contains no data, but …","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","Resource that contains a bevy world.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","Makes an entity behave like a camera.","Component for an entity with camera shake.","Queue that can be used to send camera trauma events.","Resource for controlling the clear color.","A resource containing the <code>Commands</code> command queue.","A <code>SystemParam</code> that can be used to schedule systems that …","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","A <code>StageLabel</code> for the 5 core stages.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","The execution of the dispatcher failed and returned one or …","Helper trait that is auto-implemented for anything that …","The types of errors used throughout the ECS.","Holds a list of alive entities.","Iterator over entities returned by <code>Entities::iter_with</code>.","An entity index.","Iterator over entities using the provided bitset.","Euler rotation sequences.","All false.","All false.","The first stage","This is a resource that stores the game’s fixed frame …","A typed handle to an asset.","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Image asset type, contains no data, but <code>Handle&lt;Image&gt;</code> is …","Helper trait for converting bones types to Bevy types.","Converts a function into a <code>System</code>.","The type of iterator this query item creates","A small ascii byte array stored on the stack and used …","An error that may be caused when creating a <code>Key</code>.","The fifth stage","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","The key is not ASCII.","A resource was not initialized in the <code>World</code> but the <code>System</code> …","All ones.","All ones.","All ones.","All ones.","The type of the parameter, ranging over the lifetime of …","Play a sound.","The fourth stage","The second stage","A quaternion representing an orientation.","A type representing a component-joining entity query.","The number of bits in a Ulid’s random portion","Helper trait that is auto-implemented for all <code>Clone</code>-able …","<code>SystemParam</code> for getting read access to a resource.","Type alias for getting the <code>AssetProviders</code> resource.","<code>SystemParam</code> for getting mutable access to a resource.","A collection of resources.","Resource providing a noise source for <code>CameraShake</code> entities …","A collection of systems that will be run in order.","A 2D sprite component","Trait for things that may be used to identify a system …","The intermediate state for the parameter, that may be …","Struct used to run a system function using the world.","This variant is for user-defined errors.","Trait used to implement parameters for <code>System</code> functions.","The result of a <code>System</code>’s execution.","Trait for system stages. A stage is a","An ordered collection of <code>SystemStage</code>s.","The number of bits in a Ulid’s time portion","All true.","All true.","A tilemap tile component.","A tilemap layer component.","Resource representing the current game time.","The key is too long.","The main transform component.","Associates a <code>Ulid</code> ID to a Rust type.","Derive macro for the <code>TypeUlid</code> trait.","This happens when two Rust types have the same <code>TypeUlid</code>, …","Implements typed operations on top of a …","Helper trait that is auto-implemented for anything that …","The type’s <code>Ulid</code>.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A Ulid is a unique 128-bit lexicographically sortable …","Faster hash map using <code>FxHashMap</code> and a ULID key.","Trait implemented for asset providers that can return …","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","An untyped handle to an asset.","An untyped resource that may be inserted into …","Used to construct an <code>UntypedResource</code>.","Storage for un-typed resources.","The third stage","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector with SIMD support.","","A 4-dimensional vector with SIMD support.","","","","A unit-length vector pointing along the positive W axis.","Information about the window the game is running in.","The <code>World</code> is simply a collection of <code>Resources</code>, and …","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","","","","","","","","","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Whether or not the camera is enabled and rendering.","Add an asset provider for a specific asset type.","Add a system to be run at the end of the stage.","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Add a system to this stage.","","Add a <code>System</code> to the stage with the given label.","Adds trauma to the camera, capping it at 1.0","Bitset containing all living entities","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","","","","","","","","","","","","","","","","Modify the iteration bitsetasts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","Returns a raw pointer to the underlying data in this cell.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","The atlas handle.","The texture atlas to use for the layer","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","","","","","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","Shorthand for combining bitsets with bit_or.","","","Read the bitset containing the list of entites with this …","Read the bitset containing the list of entites with this …","Get the bitset representing which entities have this …","Returns the bitset indicating which entity indices have a …","Returns a bitset where each index where the bit is set to …","","","","","","Shorthand for setting bits on the bitset container.","","","","","<code>bool</code> vector mask types. ","This is used create an instance of the system parame, …","","","","Immutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for reading.","","","","","","","","","","Borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for read-writing.","","","","","","","","","Mutably borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Cell containing the raw pointer to the resource’s data","","The camera will always restore to this position.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Clears the killed entity list.","","","","","Copies an <code>AtomicRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function that may be called to clone the resource from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","","","","","","","","Stores the world components.","Returns the quaternion conjugate of <code>self</code>. For a unit …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not the bitset contains the given entity.","Check whether or not a resource is in the store.","Creates a new <code>Entity</code> and returns it.","Creates a bitset big enough to contain the index of each …","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","","","","","Gets the datetime of when this Ulid was created accurate …","","","","","","","","","","","","","","","","The the length of time in seconds for the camera trauma to …","Free-standing, shorter equivalent to <code>Default::default()</codeeturns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An optional function that will be called to drop the …","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","The time elapsed since the start of the game session.","The ending frame of the animation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new <code>AtomicRef</code> for an optional component of the …","Make a new <code>AtomicRefMut</code> for an optional component of the …","Whether or not the flip the sprite horizontally.","Whether or not the flip the sprite horizontally.","Whether or not to flip the tile horizontally.","Whether or not the flip the sprite vertically.","Whether or not the flip the sprite vertically.","Whether or not to flip tile vertically.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an <code>UntypedComponentStore</code> that is valid for the …","The frames per second to play the animation at.","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from two column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Safety","Creates a new Ulid with the given datetime","Creates a new Ulid with the given datetime and random …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","","","","","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Create a Ulid from separated parts.","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","","","","","","","Create a transform from a rotation.","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Create a transform from a scale.","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","","Creates a Ulid from a Crockford Base32 encoded string","Create a transform from a translation.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rotation quaternion.","Returns the generation of this <code>Entity</code>.","","","","Returns a read-only pointer to the asset for the given …","Get a reference to an asset, if it exists in the store.","","Get an asset, given it’s handle","Get an asset, given it’s handle","Borrow a component in the store, if it exists for the …","Gets an immutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Get a read-only pointer to the component for the given …","Get’s the tile at the given position in the layer, …","Get the components of a certain type","Get a cell containing the resource data pointer for the …","Get a resource handle from the store.","Get a Bevy weak <code>Handle</code> from from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get the untyped component storage by the component’s UUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable-only pointer to the asset for the given …","Get a mutable reference to an asset, if it exists in the …","Returns a mutable reference to the wrapped value.","","Get an asset, given it’s handle","Mutably borrow a component in the store, if it exists for …","Gets a mutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets a mutable reference to the component of <code>Entity</code>.","Get a mutable pointer to the component for the given <code>Entity</code>","This is called to produce the intermediate state of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the layer in tiles.","helps to know if we should directly append after next_id …","","","","","","","","","The height of the camera in in-game pixels.","<code>i32</code> vector types. ","The unique identifier for the stage.","Returns a unique identifier for the stage.","","","The unique identifier for the stage.","The tile index in the tilemap texture.","The sprite image handle.","Implements the <code>BitSet</code> trait members for your type through …","Increment the random number, make sure that the ts millis …","Returns the index of this <code>Entity</code>.","","","","","This is the current index in the animation, with an <code>idx</code> of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize component storage for type <code>T</code>.","","","","","","Initialize a resource of type <code>T</code> by inserting it’s …","","","","","","","","","","","","","","","","","","","","","Initialize the contained systems for the given <code>world</code>.","This will be called to give the parameter a chance to …","","","","Initializes the resources required to run this system …","","","","This should be called once to initialize the system, …","Initialize the systems in the stages agains the <code>World</code>.","Insert a component into the store.","Inserts a component for the given <code>Entity</code> index. Returns …","Inserts a component for the given <code>Entity</code> index.","Returns true if the entity already had a component of this …","Insert a new resource","Insert a resource.","Insert a new stage, after another existing stage","Insert a new stage, before another existing stage","Install the camera utilities on the given <code>SystemStages</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonvert the type to a Bevy type.","","","Consumes the <code>AtomicRefCell</code>, returning the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to the internal, untyped <code>ComponentStore</code>.","Consume <code>Resources</code> and extract the underlying …","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Checks if the <code>Entity</code> is still alive.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Test if the Ulid is nil","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","","","","","Iterate over all components in the store.","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type.","Iterates immutably over all components of this type.","","","","","","","","","","","","","","","Mutably iterate over all components in the store.","Iterates mutably over all components of this type. Very …","Iterates mutably over all components of this type.","Iterates mutably over all components of this type.","Mutably iterate over all the components in the store that …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterate over the entities and components in the given …","Return an iterator over the provided bitset.","Iterate over all the components in the store that match …","Iterates immutably over the components of this type where …","","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","","","Iterates immutably over the components of this type where …","Iterates over entities using the provided bitset.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Create a new const <code>Key</code> parsed at compile time.","Kill an entity.","Returns entities in the killed list.","","The optional sub-asset label","Get the layout of the components stored.","","The memory layout of the resource","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","","","","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Remove the component info for dead entities.","Make a new <code>AtomicRef</code> for a component of the borrowed data.","Make a new <code>AtomicRefMut</code> for a component of the borrowed …","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum offset angle in radians that the camera shake …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","","The maximum offset position that the camera shake can …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion by a scalar value.","Multiplies a quaternion and a 3D vector, returning the …","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a 4D vector.","","The human-readable name for the stage, used for error …","Returns the human-readable name of the label, used in …","","Returns the underlying type name of the system.","","The human-readable name for the stage, used for error …","A best-effort name for the system, for diagnostic purposes.","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>AtomicRefCell</code> containing <code>value</code>.","Safety","Create a <code>Key</code> from a string.","Creates a new Ulid with the current time (UTC)","Create a new asset path.","Create a new asset handle, from it’s path and label.","Create a new handle from it’s path and label.","Create a arbitrary <code>UntypedComponentStore</code>.","Create a new <code>AtlasSprite</code> from the given atlas handle.","Create a new tile layer","Create a new <code>CameraShake</code> component with the provided …","Creates a new <code>UntypedResource</code> from an instance of a Rust …","Create a new, empty stage, for the given label.","Create an empty <code>UntypedResources</code>.","Create an empty <code>Resources</code>.","Create a new <code>World</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Create a new <code>UntypedResource</code> from raw <code>UntypedResourceInfo</code>.","","","","","","","","","","The ‘nil Ulid’.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Take this path, treat it as a path relative to <code>base_path</code>, …","","","","","","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","","","","","","","","","","","","","","","","","","The virtual filesystem path","The <code>AssetPath</code> for the asset.","The unique identifier of the asset this handle represents.","","","","","","","","","","","","","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","","Play a sound.","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","List of audio events that haven’t been handled by the …","The event queue.","The system queue that will be run at the end of the stage","Gets the random section of this ulid","Clone the value at <code>src</code>, writing the new value to <code>dst</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drop the value at <code>ptr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","Remove a component from an entity, returning the previous …","Removes the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …","Remove an asset provider.","Removes the component of <code>Entity</code>.","If there is a previous value, <code>true</code> will be returned.","Remove a resource","Whether or not to repeat the animation","","Stores the world resources.","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","The rotation of the entity.","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Execute the systems on the given <code>world</code>.","Execute the systems on the given <code>world</code>.","","Runs the system’s function using the provided <code>World</code>","This is run every time the system is executed","Run a system once, assuming any necessary initialization …","Run a system once.","The scale of the entity.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Add an event to the audio event queue.","Send a camera trauma event.","","","","","","","","","","","","","","","","","","Set the tile at the given position, to a certain entity.","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","The logical size of the window’s client area.","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","The stages in the collection, in the order that they will …","The starting frame of the animation.","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","Traits adding swizzle methods to all vector types. ","Convert into a <code>System</code>.","","The list of systems in the stage.","The size of each tile in the layer.","The vector of tile slots in this layer.","The amount of time the current frame has been playing","Gets the timestamp section of this ulid","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Creates a Crockford Base32 encoded string that represents …","","","","","","Creates a Crockford Base32 encoded string that represents …","","","","","","","","","","","","","","","","","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","The position of the entity in the world.","","","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Value from 0-1 that indicates the intensity of the shake. …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Attempts to immutably borrow the wrapped value, but …","Attempts to mutably borrow the wrapped value, but instead …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the asset provider for the given asset type, if it …","Get the components of a certain type","Gets a resource handle from the store if it exists.","Get the untyped component storage by the component’s UUID","Get the asset provider for the given asset type, if it …","Initialize component storage for type <code>T</code>.","Try to insert a resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Remove an asset provider.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.","<code>u32</code> vector types. ","","","","","","","","","","","","","","","","","","","","","","","Convert the handle to an <code>UntypedHandle</code>.","Borrow the underlying <code>UntypedResources</code> store.","","","","","Mutably borrow the underlying <code>UntypedResources</code> store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>SystemStages</code> collection, initialized with a stage …","Creates a new Ulid using data from the given random number …","Create a new <code>CameraShake</code> component with the provided …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternionhe handle to the sound to play.","The volume to play the sound at.","","","","","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector with SIMD support.","A 4-dimensional vector with SIMD support.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vectordimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","UV space is distributed by how much of the capsule …","An axis-aligned box defined by its minimum and maximum …","A cylinder with hemispheres at the top and bottom","Manner in which UV coordinates are distributed vertically.","A circle in the <code>XY</code> plane","","Upper third of the texture goes to the northern …","A sphere made from a subdivided Icosahedron.","A square on the <code>XZ</code> plane centered at the origin.","A rectangle on the <code>XY</code> plane centered at the origin.","A regular polygon in the <code>XY</code> plane","A torus (donut) shape.","A sphere made of sectors and stacks.","Hemispheres get UV space according to the ratio of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the middle cylinder on the <code>Y</code> axis, excluding the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Horizontally-flip the texture coordinates of the resulting …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of latitudes, distributed by inclination. Must be …","Number of longitudes, or meridians, distributed by azimuth.","","","","","","","","Creates a new box centered at the origin with the supplied …","","Creates a regular polygon in the <code>XY</code> plane","Creates a circle in the <code>XY</code> plane","Radius on the <code>XZ</code> plane.","The radius of the sphere.","Inscribed radius in the <code>XY</code> plane.","Inscribed radius in the <code>XY</code> plane.","","The radius of the sphere.","","","","","","","","","","","","","","","","","","","","","","","","Number of sections in cylinder between hemispheres.","Longitudinal sectors","Number of sides.","","Full width and height of the rectangle.","The total side length of the square.","Latitudinal stacks","The number of subdivisions applied.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manner in which UV coordinates are distributed vertically.","The number of vertices used.","","","","","","","","","","","","System adapter that ignores the output of the previous …","Converts a regular function into a system adapter.","System adapter that unwraps the <code>Ok</code> variant of a <code>Result</code>. …","","","A resource containing an in-progress game session.","Helper for creating and stopping game sessions.","Stage label for the game session stages","Update the game session.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Play sounds from the game session.","Restart a game session without changing the settings","","Start a game session","Stop a game session","","","","","","","","","","","","","","","","","Update the game session simulation.","Update the input to the game session.","","","","","","","","","","","Resource containing the font definitions to use for Egui.","","A UI widget may have multiple instances. We need to ensure …","Resource that stores which ui widgets are adjacent to …","The list of widgets in each direction from another widget","","","Awesome widget system shared by @aevyrie: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These widgets will have the focus change when pressing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Watches for asset events for <code>EguiFont</code> assets and updates …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System that renders the debug tools window which can be …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which page of the menu we are on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawns the background image for the main menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Render the main menu UI","","","","","","","","","","","","","","","","","","Spawns the background image for the main menu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the client is waiting for the map to be …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which settings tab we are on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kind of input binding to listen for.","Helper system param to get input events that we are …","","","","","","","","","","","","","","","","","","","","","","Format an InputKind as a user-facing string","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Render the sound settings UI","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Transition game to pause state","","","","","","","","","","","","","","","Extension trait with helpers for the egui context","Extension trait with helpers for egui responses","Extensions on <code>egui::Ui</code> for custom widgets","","","Clear the UI focus","Set this response to focused if nothing else is focused","","A button rendered with a <code>BorderImageMeta</code>","","","","Set the button border image","","","","","","","","Set whether or not the button focuses itself automatically …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Set the margin. This will be applied on the outside of the …","","Set the minimum size for the button","","","Set a different border to use when the mouse is clicking …","","Set a different border to use when focusing / hovering …","","Set the padding. This will be applied on the inside of the …","","By default, buttons senses clicks. Change this to a …","","Render the button","","","","","","","","","If <code>true</code>, the text will wrap to stay within the max width …","","A 9-patch style bordered frame.","Internal helper struct for rendering the <code>BorderedFrame</code>","","","","","","","","","","If border_only is set to <code>true</code>, then the middle section of …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Set the margin. This will be applied on the outside of the …","","Create a new frame with the given <code>BorderImageMeta</code>","Set the padding. This will be applied on the inside of the …","","","Render the frame","","","","","","","","","","","","",""],"i":[0,4,0,0,8,6,0,4,4,6,6,6,7,7,4,4,0,4,8,6,6,6,7,7,7,8,8,8,4,4,4,6,7,8,4,6,7,8,4,6,7,8,4,4,0,0,6,7,8,4,6,7,8,4,0,6,7,8,6,7,8,6,7,8,0,0,6,7,8,4,6,7,8,4,6,7,8,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,6,7,8,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,4,0,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,4,6,7,8,4,0,0,0,0,0,0,0,6,7,8,6,7,8,6,7,8,0,6,7,8,6,7,8,4,6,7,8,4,6,7,8,4,0,6,7,8,4,6,7,8,4,29,0,0,0,0,27,30,29,27,30,29,27,30,29,0,36,27,30,29,27,30,29,27,29,29,29,27,30,29,27,30,29,27,30,29,27,30,29,30,29,27,30,29,27,30,29,36,27,30,29,27,30,29,27,30,29,27,30,29,27,30,29,30,29,29,29,27,30,29,27,30,29,27,30,29,29,29,27,30,29,27,30,29,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,47,0,0,0,0,0,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,45,46,47,46,47,46,47,46,47,45,53,55,46,47,47,45,53,55,46,47,47,45,53,55,46,47,45,53,55,46,47,46,47,45,53,55,46,47,46,47,46,45,53,55,46,47,46,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,0,46,47,46,47,0,46,47,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,45,53,55,46,47,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,0,0,0,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,75,0,0,74,75,74,75,74,75,74,75,74,75,74,75,74,75,75,74,75,75,74,75,74,75,74,75,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,74,75,0,77,77,0,77,0,77,77,76,77,77,77,76,77,76,77,77,76,77,76,77,76,77,77,77,76,77,76,77,77,76,77,76,77,77,77,77,77,77,77,76,77,77,77,77,77,76,77,76,77,76,77,76,77,76,77,76,77,77,77,77,76,77,76,77,76,77,76,77,76,77,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,652,0,0,0,79,652,83,79,652,83,79,652,83,79,652,83,79,652,83,79,83,652,83,0,79,652,83,79,652,83,79,652,83,79,652,83,83,83,79,652,83,652,83,83,652,0,79,652,83,79,652,83,79,652,83,79,652,83,79,652,83,79,652,83,83,0,0,83,0,83,83,83,83,79,652,83,79,652,83,79,652,83,79,652,83,79,652,83,0,0,86,86,86,86,86,86,86,86,86,86,86,653,86,86,86,86,86,86,0,86,86,86,86,86,113,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,80,48,94,95,80,48,94,95,80,48,94,95,119,94,111,111,112,116,110,118,117,80,48,94,95,80,48,94,95,121,107,120,80,48,94,95,80,48,94,95,80,48,94,95,114,107,48,107,80,110,120,99,48,80,80,48,94,95,80,80,48,94,95,48,94,95,99,80,48,94,95,80,48,94,95,107,118,95,106,95,111,114,80,48,94,95,120,115,117,116,107,107,80,48,94,95,80,0,101,102,112,119,110,107,108,118,95,118,95,80,48,94,95,48,80,48,94,95,80,48,94,95,80,48,94,95,80,48,94,95,654,80,48,94,95,102,101,101,121,115,94,95,99,0,48,100,110,94,102,110,112,105,116,117,107,100,115,48,115,109,119,80,48,94,95,80,48,94,95,121,107,118,106,95,0,102,114,102,105,112,106,94,111,106,94,80,48,94,95,121,48,80,48,94,95,80,48,94,95,80,48,94,95,48,48,0,48,48,80,48,94,95,80,48,94,95,107,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,100,0,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,101,101,100,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,102,101,101,100,102,100,100,101,102,100,101,102,100,101,102,102,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,105,106,119,111,111,112,116,110,118,117,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,121,107,120,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,114,114,107,107,121,110,120,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,118,106,111,0,114,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,120,115,117,116,107,114,107,107,108,106,109,110,111,112,105,113,113,114,115,116,117,118,119,120,121,121,110,111,112,119,110,107,108,118,118,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,121,115,107,108,106,109,110,111,112,105,114,115,116,117,118,119,120,121,110,110,112,105,116,117,107,115,115,109,119,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,121,107,118,106,114,105,112,106,111,106,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,108,106,109,110,111,112,105,113,114,115,116,117,118,119,120,121,107,130,128,0,133,128,133,0,128,0,0,0,0,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,103,127,130,133,103,128,127,130,133,103,128,127,103,103,103,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,128,128,127,130,133,103,128,128,103,103,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,130,103,103,0,0,128,103,103,128,128,127,130,133,103,128,103,127,130,133,103,128,103,103,103,127,130,133,103,128,127,130,133,103,128,127,130,133,103,128,655,656,657,656,0,174,270,292,192,194,122,294,296,658,620,659,660,203,326,210,599,90,181,661,662,143,145,138,221,222,209,135,135,135,256,256,256,256,256,256,256,136,137,138,139,140,141,151,153,154,135,209,209,0,0,0,0,0,0,0,0,291,291,337,0,311,0,209,0,0,0,0,209,0,291,0,0,0,0,209,209,331,0,0,0,0,0,0,0,0,0,0,0,390,0,331,209,0,197,209,135,135,135,135,0,0,0,209,0,209,0,0,0,0,330,0,0,0,0,0,197,199,209,135,135,209,0,0,0,0,0,0,209,209,291,331,0,0,0,0,286,0,0,291,209,0,0,0,0,209,390,0,0,0,209,0,0,0,197,291,337,209,291,209,0,0,0,0,311,311,92,291,283,0,0,0,0,0,209,209,135,135,322,363,199,199,199,199,291,0,209,0,0,0,0,0,0,0,0,0,0,197,209,332,308,0,0,0,0,209,363,291,199,317,0,0,0,209,0,209,209,0,0,0,0,291,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,182,183,184,135,0,0,663,0,249,0,0,0,0,0,0,330,209,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,291,291,209,311,209,291,0,0,0,0,291,0,0,209,308,308,135,209,174,190,293,142,143,144,145,135,217,218,365,0,0,0,0,0,0,391,283,664,0,0,0,0,209,0,0,0,0,0,209,0,209,209,209,209,209,209,209,209,209,209,209,209,209,0,311,209,209,209,209,135,209,209,249,0,209,332,211,202,202,199,199,199,202,0,209,135,360,0,135,360,209,0,0,0,0,0,0,0,0,0,209,209,0,0,211,311,0,209,0,199,92,0,0,0,0,0,291,0,0,209,209,209,142,136,137,143,144,145,138,135,136,137,138,139,140,141,138,141,136,137,138,139,140,141,136,137,138,139,140,141,137,138,140,141,135,291,665,0,209,209,291,291,0,209,209,291,0,0,311,199,291,291,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,291,291,209,135,136,137,138,139,140,141,151,153,154,135,135,209,195,0,214,0,199,202,211,391,209,135,135,209,209,0,0,0,0,209,209,298,298,209,214,0,0,0,0,209,0,0,0,311,0,298,0,0,209,251,249,209,251,249,334,209,283,334,291,0,0,209,0,0,0,298,209,209,209,209,135,209,209,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,195,0,0,0,0,209,135,135,209,332,211,202,202,199,199,199,202,291,0,0,0,0,209,135,135,135,291,0,0,0,0,209,291,199,209,0,0,0,337,286,0,330,209,209,209,199,209,0,0,0,0,311,0,0,0,199,251,0,0,0,0,311,209,298,298,666,0,291,311,209,0,501,0,0,0,0,0,0,0,209,135,135,181,182,183,184,135,209,667,0,291,0,0,0,317,0,0,0,0,0,0,0,0,0,0,0,0,0,209,668,0,0,0,209,209,209,332,249,334,0,209,135,217,365,0,0,0,0,291,286,0,286,0,0,209,209,209,138,141,154,135,291,291,209,209,209,209,209,209,209,209,199,337,0,0,0,0,0,0,330,0,0,0,0,0,327,209,136,137,138,139,140,141,151,153,154,220,220,327,209,136,137,138,139,140,141,151,153,154,135,135,220,220,209,199,209,137,138,140,141,153,154,142,136,137,143,144,138,139,140,141,151,153,154,220,220,291,291,372,54,275,146,135,136,137,138,139,140,141,142,136,137,143,144,145,138,165,314,146,146,146,364,52,148,66,135,135,142,136,136,137,137,143,144,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,669,28,669,28,135,135,142,136,136,137,137,143,144,138,138,139,139,140,140,141,141,151,151,153,153,154,154,670,28,28,671,671,156,669,28,28,672,673,28,159,158,672,673,28,159,158,28,672,673,28,159,158,672,673,28,159,158,674,28,674,675,28,158,674,675,28,158,674,675,28,158,674,675,28,158,674,675,28,158,674,675,28,158,164,672,28,672,673,28,158,672,673,28,158,143,142,144,28,28,268,28,28,165,158,28,158,28,158,28,28,28,28,28,28,28,28,28,28,28,168,168,28,168,28,158,28,158,82,171,676,173,174,677,157,223,179,160,160,324,181,182,183,184,149,149,333,157,207,208,136,137,145,81,182,183,184,186,187,186,187,186,137,137,137,187,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,391,223,168,168,221,222,391,223,247,39,247,39,39,226,57,264,265,223,28,266,289,289,371,380,381,372,170,170,170,179,520,521,156,267,92,189,189,189,189,268,359,290,174,174,174,291,291,291,165,269,50,270,245,246,190,190,190,292,293,191,191,470,173,468,271,360,249,249,249,192,192,159,250,250,250,193,193,251,251,251,194,194,194,194,384,385,386,387,388,389,195,195,195,195,272,196,196,196,196,350,354,122,294,294,294,295,295,296,296,296,297,298,298,299,300,300,300,197,197,197,301,301,301,198,198,198,302,302,302,303,303,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,199,199,199,308,308,308,658,200,200,620,44,44,44,44,659,309,309,309,201,201,201,201,310,310,310,311,660,202,202,202,202,146,146,146,203,203,312,204,204,204,204,205,205,361,313,314,314,314,206,206,247,315,316,362,149,317,318,187,187,319,320,320,320,321,207,207,322,322,322,323,226,226,226,81,82,82,208,208,324,171,325,326,327,327,327,67,209,209,209,209,328,168,329,330,330,330,331,331,332,332,332,283,283,283,333,333,334,334,334,148,335,210,210,210,210,85,85,85,211,211,211,211,363,286,286,286,336,336,336,337,337,337,347,212,212,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,213,214,214,215,215,216,216,39,135,135,135,256,68,68,68,68,287,93,253,22,22,22,340,341,365,172,172,181,181,181,181,217,217,218,218,218,218,366,219,219,220,220,220,220,661,662,182,182,182,182,183,183,183,183,184,184,184,184,142,142,142,136,136,136,137,137,137,143,143,143,144,144,144,145,145,145,138,138,138,221,222,139,139,139,139,140,140,140,140,141,141,141,141,151,151,151,151,153,153,153,153,154,154,154,154,392,288,160,158,57,264,265,223,28,266,289,371,380,381,372,170,170,179,520,521,156,267,92,189,189,268,359,290,174,174,291,165,269,50,270,245,246,190,190,292,293,191,191,470,173,468,271,360,249,192,192,159,250,193,193,251,194,194,384,385,386,387,388,389,195,195,272,196,196,350,354,122,294,295,296,297,298,299,300,197,197,301,198,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,199,308,658,200,200,620,44,44,659,309,201,201,310,311,660,202,202,146,146,203,203,312,204,204,205,205,361,313,314,206,206,247,315,316,362,149,317,318,187,187,319,320,321,207,207,322,323,226,81,82,82,208,208,324,171,325,326,327,67,209,209,328,168,329,330,331,332,283,333,334,148,335,210,210,85,211,211,363,286,336,337,347,212,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,213,214,214,215,215,216,216,39,135,135,256,68,68,287,93,253,22,340,341,365,172,172,181,181,217,217,218,218,366,219,219,220,220,661,662,182,182,183,183,184,184,142,142,136,136,137,137,143,143,144,144,145,145,138,138,221,222,139,139,140,140,141,141,151,151,153,153,154,154,392,288,160,158,200,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,143,142,144,136,139,151,137,140,153,138,141,154,189,291,249,250,251,195,196,303,199,44,309,201,202,204,314,320,322,226,327,209,332,210,211,286,336,337,68,22,220,182,183,184,139,140,141,151,153,154,145,22,22,22,135,135,136,151,137,153,138,154,162,180,176,135,135,50,245,246,142,136,137,143,144,138,139,140,141,151,153,154,142,136,137,143,144,138,139,140,141,151,153,154,247,22,22,22,22,247,189,50,245,246,49,22,142,136,137,143,144,145,138,139,140,141,151,153,154,142,136,137,143,144,138,139,140,141,151,153,154,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,135,135,135,135,22,22,162,180,176,189,249,250,251,136,139,137,140,138,141,139,151,140,153,140,153,141,154,172,215,52,274,164,52,85,22,22,290,157,157,81,256,256,256,256,256,171,171,360,146,204,320,135,174,190,149,149,312,312,677,157,223,179,160,160,157,0,200,182,183,184,139,139,140,140,141,141,151,151,153,153,154,154,182,183,184,182,183,184,182,183,184,139,139,140,140,141,141,151,151,153,153,154,154,182,183,184,182,183,184,139,139,140,140,141,141,151,151,153,153,154,154,182,183,184,81,0,328,328,328,328,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,216,369,679,264,265,266,267,268,269,270,271,272,273,274,275,85,276,299,39,39,201,664,50,245,246,22,22,361,362,67,361,362,361,362,149,149,333,44,299,22,136,137,138,39,359,170,149,39,307,351,494,49,367,39,284,284,302,391,223,39,521,386,520,387,388,470,286,136,137,138,139,140,141,151,153,154,136,137,138,136,137,138,136,137,138,146,146,52,187,287,93,85,205,206,39,85,187,187,288,39,289,170,189,290,174,291,190,292,293,191,249,250,193,251,195,196,122,294,295,296,297,298,299,300,197,301,198,302,303,304,305,306,307,164,199,308,200,44,309,201,310,311,202,146,203,312,204,205,313,314,206,315,316,317,318,187,319,320,321,207,322,323,226,81,82,208,324,325,326,327,67,209,328,329,330,331,332,283,333,334,335,210,85,211,286,336,337,212,186,338,339,49,213,214,215,216,135,256,68,22,340,341,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,435,436,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,181,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,289,170,189,290,174,291,190,292,293,191,249,250,193,251,195,196,122,294,295,296,297,298,299,300,197,301,198,302,303,304,305,306,307,164,199,308,200,44,309,201,310,311,202,146,203,312,204,205,313,314,206,315,316,317,318,187,319,320,321,207,322,323,226,81,82,208,324,325,326,327,67,209,328,329,330,331,332,283,333,334,335,210,85,211,286,336,337,212,186,338,339,213,214,215,216,135,256,68,22,340,341,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,22,289,170,189,290,174,291,190,292,293,191,249,250,193,251,195,196,122,294,295,296,297,298,299,300,197,301,198,302,303,304,305,306,307,164,199,308,200,44,309,201,310,311,202,146,203,312,204,205,313,314,206,315,316,317,318,187,319,320,321,207,322,323,226,81,82,208,324,325,326,327,67,209,328,329,330,331,332,283,333,334,335,210,85,211,286,336,337,212,186,338,339,213,214,215,216,135,256,68,22,340,341,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,44,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,44,309,44,149,268,189,44,209,210,336,68,22,181,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,142,143,144,142,143,144,200,207,208,303,149,347,156,285,54,391,223,247,39,462,189,174,190,192,194,44,146,205,314,206,207,208,85,213,214,215,216,181,217,218,307,39,39,290,256,190,256,174,190,174,213,365,366,305,306,179,145,146,170,350,52,351,256,39,172,221,222,256,284,290,135,22,142,136,137,143,144,138,139,140,141,151,153,154,274,137,140,153,354,288,354,146,389,354,22,149,149,333,149,149,149,149,149,333,207,208,172,170,57,196,197,198,199,200,201,202,204,82,209,210,211,212,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,0,0,149,149,333,22,0,223,28,266,289,170,189,268,359,290,174,269,270,190,292,293,191,271,360,193,195,272,350,354,122,297,299,303,285,284,54,273,274,275,305,306,200,44,311,146,203,205,361,313,206,362,318,187,319,321,207,81,208,324,171,325,326,67,328,329,333,334,148,85,363,336,364,186,276,213,214,215,216,39,135,287,22,340,365,172,181,217,218,366,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,160,158,159,340,328,391,276,276,276,191,191,191,191,191,191,315,206,667,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,189,268,359,359,290,174,291,165,269,50,50,270,245,245,246,246,190,292,292,293,191,470,173,468,271,360,249,192,192,159,250,193,251,194,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,49,90,90,462,367,367,213,214,215,216,39,135,256,68,287,93,253,22,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,143,144,145,145,138,138,221,222,139,140,141,151,153,154,392,288,160,158,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,359,290,174,291,165,269,50,50,270,245,245,246,246,190,292,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,143,144,145,145,138,138,221,222,139,140,141,151,153,154,392,288,160,158,22,680,289,170,189,174,291,190,193,195,196,122,295,299,300,197,301,198,302,199,308,201,310,311,202,146,312,204,313,315,316,317,318,319,320,321,322,323,226,81,324,325,327,67,209,328,329,330,331,332,283,333,334,210,85,211,286,336,336,337,212,339,135,68,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,39,681,681,0,142,143,144,289,174,190,136,137,145,138,136,137,138,136,136,137,137,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,136,136,137,137,138,138,139,139,140,140,141,141,151,151,153,153,154,154,136,137,145,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,174,190,226,264,265,223,28,266,289,371,380,381,372,170,179,369,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,57,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,163,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,369,57,163,22,369,163,369,57,163,22,22,226,287,149,264,265,223,28,266,289,371,371,380,381,372,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,44,659,309,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,325,22,325,256,193,193,297,189,291,249,250,251,194,195,196,294,296,300,301,302,303,199,308,44,309,201,310,202,204,314,320,322,226,327,209,330,332,283,334,210,85,211,286,336,337,68,22,181,218,220,182,183,184,139,140,141,151,153,154,189,291,249,250,251,195,196,303,199,44,309,201,202,204,314,320,322,226,327,209,332,210,211,286,336,337,68,22,220,182,183,184,139,140,141,151,153,154,297,299,0,191,193,191,191,191,191,191,191,191,191,191,193,191,191,321,319,28,22,22,22,363,49,22,49,22,288,22,159,39,347,66,39,39,66,39,384,385,314,316,39,289,170,189,174,291,190,249,250,251,194,195,196,294,295,296,298,300,197,301,198,302,303,199,308,44,309,201,310,202,146,204,314,320,322,226,327,209,330,331,332,283,333,334,210,85,211,286,336,337,212,135,68,22,181,218,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,289,170,189,174,291,190,249,250,251,194,195,196,294,295,296,298,300,197,301,198,302,303,199,308,44,309,201,310,202,146,204,314,320,322,226,327,209,330,331,332,283,333,334,210,85,211,286,336,337,212,135,68,22,181,218,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,189,291,249,250,251,194,195,196,294,296,300,301,302,303,199,308,44,309,201,310,202,204,314,320,322,226,327,209,330,332,283,334,210,85,211,286,336,337,68,22,181,218,220,182,183,184,139,140,141,151,153,154,289,170,189,174,291,190,193,195,196,295,300,197,301,198,302,199,308,201,310,202,146,204,320,322,323,226,327,209,330,331,332,283,333,334,210,85,211,286,336,337,212,135,68,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,0,0,22,287,22,198,52,93,253,287,287,168,168,168,168,168,168,168,168,22,268,159,136,137,138,67,287,136,137,139,140,151,153,256,172,44,205,206,203,219,371,372,372,214,215,216,215,216,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,247,435,436,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,181,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,435,170,189,190,191,193,195,196,197,198,199,200,44,201,202,146,204,205,206,187,207,82,208,209,211,212,213,214,215,216,135,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,435,170,189,190,191,193,195,196,197,198,199,200,44,201,202,146,204,205,206,187,207,82,208,209,211,212,213,214,215,216,135,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,435,436,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,181,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,435,436,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,181,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,661,662,247,171,193,193,186,191,191,149,149,333,207,208,207,208,136,137,138,22,28,289,170,92,189,189,359,174,291,50,245,246,190,293,191,360,249,192,250,193,251,194,384,385,386,387,388,389,195,57,196,350,122,294,295,296,298,299,300,197,301,198,302,303,390,390,307,52,199,308,200,44,309,201,310,311,202,146,203,312,204,313,247,315,316,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,163,328,168,329,330,331,332,283,333,334,148,335,210,85,211,286,286,336,337,212,186,351,391,391,391,49,90,367,213,214,215,216,39,135,256,68,287,22,22,22,341,365,172,181,217,218,366,220,182,182,183,183,184,184,142,142,136,136,137,137,143,143,144,144,145,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,392,288,158,149,247,351,247,351,247,359,212,359,351,171,171,174,190,215,136,137,138,200,164,329,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,189,189,268,359,290,174,174,174,174,174,174,291,165,269,50,270,245,246,246,246,190,190,190,190,292,293,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,298,298,299,300,197,301,198,302,303,285,284,54,51,390,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,200,200,620,44,659,309,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,85,211,363,286,286,286,286,286,286,286,286,286,286,286,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,49,90,462,367,367,213,214,214,214,215,216,39,135,135,135,135,256,256,256,256,256,256,256,256,256,256,256,68,287,93,253,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,340,341,365,365,172,181,217,218,366,219,220,661,662,182,183,184,142,142,142,136,136,136,136,136,136,137,137,137,137,137,137,143,144,144,145,145,145,138,138,138,138,138,138,138,138,138,138,138,138,221,222,139,139,139,140,140,140,140,141,141,141,141,141,141,141,151,151,151,153,153,153,153,154,154,154,154,154,154,154,392,288,160,160,160,158,145,142,136,143,136,137,145,138,139,140,141,151,153,154,142,144,145,68,172,170,170,142,143,144,142,143,144,142,143,144,142,143,144,189,174,190,192,194,44,146,205,314,206,207,208,85,213,214,215,216,181,217,218,170,142,143,144,172,142,144,145,22,22,341,82,22,22,85,22,181,181,142,143,144,145,143,144,145,142,145,190,142,136,137,143,144,138,139,140,141,151,153,154,142,144,68,22,682,170,189,174,190,191,193,195,196,197,198,199,200,44,201,202,146,204,82,209,210,211,212,213,215,216,135,68,172,217,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,190,145,145,145,144,142,144,145,142,144,145,142,144,145,190,142,144,143,142,144,145,193,136,137,145,138,139,140,141,151,153,154,22,341,165,293,365,190,142,144,338,339,340,221,222,320,322,145,341,683,223,28,266,289,170,189,268,359,290,174,269,270,190,292,293,191,271,360,192,193,194,195,272,350,354,122,297,299,303,285,284,54,273,274,275,305,306,200,44,311,146,203,205,361,313,206,247,362,318,187,319,321,207,81,208,324,171,325,326,67,328,329,333,334,148,85,363,336,364,186,276,213,214,215,216,39,135,287,22,365,172,181,217,218,366,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,160,158,190,145,361,362,339,135,85,198,201,204,226,350,22,256,68,68,359,360,194,354,52,247,148,85,351,39,28,665,39,284,351,351,351,189,174,190,192,194,44,146,205,314,206,207,208,85,213,214,215,216,181,217,218,354,354,288,66,39,39,168,168,684,685,170,189,174,190,191,192,193,194,196,435,198,436,200,44,201,146,203,204,205,206,187,207,82,208,210,212,213,215,216,181,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,684,685,170,189,174,190,191,192,193,194,196,435,198,436,200,44,201,146,203,204,205,206,187,207,82,208,210,212,213,215,216,181,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,674,675,28,158,674,675,28,158,674,675,28,158,674,675,28,158,164,164,52,164,164,189,291,249,250,251,195,196,303,199,44,309,201,202,204,314,320,322,226,327,209,332,210,211,286,336,337,68,22,220,182,183,184,139,140,141,151,153,154,256,351,146,187,146,187,391,223,164,247,247,351,247,351,256,359,354,52,247,148,351,39,22,39,22,39,39,39,52,66,39,247,247,146,187,186,148,148,214,215,216,287,287,146,186,39,39,39,39,39,39,338,338,354,247,351,354,247,351,247,247,68,158,158,28,28,82,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,247,351,256,293,305,306,361,362,365,325,325,81,329,312,22,170,371,51,85,44,309,318,189,291,249,250,251,195,196,303,199,44,309,201,202,204,314,320,322,226,327,209,332,210,211,286,336,337,68,22,220,182,183,184,139,140,141,151,153,154,189,213,170,149,333,135,135,135,44,149,39,196,295,300,301,302,44,309,310,316,149,212,39,52,323,157,315,341,341,341,341,288,39,22,665,68,136,137,138,139,140,141,151,153,154,387,208,68,136,137,138,139,140,141,151,153,154,195,197,199,202,209,211,214,135,256,256,256,173,354,0,0,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,247,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,359,669,28,39,39,669,28,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,28,39,28,66,39,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,171,171,391,223,364,85,221,222,85,256,671,686,389,85,85,85,28,39,66,39,28,66,39,39,170,39,687,299,312,81,67,371,146,223,170,181,264,265,223,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,392,288,160,158,57,264,265,223,28,266,289,371,380,381,372,170,170,179,520,521,156,267,92,189,189,268,359,290,174,174,291,165,269,50,270,245,246,190,190,292,293,191,191,470,173,468,271,360,249,192,192,159,250,193,193,251,194,194,384,385,386,387,388,389,195,195,272,196,196,350,354,122,294,295,296,297,298,299,300,197,197,301,198,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,199,308,658,200,200,620,44,44,659,309,201,201,310,311,660,202,202,146,146,203,203,312,204,204,205,205,361,313,314,206,206,247,315,316,362,149,317,318,187,187,319,320,321,207,207,322,323,226,81,82,82,208,208,324,171,325,326,327,67,209,209,328,168,329,330,331,332,283,333,334,148,335,210,210,85,211,211,363,286,336,337,347,212,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,213,214,214,215,215,216,216,39,135,135,256,68,68,287,93,253,22,340,341,365,172,172,181,181,217,217,218,218,366,219,219,220,220,661,662,182,182,183,183,184,184,142,142,136,136,137,137,143,143,144,144,145,145,138,138,221,222,139,139,140,140,141,141,151,151,153,153,154,154,392,288,160,158,264,265,223,266,289,380,381,170,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,688,157,122,50,245,246,49,50,50,246,246,470,468,192,351,351,49,90,90,462,22,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,189,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,501,223,359,142,143,144,145,290,369,57,163,213,664,50,245,246,307,49,367,664,50,245,246,307,49,367,284,172,170,52,247,82,85,286,351,287,93,391,223,142,136,137,143,144,145,138,149,142,136,137,143,144,145,138,136,137,138,145,136,137,138,139,140,141,136,137,145,138,191,689,285,54,28,39,39,391,223,44,309,22,369,336,142,136,137,143,144,145,138,139,140,141,151,153,154,218,217,218,218,218,218,44,309,350,52,247,148,85,186,351,462,93,181,690,351,247,351,247,351,247,351,287,690,351,39,435,436,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,181,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,351,85,186,186,186,247,247,351,247,351,351,52,247,148,351,158,247,351,93,325,324,323,325,186,186,193,146,187,186,187,186,146,187,186,187,186,337,372,316,677,157,223,179,160,165,392,677,223,179,160,325,325,39,307,351,49,367,39,664,50,245,246,168,191,191,181,312,313,22,174,190,226,216,322,52,82,85,286,287,93,22,136,137,145,138,136,137,145,138,136,137,145,138,136,137,145,138,297,371,372,372,691,164,311,313,315,316,317,318,319,321,323,324,325,328,329,164,164,44,309,164,293,190,190,190,165,22,213,213,213,190,144,144,144,144,190,371,371,22,275,39,22,44,22,351,351,335,85,192,194,50,245,246,164,307,44,85,462,253,247,247,247,247,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,136,137,138,139,140,141,151,153,154,170,136,137,138,139,140,141,151,153,154,22,22,171,171,290,85,335,136,137,138,139,140,141,151,153,154,170,328,136,137,138,139,140,141,151,153,154,290,193,149,193,149,333,286,333,322,226,320,320,322,226,320,320,328,174,174,174,190,190,135,135,135,135,135,142,142,142,142,142,136,136,137,137,143,143,143,144,144,144,144,145,145,145,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,136,137,138,135,135,135,135,135,142,142,136,136,137,137,143,143,144,144,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,143,142,144,145,142,143,144,174,190,143,142,145,142,145,144,168,189,286,391,223,369,679,350,189,299,312,81,435,170,189,190,191,193,195,196,197,198,199,200,44,201,202,146,204,205,206,187,207,82,208,209,211,212,213,214,215,216,135,217,218,219,182,183,184,142,136,137,143,144,138,139,140,141,151,153,154,213,22,215,216,142,136,137,143,144,145,138,139,140,141,320,320,28,170,179,189,359,165,191,470,173,468,159,193,196,297,198,164,201,204,247,149,208,168,85,66,39,256,22,172,182,183,184,136,137,138,221,222,139,140,141,151,153,154,288,160,247,247,22,82,172,66,22,22,22,361,22,22,470,468,468,39,39,181,136,137,145,138,136,137,138,182,183,184,139,140,141,151,153,154,315,287,288,160,288,288,160,288,288,160,288,160,288,288,160,288,288,160,288,288,160,288,68,145,289,144,144,144,288,288,288,288,288,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,247,351,247,351,247,168,168,168,494,520,386,387,388,389,156,389,468,189,298,44,209,210,336,68,22,181,170,189,174,190,191,192,193,194,195,57,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,170,189,174,190,191,192,193,194,195,57,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,689,191,193,285,54,51,165,193,165,191,193,193,136,139,136,139,144,144,144,144,144,144,144,363,22,212,149,149,149,149,213,213,213,149,149,67,22,692,223,392,689,285,54,328,335,67,28,28,288,321,323,298,149,295,310,149,333,212,320,320,136,137,138,256,172,149,149,333,146,187,693,28,146,187,85,39,187,186,693,28,39,146,148,148,256,256,213,142,142,136,136,137,137,143,143,144,144,145,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,136,137,138,136,137,138,144,361,362,213,390,22,22,22,22,288,671,686,389,156,371,372,39,39,66,135,174,165,289,170,189,290,174,291,190,292,293,191,249,250,193,251,195,196,122,294,295,296,297,298,299,300,197,301,198,302,303,304,305,306,307,164,199,308,200,44,309,201,310,311,202,146,203,312,204,205,313,314,206,315,316,317,318,187,319,320,321,207,322,323,226,81,82,208,324,325,326,327,67,209,328,329,330,331,332,283,333,334,335,210,85,211,286,336,337,212,186,338,339,213,214,215,216,135,256,68,22,340,341,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,191,191,191,191,191,191,289,170,189,290,174,291,190,292,293,191,249,250,193,251,195,196,122,294,295,296,297,298,299,300,197,301,198,302,303,304,305,306,307,164,199,308,200,44,309,201,310,311,202,146,203,312,204,205,313,314,206,315,316,317,318,187,319,320,321,207,322,323,226,81,82,208,324,325,326,327,67,209,328,329,330,331,332,283,333,334,335,210,85,211,286,336,337,212,186,338,339,213,214,215,216,135,256,68,22,340,341,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,191,191,191,191,191,191,191,191,191,191,191,191,149,149,286,22,39,135,142,136,137,143,144,138,139,140,141,151,153,154,93,136,137,138,22,22,207,171,52,221,222,195,57,196,197,199,201,202,204,209,210,211,214,135,68,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,170,189,174,190,191,192,193,194,195,57,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,181,217,218,219,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,57,170,189,174,190,191,192,193,194,195,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,0,221,222,669,28,22,28,28,172,172,136,137,138,136,137,138,191,191,191,146,187,146,187,693,28,39,693,28,39,146,164,136,136,137,137,138,138,139,139,140,140,141,141,151,151,153,153,154,154,136,136,137,137,138,138,139,139,140,140,141,141,151,151,153,153,154,154,193,193,360,52,148,85,221,222,85,256,284,671,686,389,39,671,66,39,39,39,39,39,39,288,168,57,149,149,149,149,52,193,187,187,693,28,39,149,149,333,172,149,149,333,39,39,39,173,288,173,689,285,54,51,371,135,135,135,135,135,135,174,190,226,216,322,190,136,139,190,190,190,190,190,190,190,190,190,190,190,136,137,138,142,143,144,163,694,28,165,159,168,391,158,168,160,158,695,688,179,695,688,179,695,688,179,695,688,179,695,688,179,695,688,179,695,688,179,695,688,179,695,688,179,695,688,179,695,688,179,158,695,688,179,695,688,179,391,223,28,172,219,190,315,216,149,148,149,149,333,216,28,288,173,51,51,136,137,138,139,140,141,151,153,154,287,253,253,287,253,39,39,39,693,28,39,693,28,39,57,696,289,170,189,174,291,190,193,195,196,295,300,197,301,198,302,199,308,201,310,202,146,204,320,322,323,226,327,209,330,331,332,283,333,334,210,85,211,286,336,337,212,135,68,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,275,164,57,170,679,189,189,174,190,191,360,192,193,194,195,196,197,198,52,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,288,135,146,168,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,135,664,50,245,246,149,149,149,149,149,193,193,672,673,28,159,158,168,672,673,28,159,158,135,85,341,256,391,223,664,50,245,246,149,173,149,193,149,168,689,285,54,51,671,689,285,54,51,149,149,135,165,191,191,149,149,149,168,158,28,149,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,149,52,218,689,285,54,51,191,371,0,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,151,151,151,151,151,151,151,151,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,151,151,151,151,151,151,151,151,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,52,136,137,138,139,140,141,354,247,168,351,354,247,351,168,170,22,172,315,82,145,324,173,304,303,81,22,371,341,68,156,389,66,39,66,39,156,389,66,156,389,66,39,313,182,183,184,136,137,138,139,140,141,151,153,154,305,306,67,288,28,158,158,168,165,173,158,371,191,191,689,697,285,54,51,52,223,347,351,285,54,81,223,165,223,689,285,54,51,329,193,39,39,22,142,136,136,137,137,143,144,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,28,28,28,142,136,136,137,137,143,144,138,138,139,139,140,140,141,141,151,151,153,153,154,154,143,142,144,142,142,136,136,137,137,143,143,144,144,145,145,138,138,139,139,140,140,141,141,151,151,153,153,154,154,192,320,322,0,494,160,168,57,213,269,329,305,200,82,306,172,82,172,82,193,146,50,245,246,49,367,312,318,318,193,193,149,149,333,136,137,145,138,139,140,141,151,153,154,145,68,142,143,144,142,143,144,145,213,289,170,189,290,174,291,190,292,293,191,249,250,193,251,195,196,122,294,295,296,297,298,299,300,197,301,198,302,303,304,305,306,307,164,199,308,200,44,309,201,310,311,202,146,203,312,204,205,313,314,206,315,316,317,318,187,319,320,321,207,322,323,226,81,82,208,324,325,326,327,67,209,328,329,330,331,332,283,333,334,335,210,85,211,286,336,337,212,186,338,339,213,214,215,216,135,256,68,22,340,341,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,351,174,144,145,189,390,286,22,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,217,361,362,216,0,0,305,306,361,362,365,174,190,142,144,144,142,144,144,288,190,174,190,174,174,333,142,143,144,137,138,140,141,153,154,22,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,172,22,22,22,136,137,138,22,22,372,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,162,180,176,392,288,160,158,170,189,174,190,191,192,193,194,195,57,196,197,198,199,200,44,201,202,146,203,204,205,206,187,207,82,208,209,210,211,212,213,214,215,216,135,68,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,57,170,189,174,190,191,192,193,194,195,196,299,197,198,51,304,199,200,200,44,201,202,146,203,312,204,205,206,187,207,81,82,82,208,67,209,210,85,211,212,213,214,215,216,135,256,68,341,172,172,181,217,218,219,220,182,183,184,142,136,137,143,144,145,138,139,140,141,151,153,154,299,51,304,200,312,81,82,67,85,256,341,172,309,309,299,312,315,81,326,67,168,168,168,168,168,170,170,191,193,22,174,190,226,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,28,191,146,214,215,216,287,149,149,391,223,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,247,307,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,620,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,68,661,662,149,149,173,149,287,191,247,146,50,245,246,320,49,367,195,197,199,202,209,211,214,135,195,197,199,202,209,211,214,135,195,197,199,202,209,211,214,135,665,168,470,213,213,305,306,365,366,361,362,264,265,223,28,266,289,371,380,381,372,170,179,520,521,156,267,92,189,268,359,290,174,291,165,269,50,270,245,246,190,292,293,191,470,173,468,271,360,249,192,159,250,193,251,194,384,385,386,387,388,389,195,272,196,350,354,122,294,295,296,297,298,299,300,197,301,198,302,303,285,284,54,51,390,304,273,678,274,275,305,306,307,164,52,199,308,658,200,620,44,659,309,201,310,311,660,202,146,203,312,204,205,361,313,314,206,247,315,316,362,149,317,318,187,319,320,321,207,322,323,226,81,82,208,324,171,325,326,327,67,209,328,168,329,330,331,332,283,333,334,148,335,210,85,211,363,286,336,337,347,212,66,364,186,599,338,339,351,276,494,49,90,462,367,213,214,215,216,39,135,256,68,287,93,253,22,340,341,365,172,181,217,218,366,219,220,661,662,182,183,184,142,136,137,143,144,145,138,221,222,139,140,141,151,153,154,392,288,160,158,184,141,154,144,324,0,0,226,274,44,309,22,309,85,170,149,333,268,216,148,181,164,671,686,389,320,322,297,159,159,159,159,159,159,341,223,290,371,371,165,190,157,168,160,158,190,165,158,158,158,179,168,160,158,168,168,190,371,181,28,173,389,351,494,462,247,168,213,213,191,191,520,521,384,385,386,387,388,142,143,144,135,22,142,136,137,143,144,138,139,140,141,151,153,154,136,137,145,138,139,140,141,151,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,322,182,183,184,136,137,139,140,141,151,153,154,142,144,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,136,137,138,139,140,141,151,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,136,137,138,139,140,141,151,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,137,145,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,322,182,183,184,136,137,139,140,141,151,153,154,142,144,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,136,137,138,139,140,141,151,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,136,137,138,139,140,141,151,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,136,137,138,139,140,141,151,153,154,138,141,154,136,137,138,139,140,141,151,153,154,136,137,138,139,140,141,151,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,183,184,137,140,141,153,154,142,144,328,328,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,137,138,140,141,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,138,141,154,138,141,154,138,141,154,138,141,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,138,141,154,137,138,140,141,153,154,137,138,140,141,153,154,137,138,140,141,153,154,698,699,700,701,702,703,702,704,703,704,704,704,704,704,701,705,706,707,702,708,704,703,701,707,702,708,704,709,703,701,707,702,708,704,709,703,701,702,703,708,708,708,708,708,701,702,703,706,706,702,701,704,703,701,704,703,705,706,704,704,701,704,703,701,703,701,703,701,703,701,704,703,704,703,701,705,706,701,703,703,701,701,703,701,708,704,709,703,709,709,706,706,707,702,707,702,707,705,706,701,702,708,704,703,706,706,710,711,712,710,711,710,711,712,712,710,711,712,713,714,715,713,714,716,717,718,719,720,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,545,536,587,552,553,97,554,563,568,576,577,532,571,578,531,346,143,145,252,138,571,252,236,237,238,0,0,581,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,581,0,0,0,0,0,0,0,531,346,574,0,0,419,175,418,523,524,233,234,235,239,0,0,0,0,0,0,736,0,0,574,0,0,0,0,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,238,252,236,237,238,252,236,237,238,252,237,238,555,581,252,236,237,238,737,549,574,574,0,0,97,0,0,0,0,0,0,0,0,0,737,0,581,0,0,0,0,97,531,346,0,0,0,555,0,0,0,581,0,0,668,0,0,0,0,0,0,0,0,0,0,0,0,0,574,0,738,739,0,0,740,739,0,0,0,740,738,0,238,0,0,252,236,237,238,220,220,252,236,237,238,220,220,252,237,238,419,175,418,252,523,524,233,234,235,236,237,238,220,220,591,588,585,586,541,542,579,580,252,236,237,238,419,175,418,252,523,524,233,234,235,239,236,237,238,550,525,526,418,252,252,233,234,235,239,236,236,237,237,238,238,418,252,252,233,234,235,236,236,237,237,238,238,233,418,234,235,741,528,529,530,539,531,346,252,239,236,237,531,346,252,237,252,237,252,237,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,736,533,534,534,544,545,546,535,535,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,553,553,97,97,97,525,533,554,555,556,556,556,534,557,557,557,558,559,560,560,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,571,571,539,572,573,574,526,578,581,507,531,531,531,531,346,346,346,346,419,419,419,175,175,175,418,418,418,252,252,252,523,523,523,524,524,524,233,233,233,234,234,234,235,235,235,239,239,239,236,236,236,237,237,237,238,238,238,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,531,346,346,419,419,175,175,418,418,252,252,523,523,524,524,233,233,234,234,235,235,239,239,236,236,237,237,238,238,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,418,252,553,97,556,557,560,571,531,346,239,236,252,237,238,233,234,235,252,233,234,235,236,237,238,535,252,233,234,235,239,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,236,252,237,238,236,237,237,238,562,564,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,531,346,531,346,531,346,531,346,0,531,346,537,533,534,538,539,592,589,538,590,593,0,531,346,531,346,0,737,544,545,546,535,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,533,554,555,556,534,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,541,529,528,527,576,576,577,577,532,542,542,570,571,539,572,573,574,526,578,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,535,540,543,544,545,546,535,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,541,529,528,527,576,577,532,542,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,595,569,530,252,236,237,238,252,236,237,238,252,236,237,238,252,236,237,238,539,544,545,546,535,540,547,548,549,550,551,552,553,97,554,555,556,557,558,559,560,538,561,562,563,564,530,565,566,567,568,569,532,542,570,571,539,572,573,574,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,419,175,418,252,523,524,233,234,235,236,237,238,538,595,569,544,545,546,535,547,548,549,550,551,552,553,97,554,555,556,557,558,559,560,538,561,562,563,564,530,565,566,567,568,569,532,542,570,571,539,572,573,574,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,544,545,546,535,547,548,549,550,551,552,553,97,554,555,556,557,558,559,560,538,561,562,563,564,530,565,566,567,568,569,532,542,570,571,539,572,573,574,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,535,97,252,236,237,238,252,236,237,238,252,236,237,238,252,236,237,238,252,236,237,238,252,236,237,238,418,233,234,235,418,233,234,235,592,589,537,533,534,542,570,507,239,537,533,534,532,573,539,0,252,237,592,589,590,593,97,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,530,0,544,545,546,535,548,550,537,551,552,553,97,525,554,556,557,558,559,560,561,562,563,530,565,566,567,568,532,542,570,539,572,573,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,544,545,545,546,535,591,579,580,588,536,592,589,585,586,540,540,587,547,548,549,543,543,550,537,551,552,552,553,97,525,533,554,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,568,590,593,595,569,541,529,528,527,576,576,577,577,532,532,542,570,571,539,572,573,574,526,578,578,581,507,531,346,419,419,175,175,418,252,252,523,523,524,524,233,234,235,239,236,237,238,544,545,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,543,550,537,551,552,552,553,97,525,533,554,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,568,590,593,595,569,541,529,528,527,576,577,577,532,532,542,570,571,539,572,573,574,526,578,578,581,507,531,346,419,419,175,175,418,252,252,523,523,524,524,233,234,235,239,236,237,238,551,553,557,560,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,418,233,234,235,252,236,237,238,252,236,237,238,252,252,239,236,236,237,237,238,238,252,252,236,236,237,237,238,238,0,0,0,252,239,236,237,238,252,236,237,238,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,0,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,538,561,562,563,564,530,565,566,567,568,590,593,595,569,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,538,595,569,0,0,0,535,553,97,556,557,560,571,531,346,553,97,556,557,560,571,531,346,544,551,593,535,553,97,556,557,560,571,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,535,553,97,556,557,560,571,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,535,553,97,556,557,560,571,531,346,551,553,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,252,236,237,0,0,419,175,418,252,523,524,233,234,235,236,237,238,419,175,418,252,523,524,233,234,235,236,237,238,419,175,418,252,523,524,233,234,235,236,237,238,419,175,418,252,523,524,233,234,235,236,237,238,419,175,418,252,523,524,233,234,235,236,237,238,540,543,561,562,565,561,562,565,252,236,237,238,544,546,535,579,579,580,580,536,536,536,536,540,547,548,549,543,550,551,553,553,97,97,555,555,556,557,558,559,560,561,562,564,530,565,567,527,532,571,574,526,581,581,531,531,346,346,419,419,175,175,418,418,252,252,523,523,524,524,233,233,234,234,235,235,239,239,236,236,237,237,238,238,538,551,252,236,237,238,544,545,546,535,535,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,97,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,418,418,252,252,252,252,252,252,252,523,524,233,234,234,235,235,239,236,236,236,237,237,237,237,238,238,238,238,238,238,238,238,239,419,418,523,233,234,236,419,523,252,239,236,237,238,175,418,524,234,235,239,419,175,418,523,524,233,234,235,419,175,418,523,524,233,234,235,419,175,418,523,524,233,234,235,419,175,418,523,524,233,234,235,537,537,542,97,97,418,233,234,235,418,234,235,239,535,535,535,535,419,418,523,234,419,523,419,175,523,524,233,235,239,175,524,419,175,418,524,234,239,97,175,418,524,234,235,419,175,418,252,523,524,233,234,235,239,236,237,238,567,239,239,239,175,524,235,175,418,524,234,235,239,175,418,524,234,235,239,175,418,524,234,235,239,567,419,175,418,523,524,234,235,233,419,418,523,234,175,524,235,239,252,239,236,237,238,535,97,97,567,419,175,418,523,524,234,235,239,544,545,546,535,548,550,537,551,552,553,97,525,554,556,557,558,559,560,561,562,563,530,565,566,567,568,532,542,570,539,572,573,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,239,571,539,590,593,596,584,584,585,586,587,537,525,533,534,538,564,570,572,573,557,560,557,570,419,175,418,252,523,524,233,234,235,236,237,238,419,175,418,252,523,524,233,234,235,236,237,238,553,97,556,557,560,571,531,346,596,584,535,584,586,587,537,525,534,538,737,533,534,576,577,578,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,564,539,553,97,556,557,560,571,531,346,550,0,741,743,528,574,528,565,561,0,97,571,252,236,237,238,562,252,236,237,238,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,570,571,539,572,573,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,741,737,533,534,528,527,576,577,578,527,529,587,537,534,538,572,573,529,529,0,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,531,346,346,419,419,175,175,418,418,252,252,523,523,524,524,233,233,234,234,235,235,239,239,236,236,237,237,238,238,544,545,546,535,579,580,536,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,593,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,744,556,567,535,591,588,592,589,590,593,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,97,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,537,573,419,175,418,523,524,233,234,235,239,539,419,175,418,252,523,524,233,234,235,239,236,237,238,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,239,252,236,237,238,97,252,239,236,237,238,233,234,235,239,236,237,238,587,537,533,534,538,591,588,419,175,418,252,523,524,233,234,235,236,237,238,587,537,534,538,587,537,534,538,539,736,587,537,533,533,534,534,534,538,539,0,0,0,0,539,539,539,556,538,538,595,569,252,239,236,237,238,252,239,236,237,238,252,239,236,237,238,252,239,236,237,238,557,557,560,175,524,235,175,524,235,175,524,235,175,524,235,507,540,543,0,0,0,0,419,523,175,524,252,236,237,238,530,252,236,237,238,538,530,252,236,237,238,252,236,237,238,419,419,419,175,175,418,418,418,418,418,252,252,523,523,524,524,233,233,233,234,234,234,234,235,235,235,235,239,239,239,236,236,237,237,238,238,252,236,237,238,418,418,252,252,233,233,234,234,235,235,239,236,236,237,237,238,238,233,418,234,235,239,418,233,234,235,233,418,234,239,418,235,590,741,743,528,527,574,528,527,419,175,418,252,523,524,233,234,235,236,237,238,418,252,233,234,235,239,236,237,238,535,587,553,97,556,557,560,538,562,564,530,569,528,572,573,507,531,346,252,236,237,238,569,591,588,592,589,590,593,590,593,539,97,252,239,236,237,238,252,236,237,238,556,531,346,537,533,534,235,235,235,535,97,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,556,557,560,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,236,236,235,235,235,235,235,235,235,557,548,252,236,237,238,419,175,418,418,252,252,523,524,233,233,234,234,235,235,239,239,236,236,237,237,238,238,252,236,237,238,252,236,237,238,235,555,581,525,0,590,548,566,526,97,745,544,545,546,535,547,548,549,550,551,552,553,97,554,555,556,557,558,559,560,538,561,562,563,564,530,565,566,567,568,569,532,542,570,571,539,572,573,574,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,745,544,545,546,535,547,548,549,550,551,552,553,97,554,555,556,557,558,559,560,538,561,562,563,564,530,565,566,567,568,569,532,542,570,571,539,572,573,574,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,419,175,418,252,523,524,233,234,235,239,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,252,236,237,238,252,252,236,236,237,237,238,238,252,252,236,236,237,237,238,238,587,537,525,534,538,572,551,572,507,236,567,252,236,237,238,418,233,234,235,741,529,528,527,527,507,507,567,252,236,237,238,548,566,551,553,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,564,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,546,239,531,346,252,236,237,238,529,551,538,418,252,252,233,234,235,239,236,236,237,237,238,238,418,252,252,233,234,235,236,236,237,237,238,238,233,418,234,235,418,418,252,252,233,233,234,234,235,235,239,239,236,236,237,237,238,238,0,746,527,528,564,564,551,97,252,239,236,237,238,239,419,175,418,523,524,233,234,235,419,175,418,523,524,233,234,235,239,544,545,546,535,547,548,549,550,551,552,553,97,554,555,556,557,558,559,560,538,561,562,563,564,530,565,566,567,568,569,532,542,570,571,539,572,573,574,526,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,175,524,235,239,97,579,580,536,553,97,97,555,581,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,419,418,523,234,175,524,235,175,419,418,523,234,175,524,235,175,567,419,175,523,524,418,233,234,235,530,252,237,238,535,535,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,525,570,573,570,525,570,573,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,252,236,237,238,525,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,525,570,573,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,560,0,544,545,546,547,548,550,551,552,554,558,559,561,562,563,564,530,565,566,567,568,539,526,557,573,585,586,541,573,573,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,0,0,0,535,540,543,0,0,0,0,544,545,546,535,591,579,580,588,536,592,589,585,586,540,587,547,548,549,543,550,537,551,552,553,97,525,533,554,555,556,534,557,558,559,560,538,561,562,563,564,530,565,566,567,568,590,593,595,569,541,529,528,527,576,577,532,542,570,571,539,572,573,574,526,578,581,507,531,346,419,175,418,252,523,524,233,234,235,239,236,237,238,184,239,238,141,154,144,235,529,97,530,419,175,418,523,524,233,234,235,252,239,236,237,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,182,183,184,136,137,239,236,237,238,139,140,141,151,153,154,142,418,144,233,234,235,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,740,738,739,252,236,237,238,739,238,739,238,739,238,739,238,739,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,740,252,236,237,238,739,238,739,238,739,238,739,238,739,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,739,738,252,239,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,739,238,739,238,739,238,739,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,182,183,184,136,137,239,236,237,238,139,140,141,151,153,154,142,418,144,233,234,235,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,740,738,739,252,236,237,238,739,238,739,238,739,238,739,238,739,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,740,738,739,252,236,237,238,739,238,739,238,739,238,739,238,739,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,740,738,739,252,236,237,238,739,238,740,738,739,252,236,237,238,740,738,739,252,236,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,739,238,739,238,739,238,739,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,183,184,137,239,237,238,140,141,153,154,142,418,144,234,235,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,739,238,738,739,252,237,238,739,238,739,238,739,238,739,238,739,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,739,238,739,238,739,238,739,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,739,238,739,238,739,238,739,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,739,238,738,739,252,237,238,738,739,252,237,238,738,739,252,237,238,747,747,748,749,531,346,0,0,0,0,0,184,182,183,184,182,183,184,183,184,143,145,252,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,419,175,0,419,175,0,0,0,0,144,136,137,142,418,144,136,137,142,418,144,137,142,418,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,523,524,523,524,239,238,235,239,236,237,238,233,234,235,239,236,237,238,233,234,235,239,237,238,234,235,0,0,0,0,0,0,141,139,140,141,139,140,141,140,141,738,739,0,740,739,0,740,738,0,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,740,738,739,739,739,739,739,739,740,738,739,739,740,738,739,740,738,739,738,739,740,738,739,739,740,738,739,740,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,740,739,739,739,739,739,740,738,739,739,740,738,739,740,738,739,738,739,740,738,739,739,740,738,739,740,738,739,738,739,739,738,739,738,739,738,739,738,739,738,739,739,739,739,739,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,740,738,739,739,739,739,739,739,740,738,739,739,740,738,739,740,738,739,738,739,740,738,739,739,740,738,739,740,738,739,738,739,738,739,739,738,739,738,739,738,739,740,738,739,739,739,739,739,739,740,738,739,739,740,738,739,740,738,739,738,739,740,738,739,739,740,738,739,740,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,739,739,739,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,738,739,739,739,739,739,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,739,739,739,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,739,739,739,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,738,739,739,738,739,738,739,738,739,0,0,0,0,0,0,154,151,153,154,151,153,154,153,154,598,0,0,0,0,0,598,0,0,0,0,0,0,598,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,408,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,410,410,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,408,408,405,405,405,405,405,405,412,405,410,411,409,408,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,404,408,403,411,412,410,407,403,406,404,404,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,412,405,410,407,408,598,406,411,409,404,403,408,409,412,405,410,407,408,598,406,411,409,404,403,0,0,0,602,0,0,0,0,600,601,600,602,603,601,600,602,603,601,600,602,603,600,601,600,602,603,601,600,602,603,601,603,601,600,602,602,603,601,600,602,602,603,601,600,602,603,601,600,602,603,601,600,602,603,601,600,602,603,601,600,602,603,601,600,602,603,601,600,602,603,601,600,602,603,601,600,602,603,603,0,603,603,603,603,601,600,602,603,601,600,602,603,601,600,602,603,601,600,602,603,0,0,601,600,602,603,602,607,613,614,611,0,0,0,0,0,0,0,0,0,604,604,606,604,612,607,607,607,608,609,613,614,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,607,604,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,606,607,608,609,607,608,609,607,608,609,0,612,608,609,613,606,604,612,607,608,609,613,613,614,614,606,604,612,607,608,609,613,613,614,614,609,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,607,607,607,607,607,607,608,609,606,604,612,607,607,608,609,613,614,612,608,609,613,607,0,607,604,606,604,612,607,608,609,613,614,0,612,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,609,0,608,607,0,607,608,609,607,608,609,609,611,608,604,607,608,609,604,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,606,604,612,607,608,609,613,614,609,606,604,612,607,608,609,613,614,0,0,606,604,612,607,608,609,613,614,0,608,0,607,622,0,0,0,621,623,622,621,623,622,621,623,622,621,623,622,621,623,622,621,0,623,622,621,623,622,622,621,623,622,622,621,623,622,621,623,622,0,621,623,622,623,622,621,623,622,621,623,622,621,623,622,621,623,622,621,623,622,621,623,622,623,623,623,623,621,623,622,621,623,622,621,623,622,621,623,622,621,623,622,84,84,84,84,0,84,84,84,84,0,84,625,84,84,84,625,84,625,84,84,625,84,625,84,625,84,84,84,625,84,625,84,84,625,84,625,84,84,84,84,84,84,84,625,84,84,84,84,84,625,84,625,84,625,84,625,84,625,84,625,84,84,84,84,625,84,625,84,625,84,625,84,625,84,628,0,0,0,0,628,0,628,628,750,751,626,627,626,626,628,750,751,627,626,626,628,750,751,627,626,628,750,751,626,626,627,626,628,750,751,627,626,628,750,751,627,0,628,626,628,628,626,751,626,628,627,626,628,750,751,627,626,628,750,751,750,627,626,628,750,751,627,626,628,750,751,626,626,626,626,626,627,626,628,750,751,626,628,751,626,626,626,626,626,627,626,628,750,751,627,626,628,750,751,627,626,626,628,750,751,627,626,628,750,751,627,626,628,750,751,626,627,626,628,750,751,626,751,0,0,750,751,751,626,626,626,0,751,628,628,626,626,626,626,626,0,0,751,750,751,628,627,626,628,750,751,627,626,628,750,751,627,626,628,750,751,626,626,627,626,628,750,751,627,626,628,750,751,752,0,629,629,629,629,629,629,629,629,629,629,629,629,629,629,0,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,633,0,0,0,0,0,631,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,753,630,631,632,753,633,630,631,632,753,633,631,753,630,631,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,0,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,632,632,753,632,632,753,0,753,632,753,753,631,630,632,753,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,630,631,632,753,633,635,634,0,634,0,0,634,634,636,636,634,634,634,635,636,634,635,636,634,635,636,634,635,636,634,635,636,634,634,634,636,0,636,636,634,635,634,635,635,636,634,635,635,636,634,635,636,634,635,636,634,634,634,634,634,635,636,634,635,636,634,635,636,634,635,636,634,635,636,634,635,636,634,635,636,634,635,636,636,636,636,636,0,634,634,0,636,636,634,634,635,636,634,635,636,634,635,636,634,635,636,634,635,636,0,0,638,638,638,637,638,637,638,637,638,637,638,637,0,638,637,638,637,638,637,638,637,0,638,637,637,637,637,638,637,638,637,638,637,638,637,638,637,638,637,637,637,638,637,638,637,638,637,638,637,638,637,0,0,640,640,0,0,639,640,640,640,639,640,639,640,639,640,639,640,639,640,640,640,640,639,640,639,640,639,640,639,640,640,640,640,640,639,640,640,639,640,639,640,639,640,639,640,639,640,639,640,0,0,0,640,640,640,639,640,639,640,639,640,0,639,640,639,640,0,0,0,0,0,754,755,756,0,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,0,0,647,648,647,648,647,648,648,647,647,647,647,647,647,647,648,647,648,648,647,648,647,648,647,648,647,648,648,648,647,648,647,648,647,648,647,648,647,648,647,648,647,648,647,647,647,647,647,647,647,647,647,647,647,648,647,648,647,648,647,648,647,648],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[[],3],[[],3],[[],3],[[],3],[4,5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6,6],[7,7],[8,8],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,0,[12],[12],[12],[12],[12],[12],[12],[12],[[],[[13,[6]]]],[[],[[13,[7]]]],[[],[[13,[8]]]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[3,14],[3,14],[3,14],[3,14],[15],[15],[15],[15],[[6,6],14],[[7,7],14],[[8,8],14],[[4,4],14],[1,14],[1,14],[1,14],[1,14],[[],14],[[],14],[[],14],[[],14],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[[6,19],20],[[7,19],20],[[8,19],20],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[6],[7],[8],[4],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],0,0,0,[[]],0,0,0,[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[6,13],[7,13],[8,13],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],0,[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[27,28]],[29,29],[[]],[[],[[11,[9,10]]]],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[12],[12],[12],[30],[[29,19],20],[[]],[[]],[[]],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[30,31],[[33,[[13,[32]]]]]],[[24,24]],[24],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],5],[[],34],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,[[],1],[[],1],[2],0,[[]],[[]],[[[36,[35]]],[[36,[35]]]],[[]],[[],[[11,[9,10]]]],[[[36,[35]]],[[36,[35]]]],[[37,38]],[[],[[36,[35]]]],[[[36,[35]]]],[12],[12],[[],[[13,[[36,[35]]]]]],[[]],[12],[16,[[13,[17,18]]]],[[[36,[35]],19],20],[[]],[[]],[39],[[]],[[40,40],41],[[],12],0,[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[[36,[35]],31,42]],[[43,[44,[35]]],[[36,[35]]]],[[24,24]],[24],[[[36,[35]]],13],[[]],[[],13],[[],13],[[],25],[[],26],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[45,28]],[46,46],[47,47],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],46],[[],47],[12],[12],[12],[12],[47],[12],[12],[12],[12],[12],[47],[12],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[46,19],20],[[47,19],20],[[]],[[]],[[]],[[]],[[]],[39],[39],0,[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[[49,[48]],[50,[47]],[50,[46]],[49,[[52,[51]]]],[49,[[54,[53]]]]]],[[24,24]],[[24,24]],[24],[24],[[[49,[[54,[53]]]],[49,[[54,[55]]]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],0,[[56,57]],[[],1],[56,1],[[],1],[56,1],[2],[56,57],[56,57],[[]],[[]],[56,58],[56,[[11,[57]]]],[[37,38]],[[],56],[12],[12],[[]],[12],[[56,5],[[26,[57]]]],[[56,12],[[26,[57]]]],[[56,12],[[26,[57]]]],[56,12],[[56,5],[[26,[57]]]],[[]],[[]],[39],[[]],[5,26],[5,26],[56,59],[[],60],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[56]]],[[11,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[[11,[56]]],[[11,[57]]]],[[]],[56,61],[[56,12],[[26,[5]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[56,63],[[[11,[56]]],64],[[56,57],[[26,[14]]]],[56,65],[[56,[11,[57]]],[[13,[[11,[57]]]]]],[[66,67],68],[[],13],[[],13],[[],25],[[],59],[56,5],[[],26],[[]],0,0,0,0,0,[[],1],[[],1],[2],0,[69,69],[69,69],[[]],[[]],[70,70],[[]],[[],[[11,[9,10]]]],[[],69],[[],69],[12],[12],[[]],[12],[[70,19],20],[[]],[71,[[13,[70,72]]]],[71,[[13,[70,72]]]],0,[[],[[26,[73]]]],0,[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],0,[[24,24]],[24],0,[[]],[[],13],[[],13],[[],25],[[],26],[[70,71],[[13,[72]]]],[[70,71],[[13,[72]]]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[74,28]],[[],75],[12],[75],[12],[12],[75],[12],[[]],[[]],[12],[12],[[]],[[]],[39],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],26],[[],26],[[]],[[]],[39],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[],3],[[]],[[]],[[]],[[]],[[76,28]],[77,77],[[]],[[],[[11,[9,10]]]],[12],[12],[12],[12],[[],[[13,[77]]]],[[]],[[]],[12],[12],[3,14],[15],[[77,77],14],[1,14],[[],14],[[77,19],20],[[]],[[]],[12,[[26,[77]]]],[[],21],[77],[77,12],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[24,24]],[24],[[]],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],26],[[],26],[[]],[[]],0,[[],1],[[],1],[2],[[]],[[]],[[78,28]],[12],[12],[[]],[12],[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[],13],[[],13],[[],25],[[],26],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[79,28]],0,[[37,38]],0,[[[49,[80]],[49,[[52,[48]]]],[49,[[52,[67]]]],[49,[[52,[81]]]],[49,[[52,[82]]]]],14],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[12],[12],[12],0,0,[[]],[[]],[[]],[[]],0,0,[[]],[83],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[83,14]],[83],[[],[[85,[84]]]],0,[66],[[83,14],14],0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,[[],1],[[],1],[2],[[]],[[]],[[86,28]],[12],[12],[[]],[12],[[]],[[],87],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[[49,[88]],[90,[[42,[[44,[89]]]]]],[50,[91]],[93,[[92,[89]]]],[49,[[52,[89]]]]]],[[],13],[[],13],[[],25],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[80,80],[48,48],[94,94],[95,95],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,0,0,0,[[],80],0,0,0,0,[12],[80],[12],[12],[12],[12],[80],[12],[12],[12],[[],[[13,[48]]]],[[],[[13,[94]]]],[[],[[13,[95]]]],0,[[]],[[]],[[]],[[]],[12],[12],[12],[12],0,0,0,0,[16,[[13,[17,18]]]],0,0,[[80,19],20],[[48,19],20],[[94,19],20],[[95,19],20],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[39],0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[28],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[],96],[[]],[[]],[[]],[[]],0,0,0,0,0,[[94,31,42]],[[95,31,42]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],0,0,0,0,[95,13],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],5],[[],34],0,0,[[],97],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[2],[[]],[[]],[12],[12],[[]],[12],[98],[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[98,31],[[33,[[13,[32]]]]]],[[],13],[[],13],[[],25],[[],26],[[]],0,[[],1],[[],1],[2],[[]],[[]],[99,99],[[]],[[],[[11,[9,10]]]],0,[12],[12],[[],[[13,[99]]]],0,[[]],[12],[[99,19],20],[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[99,31,42]],0,[[24,24]],[24],[[]],[[],13],[[],13],[[],25],[[],26],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[101,101],[102,102],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[12],[12],[12],[12],[12],[12],[[],[[13,[100]]]],[[],[[13,[101]]]],[[],[[13,[102]]]],[[]],[[]],[[]],[12],[12],[12],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[[100,19],20],[[101,19],20],[[102,19],20],[[]],[[]],[[]],0,[[101,12],[[85,[77]]]],[[48,103],[[104,[100]]]],0,[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[100,13],[101,13],[102,13],0,0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[105],[106],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[107,107],[108,108],[106,106],[109,109],[110,110],[111,111],[112,112],[105,105],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,[[114,122],114],0,0,[[],121],0,0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[],[[13,[107]]]],[[],[[13,[108]]]],[[],[[13,[106]]]],[[],[[13,[109]]]],[[],[[13,[110]]]],[[],[[13,[111]]]],[[],[[13,[112]]]],[[],[[13,[105]]]],[[],[[13,[113]]]],[[],[[13,[114]]]],[[],[[13,[115]]]],[[],[[13,[116]]]],[[],[[13,[117]]]],[[],[[13,[118]]]],[[],[[13,[119]]]],[[],[[13,[120]]]],[[],[[13,[121]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,0,0,[[],123],0,[[107,19],20],[[108,19],20],[[106,19],20],[[109,19],20],[[110,19],20],[[111,19],20],[[112,19],20],[[105,19],20],[[113,19],20],[[114,19],20],[[115,19],20],[[116,19],20],[[117,19],20],[[118,19],20],[[119,19],20],[[120,19],20],[[121,19],20],0,0,0,0,0,[114,124],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39],[110,125],[[111,123],126],0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[107,31,42]],[[108,31,42]],[[106,31,42]],[[109,31,42]],[[110,31,42]],[[111,31,42]],[[112,31,42]],[[105,31,42]],[[114,31,42]],[[115,31,42]],[[116,31,42]],[[117,31,42]],[[118,31,42]],[[119,31,42]],[[120,31,42]],[[121,31,42]],0,0,0,0,0,0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[127,28]],[103],0,0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[128,19],20],[[128,19],20],[[]],[[]],[[]],[[]],[129,128],[[]],[39,103],[[103,5],26],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[130,14],[103,14],[103],[[[90,[14]],66,[50,[103]]]],0,[131],[103,130],[[103,5]],[128,[[26,[132]]]],[[],87],[[],13],[[],13],[[],13],[[],13],[[],13],[[103,5],[[13,[26,128]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[103,[[13,[128]]]],[103,[[13,[130,128]]]],[[103,5],[[13,[128]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[134,[133]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[135,123],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[[142,142,123],14],[[136,136,123],14],[[137,137,123],14],[[143,143,123],14],[[144,144,123],14],[[145,145,123],14],[[138,138,123],14],0,0,[146,147],0,[146,147],0,[52,44],[[148,149]],[66],[[135,135]],[[135,138]],[[142,142]],[[136,123],136],[[136,136],136],[[137,123],137],[[137,137],137],[[143,143]],[[144,144]],[[145,145],145],[[138,123],138],[[138,138],138],[[139,139],139],[[139,150],139],[[140,150],140],[[140,140],140],[[141,150],141],[[141,141],141],[[151,152],151],[[151,151],151],[[153,152],153],[[153,153],153],[[154,152],154],[[154,154],154],[[]],[28,28],[[]],[28,28],[[135,135]],[[135,138]],[[142,142]],[[136,123]],[[136,136]],[[137,137]],[[137,123]],[[143,143]],[[144,144]],[[138,138]],[[138,123]],[[139,150]],[[139,139]],[[140,140]],[[140,150]],[[141,150]],[[141,141]],[[151,151]],[[151,152]],[[153,152]],[[153,153]],[[154,152]],[[154,154]],[[]],[28,28],[28,28],[68],[155],[156,156],[[]],[28,28],[28,28],[157,28],[157,158],[[28,157],28],[[159,157]],[[158,157],158],[160,28],[160,158],[[28,160],28],[[159,160]],[[158,160],158],[28,28],[157,28],[157,158],[[28,157],28],[[159,157]],[[158,157],158],[160,28],[160,158],[[28,160],28],[[159,160]],[[158,160],158],[[161,5],28],[[28,161,5],28],[[162,161,5],28],[[162,161,5],158],[[28,162,161,5],28],[[158,162,161,5],158],[[162,161,5],28],[[162,161,5],158],[[28,162,161,5],28],[[158,162,161,5],158],[5,28],[5,158],[[28,5],28],[[158,5],158],[[5,163],28],[[5,163],158],[[28,5,163],28],[[158,5,163],158],[[5,12,157],28],[[5,12,157],158],[[28,5,12,157],28],[[158,5,12,157],158],[[5,12,160],28],[[5,12,160],158],[[28,5,12,160],28],[[158,5,12,160],158],[164],[[],28],[28,28],[162,28],[162,158],[[28,162],28],[[158,162],158],[162,28],[162,158],[[28,162],28],[[158,162],158],[[143,143],143],[[142,142],142],[[144,144],144],[28,28],[28,28],0,[28,28],[[28,162],28],[165],[[158,162],158],[[28,162,162],28],[[158,162,162],158],[[28,162,162],28],[[158,162,162],158],[[28,162],28],[[28,162,162],28],[[28,162,162],28],[[28,157],28],[[28,160],28],[[28,162,160],28],[[28,162,157],28],[28,28],[[28,162],28],[[28,166,28,167],28],[[28,157],28],[[168,157],168],[[168,169],168],[[28,160],28],[[168,160],168],[[28,162,160],28],[[158,162,160],158],[[28,162,157],28],[[158,162,157],158],[[82,170],12],[[171,[44,[172]],172]],[[]],[[173,39]],[174,175],[176,169],[177,178],[176,169],[[179,180],179],[[160,177],160],0,0,[[],181],[182,14],[183,14],[184,14],[149,185],0,0,[177,178],0,0,[[136,136],123],[[137,137],123],[[145,145],123],0,[182,14],[183,14],[184,14],[186,14],[[187,188],14],[186,14],[[187,188],14],[186,14],[137,137],[137],[137,137],[[187,188],14],[57],[[170,57]],[[189,57]],[[174,57]],[[190,57]],[[191,57]],[[192,57]],[[193,57]],[[194,57]],[[195,57]],[[196,57]],[[197,57]],[[198,57]],[[199,57]],[[200,57]],[[44,57]],[[201,57]],[[202,57]],[[146,57]],[[203,57]],[[204,57]],[[205,57]],[[206,57]],[[187,57]],[[207,57]],[[82,57]],[[208,57]],[[209,57]],[[210,57]],[[211,57]],[[212,57]],[[213,57]],[[214,57]],[[215,57]],[[216,57]],[[135,57]],[[68,57]],[[172,57]],[[181,57]],[[217,57]],[[218,57]],[[219,57]],[[220,57]],[[182,57]],[[183,57]],[[184,57]],[[142,57]],[[136,57]],[[137,57]],[[143,57]],[[144,57]],[[145,57]],[[138,57]],[[221,39,68,57]],[[222,39,57]],[[139,57]],[[140,57]],[[141,57]],[[151,57]],[[153,57]],[[154,57]],[39],[[223,39]],[[168,39]],0,[[221,39,68,57]],[[222,39,57]],[[],224],[223,224],0,0,0,[39,225],0,[[],226],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[170,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[189,1],[[],1],[[],1],[[],1],[[],1],[[],1],[174,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[190,1],[[],1],[[],1],[[],1],[[],1],[191,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[192,1],[[],1],[[],1],[[],1],[[],1],[193,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[194,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[195,1],[[],1],[[],1],[[],1],[[],1],[[],1],[196,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[197,1],[[],1],[[],1],[[],1],[198,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[199,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[200,1],[[],1],[[],1],[[],1],[44,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[201,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[202,1],[[],1],[[],1],[146,1],[[],1],[[],1],[203,1],[[],1],[[],1],[204,1],[[],1],[[],1],[205,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[206,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[187,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[207,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[82,1],[208,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[209,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[210,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[211,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[212,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[213,1],[[],1],[214,1],[[],1],[[],1],[215,1],[216,1],[[],1],[[],1],[[],1],[[],1],[135,1],[[],1],[68,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[172,1],[[],1],[181,1],[[],1],[[],1],[217,1],[[],1],[[],1],[218,1],[[],1],[[],1],[[],1],[219,1],[[],1],[[],1],[220,1],[[],1],[[],1],[[],1],[[],1],[182,1],[[],1],[[],1],[[],1],[[],1],[[],1],[183,1],[[],1],[184,1],[[],1],[[],1],[[],1],[[],1],[[],1],[142,1],[[],1],[[],1],[136,1],[137,1],[[],1],[[],1],[143,1],[[],1],[[],1],[144,1],[[],1],[[],1],[145,1],[[],1],[[],1],[138,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[139,1],[[],1],[[],1],[140,1],[[],1],[[],1],[[],1],[[],1],[[],1],[141,1],[[],1],[151,1],[[],1],[[],1],[[],1],[153,1],[[],1],[[],1],[154,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[170,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[189,1],[[],1],[[],1],[[],1],[[],1],[[],1],[174,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[190,1],[[],1],[[],1],[[],1],[191,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[192,1],[[],1],[[],1],[193,1],[[],1],[[],1],[194,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[195,1],[[],1],[[],1],[196,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[197,1],[[],1],[198,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[199,1],[[],1],[[],1],[[],1],[200,1],[[],1],[[],1],[44,1],[[],1],[[],1],[[],1],[201,1],[[],1],[[],1],[[],1],[[],1],[[],1],[202,1],[146,1],[[],1],[[],1],[203,1],[[],1],[[],1],[204,1],[205,1],[[],1],[[],1],[[],1],[[],1],[206,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[187,1],[[],1],[[],1],[[],1],[[],1],[207,1],[[],1],[[],1],[[],1],[[],1],[82,1],[[],1],[[],1],[208,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[209,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[210,1],[[],1],[[],1],[[],1],[211,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[212,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[213,1],[[],1],[214,1],[215,1],[[],1],[216,1],[[],1],[[],1],[[],1],[135,1],[[],1],[68,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[172,1],[[],1],[[],1],[181,1],[217,1],[[],1],[218,1],[[],1],[[],1],[219,1],[[],1],[220,1],[[],1],[[],1],[[],1],[182,1],[[],1],[[],1],[183,1],[[],1],[184,1],[142,1],[[],1],[136,1],[[],1],[[],1],[137,1],[143,1],[[],1],[[],1],[144,1],[145,1],[[],1],[138,1],[[],1],[[],1],[[],1],[[],1],[139,1],[140,1],[[],1],[141,1],[[],1],[[],1],[151,1],[[],1],[153,1],[[],1],[154,1],[[],1],[[],1],[[],1],[[],1],[[200,227,228,2,229],[[13,[[230,[200]],231]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[200,2],232],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[143,233],[142,234],[144,235],[136,236],[139,236],[151,236],[137,237],[140,237],[153,237],[138,238],[141,238],[154,238],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[145,239],[22,240],[[],240],[[],241],[135,135],[135],[136,139],[151,139],[137,140],[153,140],[138,141],[154,141],[[],242],[[],243],[[],244],[135],[135,152],[50],[245],[246],[142],[136],[137],[143],[144],[138],[139],[140],[141],[151],[153],[154],[142],[136],[137],[143],[144],[138],[139],[140],[141],[151],[153],[154],[247,247],[22],[22,150],[[],150],[[],150],[247,247],[189,5],[50],[245],[246],[49],[22],[142],[136],[137],[143],[144],[145],[138],[139],[140],[141],[151],[153],[154],[142],[136],[137],[143],[144],[138],[139],[140],[141],[151],[153],[154],[[],57],[170,57],[189,57],[174,57],[190,57],[191,57],[192,57],[193,57],[194,57],[195,57],[196,57],[197,57],[198,57],[199,57],[200,57],[44,57],[201,57],[202,57],[146,57],[203,57],[204,57],[205,57],[206,57],[187,57],[207,57],[82,57],[208,57],[209,57],[210,57],[211,57],[212,57],[213,57],[214,57],[215,57],[216,57],[135,57],[68,57],[172,57],[181,57],[217,57],[218,57],[219,57],[220,57],[182,57],[183,57],[184,57],[142,57],[136,57],[137,57],[143,57],[144,57],[145,57],[138,57],[139,57],[140,57],[141,57],[151,57],[153,57],[154,57],[[],57],[170,57],[189,57],[174,57],[190,57],[191,57],[192,57],[193,57],[194,57],[195,57],[196,57],[197,57],[198,57],[199,57],[200,57],[44,57],[201,57],[202,57],[146,57],[203,57],[204,57],[205,57],[206,57],[187,57],[207,57],[82,57],[208,57],[209,57],[210,57],[211,57],[212,57],[213,57],[214,57],[215,57],[216,57],[135,57],[68,57],[172,57],[181,57],[217,57],[218,57],[219,57],[220,57],[182,57],[183,57],[184,57],[142,57],[136,57],[137,57],[143,57],[144,57],[145,57],[138,57],[139,57],[140,57],[141,57],[151,57],[153,57],[154,57],[135,135],[135],[135,135],[135,152],[[],240],[[],248],[[],5],[[],5],[[],5],[189,5],[249,5],[250,5],[251,5],[136,151],[139,151],[137,153],[140,153],[138,154],[141,154],[139,136],[151,136],[140,137],[153,137],[140,252],[153,252],[141,138],[154,138],[172,123],0,[[[253,[92]],[50,[52]]]],0,[164,254],0,0,[[[22,[255]]],22],[22,22],0,[[],178],[[],178],0,[[256,[258,[257]]],[[26,[259]]]],[[256,[258,[257]]],[[26,[259]]]],[256,260],0,[256,260],[[171,14],171],0,0,[146,[[26,[261]]]],0,0,[135,123],[174,137],[190,137],[149,262],0,0,0,[176,169],[177,178],[176,169],[[179,180],179],[[160,177],160],0,[[],178],0,[228,227],[[182,182],182],[[183,183],183],[[184,184],184],[[139,139]],[[139,150]],[[140,140]],[[140,150]],[[141,150]],[[141,141]],[[151,152]],[[151,151]],[[153,153]],[[153,152]],[[154,152]],[[154,154]],[[182,182]],[[183,183]],[[184,184]],[182,152],[183,152],[184,152],[[182,182],182],[[183,183],183],[[184,184],184],[[139,139]],[[139,150]],[[140,150]],[[140,140]],[[141,141]],[[141,150]],[[151,152]],[[151,151]],[[153,152]],[[153,153]],[[154,152]],[[154,154]],[[182,182]],[[183,183]],[[184,184]],[[182,182],182],[[183,183],183],[[184,184],184],[[139,150]],[[139,139]],[[140,150]],[[140,140]],[[141,141]],[[141,150]],[[151,152]],[[151,151]],[[153,153]],[[153,152]],[[154,154]],[[154,152]],[[182,182]],[[183,183]],[[184,184]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[28],[[],263],[264,263],[265,263],[[266,28]],[[267,28]],[[268,28]],[[269,28]],[[270,28]],[[271,28]],[[272,28]],[[273,28]],[[274,28]],[[275,28]],[85,85],[[276,28]],0,[39,277],0,0,[[]],[50],[245],[246],[21,278],[[[22,[279]],280],281],0,0,0,0,0,0,0,[149,[[26,[5]]]],0,0,[44,44],0,[22,[[26,[132]]]],[136,136],[137,137],[138,138],[39,282],0,[170,136],[[149,283]],[39,152],0,0,0,0,0,0,[[284,5],285],0,0,[152],[[223,152]],[39],0,0,0,0,0,0,[188,286],[[136,136,136],136],[[137,137,137],137],[[138,138,138],138],[[139,139,139],139],[[140,140,140],140],[[141,141,141],141],[[151,151,151],151],[[153,153,153],153],[[154,154,154],154],[[136,123,123],136],[[137,123,123],137],[[138,123,123],138],[[136,123],136],[[137,123],137],[[138,123],138],[[136,123],136],[[137,123],137],[[138,123],138],[146,[[26,[261]]]],[146,123],[52],[187],[287],[93],[85],0,0,[39],[85,85],[187,14],[187,14],[288],[39],[289,289],[170,170],[189,189],[290,290],[174,174],[291,291],[190,190],[292,292],[293,293],[191,191],[249,249],[250,250],[193,193],[251,251],[195,195],[196,196],[122,122],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[197,197],[301,301],[198,198],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[164,164],[199,199],[308,308],[200,200],[44,44],[309,309],[201,201],[310,310],[311,311],[202,202],[146,146],[203,203],[312,312],[204,204],[205,205],[313,313],[314,314],[206,206],[315,315],[316,316],[317,317],[318,318],[187,187],[319,319],[320,320],[321,321],[207,207],[322,322],[323,323],[226,226],[81,81],[82,82],[208,208],[324,324],[325,325],[326,326],[327,327],[67,67],[209,209],[328,328],[329,329],[330,330],[331,331],[332,332],[283,283],[333,333],[334,334],[335,335],[210,210],[85,85],[211,211],[286,286],[336,336],[337,337],[212,212],[186,186],[338,338],[339,339],[49,49],[213,213],[214,214],[215,215],[216,216],[135,135],[256,256],[68,68],[22,22],[340,340],[341,341],[172,172],[181,181],[217,217],[218,218],[219,219],[220,220],[182,182],[183,183],[184,184],[142,142],[136,136],[137,137],[143,143],[144,144],[145,145],[138,138],[221,221],[222,222],[139,139],[140,140],[141,141],[151,151],[153,153],[154,154],[[],58],[[],342],[170,58],[189,58],[174,342],[190,58],[191,58],[192,342],[193,58],[194,342],[195,343],[196,58],[197,343],[198,58],[199,343],[200,58],[44,58],[201,58],[202,343],[146,58],[203,342],[204,58],[205,58],[206,58],[187,58],[207,58],[82,58],[208,58],[209,343],[210,342],[211,343],[212,58],[213,58],[214,343],[215,58],[216,58],[135,343],[181,342],[217,58],[218,58],[219,58],[182,58],[183,58],[184,58],[142,58],[136,58],[137,58],[143,58],[144,58],[138,58],[139,58],[140,58],[141,58],[151,58],[153,58],[154,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,344],344],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[44,309],[[],[[11,[57,10]]]],[170,[[11,[57,10]]]],[189,[[11,[57,10]]]],[174,[[11,[57,10]]]],[190,[[11,[57,10]]]],[191,[[11,[57,10]]]],[192,[[11,[57,10]]]],[193,[[11,[57,10]]]],[194,[[11,[57,10]]]],[195,[[11,[57,10]]]],[196,[[11,[57,10]]]],[197,[[11,[57,10]]]],[198,[[11,[57,10]]]],[199,[[11,[57,10]]]],[200,[[11,[57,10]]]],[44,[[11,[57,10]]]],[201,[[11,[57,10]]]],[202,[[11,[57,10]]]],[146,[[11,[57,10]]]],[203,[[11,[57,10]]]],[204,[[11,[57,10]]]],[205,[[11,[57,10]]]],[206,[[11,[57,10]]]],[187,[[11,[57,10]]]],[207,[[11,[57,10]]]],[82,[[11,[57,10]]]],[208,[[11,[57,10]]]],[209,[[11,[57,10]]]],[210,[[11,[57,10]]]],[211,[[11,[57,10]]]],[212,[[11,[57,10]]]],[213,[[11,[57,10]]]],[214,[[11,[57,10]]]],[215,[[11,[57,10]]]],[216,[[11,[57,10]]]],[135,[[11,[57,10]]]],[68,[[11,[57,10]]]],[172,[[11,[57,10]]]],[181,[[11,[57,10]]]],[217,[[11,[57,10]]]],[218,[[11,[57,10]]]],[219,[[11,[57,10]]]],[220,[[11,[57,10]]]],[182,[[11,[57,10]]]],[183,[[11,[57,10]]]],[184,[[11,[57,10]]]],[142,[[11,[57,10]]]],[136,[[11,[57,10]]]],[137,[[11,[57,10]]]],[143,[[11,[57,10]]]],[144,[[11,[57,10]]]],[145,[[11,[57,10]]]],[138,[[11,[57,10]]]],[139,[[11,[57,10]]]],[140,[[11,[57,10]]]],[141,[[11,[57,10]]]],[151,[[11,[57,10]]]],[153,[[11,[57,10]]]],[154,[[11,[57,10]]]],[44,44],[309,309],[44,309],[149],0,[[189,189],345],[[44,44],345],[[209,209],345],[[210,210],345],[[336,336],345],[[68,68],345],[[22,22],345],[[181,181],345],[[136,136],182],[[137,137],183],[[138,138],346],[[139,139],182],[[140,140],183],[[141,141],184],[[151,151],182],[[153,153],183],[[154,154],184],[[136,136],182],[[137,137],183],[[138,138],346],[[139,139],182],[[140,140],183],[[141,141],184],[[151,151],182],[[153,153],183],[[154,154],184],[[136,136],182],[[137,137],183],[[138,138],346],[[139,139],182],[[140,140],183],[[141,141],184],[[151,151],182],[[153,153],183],[[154,154],184],[[136,136],182],[[137,137],183],[[138,138],346],[[139,139],182],[[140,140],183],[[141,141],184],[[151,151],182],[[153,153],183],[[154,154],184],[[136,136],182],[[137,137],183],[[138,138],346],[[139,139],182],[[140,140],183],[[141,141],184],[[151,151],182],[[153,153],183],[[154,154],184],[[136,136],182],[[137,137],183],[[138,138],346],[[139,139],182],[[140,140],183],[[141,141],184],[[151,151],182],[[153,153],183],[[154,154],184],[[142,12],137],[[143,12],136],[[144,12],138],[[142,12],137],[[143,12],136],[[144,12],138],0,0,0,0,0,[[347,155]],0,0,0,[[],224],[223,224],0,[39,[[26,[348]]]],0,[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],[[37,38]],0,[39,37],0,0,[256,[[26,[349]]]],[190,175],[256],[174,144],[190,144],[174,190],0,0,0,0,0,0,[145,145],[146],[[170,136],14],[[350,196],14],[[52,44],14],[[351,68],14],[[256,[258,[257]]],14],[39,14],[[172,352],[[26,[172]]]],[[221,39,39,68,68]],[[222,39,39]],[256,12],[[284,5],285],[290],[353,135],[353,22],[353,142],[353,136],[353,137],[353,143],[353,144],[353,138],[353,139],[353,140],[353,141],[353,151],[353,153],[353,154],[274,[[11,[254,10]]]],[[137,137],137],[[140,140],140],[[153,153],153],[354,355],[288],0,[146,161],0,[354,355],[22,356],[149,357],0,0,[149,291],0,[149,[[26,[136]]]],[149,14],0,0,0,0,0,[[170,19],[[13,[358]]]],[19,[[13,[358]]]],[[196,19],[[13,[358]]]],[[197,19],[[13,[358]]]],[[198,19],[[13,[358]]]],[[199,19],[[13,[358]]]],[[200,19],[[13,[358]]]],[[201,19],[[13,[358]]]],[[202,19],[[13,[358]]]],[[204,19],[[13,[358]]]],[[82,19],[[13,[358]]]],[[209,19],[[13,[358]]]],[[210,19],[[13,[358]]]],[[211,19],[[13,[358]]]],[[212,19],[[13,[358]]]],[[220,19],[[13,[358]]]],[[182,19],[[13,[358]]]],[[183,19],[[13,[358]]]],[[184,19],[[13,[358]]]],[[142,19],[[13,[358]]]],[[136,19],[[13,[358]]]],[[137,19],[[13,[358]]]],[[143,19],[[13,[358]]]],[[144,19],[[13,[358]]]],[[145,19],[[13,[358]]]],[[138,19],[[13,[358]]]],[[139,19],[[13,[358]]]],[[140,19],[[13,[358]]]],[[141,19],[[13,[358]]]],[[151,19],[[13,[358]]]],[[153,19],[[13,[358]]]],[[154,19],[[13,[358]]]],0,0,[149,14],0,0,[[]],[[]],[[],223],[[],28],[[],266],[[],289],[[],170],[[],189],[[],268],[[],359],[[],290],[[],174],[[],269],[[],270],[[],190],[[],292],[[],293],[[],191],[[],271],[[],360],[[],193],[[],195],[[],272],[[],350],[[],354],[[],122],[[],297],[[],299],[[],303],[[],285],[[],284],[[],54],[[],273],[[],274],[[],275],[[],305],[[],306],[[],200],[[],44],[[],311],[[],146],[[],203],[[],205],[[],361],[[],313],[[],206],[[],362],[[],318],[[],187],[[],319],[[],321],[[],207],[[],81],[[],208],[[],324],[[],171],[[],325],[[],326],[[],67],[[],328],[[],329],[[],333],[[],334],[[],148],[[],85],[[],363],[[],336],[[],364],[[],186],[[],276],[[],213],[[],214],[[],215],[[],216],[[],39],[[],135],[[],287],[[],22],[340,[[11,[57,10]]]],[[],365],[[],172],[[],181],[[],217],[[],218],[[],366],[[],219],[[],220],[[],182],[[],183],[[],184],[[],142],[[],136],[[],137],[[],143],[[],144],[[],145],[[],138],[[],139],[[],140],[[],141],[[],151],[[],153],[[],154],[[],160],[[],158],0,0,0,[[],[[42,[243,10]]]],[[],276],[[],276],0,[191,161],0,[191,123],0,[191,262],0,0,0,[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[189],[12],[359],[12],[12],[12],[12],[12],[12],[50],[12],[12],[245],[12],[12],[246],[12],[12],[292],[12],[12],[12],[12],[12],[12],[12],[12],[12],[192],[12],[12],[12],[12],[12],[194],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[203],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[326],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[49],[12],[12],[90],[12],[367],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[22],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[143],[12],[145],[12],[12],[138],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[359],[12],[12],[12],[12],[12],[12],[12],[50],[12],[12],[245],[246],[12],[12],[292],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[203],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[326],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[90],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[143],[12],[12],[145],[12],[138],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[22,5],[[],13],[[],[[13,[289]]]],[[],[[13,[170]]]],[[],[[13,[189]]]],[[],[[13,[174]]]],[[],[[13,[291]]]],[[],[[13,[190]]]],[[],[[13,[193]]]],[[],[[13,[195]]]],[[],[[13,[196]]]],[[],[[13,[122]]]],[[],[[13,[295]]]],[[],[[13,[299]]]],[[],[[13,[300]]]],[[],[[13,[197]]]],[[],[[13,[301]]]],[[],[[13,[198]]]],[[],[[13,[302]]]],[[],[[13,[199]]]],[[],[[13,[308]]]],[[],[[13,[201]]]],[[],[[13,[310]]]],[[],[[13,[311]]]],[[],[[13,[202]]]],[[],[[13,[146]]]],[[],[[13,[312]]]],[[],[[13,[204]]]],[[],[[13,[313]]]],[[],[[13,[315]]]],[[],[[13,[316]]]],[[],[[13,[317]]]],[[],[[13,[318]]]],[[],[[13,[319]]]],[[],[[13,[320]]]],[[],[[13,[321]]]],[[],[[13,[322]]]],[[],[[13,[323]]]],[[],[[13,[226]]]],[[],[[13,[81]]]],[[],[[13,[324]]]],[[],[[13,[325]]]],[[],[[13,[327]]]],[[],[[13,[67]]]],[[],[[13,[209]]]],[[],[[13,[328]]]],[[],[[13,[329]]]],[[],[[13,[330]]]],[[],[[13,[331]]]],[[],[[13,[332]]]],[[],[[13,[283]]]],[[],[[13,[333]]]],[[],[[13,[334]]]],[[],[[13,[210]]]],[[],[[13,[85]]]],[[],[[13,[211]]]],[[],[[13,[286]]]],[336,13],[[],[[13,[336]]]],[[],[[13,[337]]]],[[],[[13,[212]]]],[339,[[13,[[11,[57,10]]]]]],[[],[[13,[135]]]],[[],[[13,[68]]]],[[],[[13,[220]]]],[[],[[13,[182]]]],[[],[[13,[183]]]],[[],[[13,[184]]]],[[],[[13,[142]]]],[[],[[13,[136]]]],[[],[[13,[137]]]],[[],[[13,[143]]]],[[],[[13,[144]]]],[[],[[13,[145]]]],[[],[[13,[138]]]],[[],[[13,[139]]]],[[],[[13,[140]]]],[[],[[13,[141]]]],[[],[[13,[151]]]],[[],[[13,[153]]]],[[],[[13,[154]]]],[[39,68],14],[[]],[[]],[[39,68]],[142,123],[143,123],[144,123],0,[[174,174],368],[[190,190],368],[[136,136],123],[[137,137],123],[[145,145],368],[[138,138],123],[[136,136],123],[[137,137],123],[[138,138],123],[[136,123],136],[[136,136],136],[[137,123],137],[[137,137],137],[[145,123],145],[[138,138],138],[[138,123],138],[[139,150],139],[[139,139],139],[[140,140],140],[[140,150],140],[[141,150],141],[[141,141],141],[[151,152],151],[[151,151],151],[[153,153],153],[[153,152],153],[[154,154],154],[[154,152],154],[[136,136]],[[136,123]],[[137,137]],[[137,123]],[[138,138]],[[138,123]],[[139,139]],[[139,150]],[[140,140]],[[140,150]],[[141,150]],[[141,141]],[[151,151]],[[151,152]],[[153,152]],[[153,153]],[[154,154]],[[154,152]],[[136,136],123],[[137,137],123],[[145,145],123],[[138,138],123],[[139,139],150],[[140,140],150],[[141,141],150],[[151,151],152],[[153,153],152],[[154,154],152],[[136,136],136],[[137,137],137],[[138,138],138],[[139,139],139],[[140,140],140],[[141,141],141],[[151,151],151],[[153,153],153],[[154,154],154],[174,137],[190,137],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[369,10]]],[[13,[[11,[10]],[11,[369,10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[57,10]]],[[13,[[11,[10]],[11,[57,10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[163,10]]],[[13,[[11,[10]],[11,[163,10]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[1]]],[[13,[22,[22,[1]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[369,26],[57,26],[163,26],[[22,25],26],[[[23,[369]]],[[13,[23,[23,[369]]]]]],[[[23,[163]]],[[13,[23,[23,[163]]]]]],[369,26],[57,26],[163,26],[[[22,[1]]],22],[22,370],[[],226],[287,260],[149,260],[12],[12],[12],[12],[12],[12],[12],[371],[12],[12],[12],[372],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[44],[12],[12],[309],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[22],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[[22,344]],0,[256],[193,161],0,0,[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],0,0,0,[191,161],[193,161],0,[191,123],0,[191,262],0,[191,123],0,[191,262],0,[193,123],[191,161],0,0,0,[[],28],[[[22,[279]],280,373],14],[[22,374],14],[[22,280],14],0,[[]],[[]],[[]],[[]],0,[[22,344]],0,[39,375],0,0,0,[39,375],[[66,68],376],[[39,68],377],0,0,0,0,[[39,68],378],[[289,289],14],[[170,170],14],[[189,189],14],[[174,174],14],[[291,291],14],[[190,190],14],[[249,249],14],[[250,250],14],[[251,251],14],[[194,194],14],[[195,195],14],[[196,196],14],[[294,294],14],[[295,295],14],[[296,296],14],[[298,298],14],[[300,300],14],[[197,197],14],[[301,301],14],[[198,198],14],[[302,302],14],[[303,303],14],[[199,199],14],[[308,308],14],[[44,44],14],[[309,309],14],[[201,201],14],[[310,310],14],[[202,202],14],[[146,146],14],[[204,204],14],[[314,314],14],[[320,320],14],[[322,322],14],[[226,226],14],[[327,327],14],[[209,209],14],[[330,330],14],[[331,331],14],[[332,332],14],[[283,283],14],[[333,333],14],[[334,334],14],[[210,210],14],[[85,85],14],[[211,211],14],[[286,286],14],[[336,336],14],[[337,337],14],[[212,212],14],[[135,135],14],[[68,68],14],[[22,22],14],[[181,181],14],[[218,218],14],[[220,220],14],[[182,182],14],[[183,183],14],[[184,184],14],[[142,142],14],[[136,136],14],[[137,137],14],[[143,143],14],[[144,144],14],[[145,145],14],[[138,138],14],[[139,139],14],[[140,140],14],[[141,141],14],[[151,151],14],[[153,153],14],[[154,154],14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],0,0,[[22,379]],0,[[22,379],14],0,0,0,0,0,0,0,[168],0,[168],0,[168],0,0,[[22,344]],0,0,[136,136],[137,137],[138,138],0,[287],[[136,123],137],[[137,123],138],[[139,150],140],[[140,150],141],[[151,152],153],[[153,152],154],[256],[172],[[],44],[[],205],[[],206],[[],203],[[],219],[[371,297],371],[[[372,[380]],297],372],[[[372,[381]],297],372],[214,123],[215,123],[216,123],0,0,[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],[[68,12]],0,[5,[[26,[57]]]],[12,[[26,[57]]]],[[170,5],[[26,[57]]]],[[189,5],[[26,[57]]]],[[174,12],[[26,[57]]]],[[190,5],[[26,[57]]]],[[191,5],[[26,[57]]]],[[192,12],[[26,[57]]]],[[193,5],[[26,[57]]]],[[194,12],[[26,[57]]]],[[195,5],[[26,[57]]]],[[196,5],[[26,[57]]]],[[197,5],[[26,[57]]]],[[198,5],[[26,[57]]]],[[199,5],[[26,[57]]]],[[200,5],[[26,[57]]]],[[44,5],[[26,[57]]]],[[201,5],[[26,[57]]]],[[202,5],[[26,[57]]]],[[146,5],[[26,[57]]]],[[203,12],[[26,[57]]]],[[204,5],[[26,[57]]]],[[205,5],[[26,[57]]]],[[206,5],[[26,[57]]]],[[187,5],[[26,[57]]]],[[207,5],[[26,[57]]]],[[82,5],[[26,[57]]]],[[208,5],[[26,[57]]]],[[209,5],[[26,[57]]]],[[210,12],[[26,[57]]]],[[211,5],[[26,[57]]]],[[212,5],[[26,[57]]]],[[213,5],[[26,[57]]]],[[214,5],[[26,[57]]]],[[215,5],[[26,[57]]]],[[216,5],[[26,[57]]]],[[135,5],[[26,[57]]]],[[181,12],[[26,[57]]]],[[217,5],[[26,[57]]]],[[218,5],[[26,[57]]]],[[219,5],[[26,[57]]]],[[182,5],[[26,[57]]]],[[183,5],[[26,[57]]]],[[184,5],[[26,[57]]]],[[142,5],[[26,[57]]]],[[136,5],[[26,[57]]]],[[137,5],[[26,[57]]]],[[143,5],[[26,[57]]]],[[144,5],[[26,[57]]]],[[138,5],[[26,[57]]]],[[139,5],[[26,[57]]]],[[140,5],[[26,[57]]]],[[141,5],[[26,[57]]]],[[151,5],[[26,[57]]]],[[153,5],[[26,[57]]]],[[154,5],[[26,[57]]]],[12,[[26,[57]]]],[[170,12],[[26,[57]]]],[[189,12],[[26,[57]]]],[[190,12],[[26,[57]]]],[[191,12],[[26,[57]]]],[[193,12],[[26,[57]]]],[[195,12],[[26,[57]]]],[[196,12],[[26,[57]]]],[[197,12],[[26,[57]]]],[[198,12],[[26,[57]]]],[[199,12],[[26,[57]]]],[[200,12],[[26,[57]]]],[[44,12],[[26,[57]]]],[[201,12],[[26,[57]]]],[[202,12],[[26,[57]]]],[[146,12],[[26,[57]]]],[[204,12],[[26,[57]]]],[[205,12],[[26,[57]]]],[[206,12],[[26,[57]]]],[[187,12],[[26,[57]]]],[[207,12],[[26,[57]]]],[[82,12],[[26,[57]]]],[[208,12],[[26,[57]]]],[[209,12],[[26,[57]]]],[[211,12],[[26,[57]]]],[[212,12],[[26,[57]]]],[[213,12],[[26,[57]]]],[[214,12],[[26,[57]]]],[[215,12],[[26,[57]]]],[[216,12],[[26,[57]]]],[[135,12],[[26,[57]]]],[[217,12],[[26,[57]]]],[[218,12],[[26,[57]]]],[[219,12],[[26,[57]]]],[[182,12],[[26,[57]]]],[[183,12],[[26,[57]]]],[[184,12],[[26,[57]]]],[[142,12],[[26,[57]]]],[[136,12],[[26,[57]]]],[[137,12],[[26,[57]]]],[[143,12],[[26,[57]]]],[[144,12],[[26,[57]]]],[[138,12],[[26,[57]]]],[[139,12],[[26,[57]]]],[[140,12],[[26,[57]]]],[[141,12],[[26,[57]]]],[[151,12],[[26,[57]]]],[[153,12],[[26,[57]]]],[[154,12],[[26,[57]]]],[12,[[26,[57]]]],[[170,12],[[26,[57]]]],[[189,12],[[26,[57]]]],[[190,12],[[26,[57]]]],[[191,12],[[26,[57]]]],[[193,12],[[26,[57]]]],[[195,12],[[26,[57]]]],[[196,12],[[26,[57]]]],[[197,12],[[26,[57]]]],[[198,12],[[26,[57]]]],[[199,12],[[26,[57]]]],[[200,12],[[26,[57]]]],[[44,12],[[26,[57]]]],[[201,12],[[26,[57]]]],[[202,12],[[26,[57]]]],[[146,12],[[26,[57]]]],[[204,12],[[26,[57]]]],[[205,12],[[26,[57]]]],[[206,12],[[26,[57]]]],[[187,12],[[26,[57]]]],[[207,12],[[26,[57]]]],[[82,12],[[26,[57]]]],[[208,12],[[26,[57]]]],[[209,12],[[26,[57]]]],[[211,12],[[26,[57]]]],[[212,12],[[26,[57]]]],[[213,12],[[26,[57]]]],[[214,12],[[26,[57]]]],[[215,12],[[26,[57]]]],[[216,12],[[26,[57]]]],[[135,12],[[26,[57]]]],[[217,12],[[26,[57]]]],[[218,12],[[26,[57]]]],[[219,12],[[26,[57]]]],[[182,12],[[26,[57]]]],[[183,12],[[26,[57]]]],[[184,12],[[26,[57]]]],[[142,12],[[26,[57]]]],[[136,12],[[26,[57]]]],[[137,12],[[26,[57]]]],[[143,12],[[26,[57]]]],[[144,12],[[26,[57]]]],[[138,12],[[26,[57]]]],[[139,12],[[26,[57]]]],[[140,12],[[26,[57]]]],[[141,12],[[26,[57]]]],[[151,12],[[26,[57]]]],[[153,12],[[26,[57]]]],[[154,12],[[26,[57]]]],[[],12],[[],12],[170,12],[189,12],[174,12],[190,12],[191,12],[192,12],[193,12],[194,12],[195,12],[196,12],[197,12],[198,12],[199,12],[200,12],[44,12],[201,12],[202,12],[146,12],[203,12],[204,12],[205,12],[206,12],[187,12],[207,12],[82,12],[208,12],[209,12],[210,12],[211,12],[212,12],[213,12],[214,12],[215,12],[216,12],[135,12],[181,12],[217,12],[218,12],[219,12],[182,12],[183,12],[184,12],[142,12],[136,12],[137,12],[143,12],[144,12],[138,12],[139,12],[140,12],[141,12],[151,12],[153,12],[154,12],[5,[[26,[57]]]],[12,[[26,[57]]]],[[170,5],[[26,[57]]]],[[189,5],[[26,[57]]]],[[174,12],[[26,[57]]]],[[190,5],[[26,[57]]]],[[191,5],[[26,[57]]]],[[192,12],[[26,[57]]]],[[193,5],[[26,[57]]]],[[194,12],[[26,[57]]]],[[195,5],[[26,[57]]]],[[196,5],[[26,[57]]]],[[197,5],[[26,[57]]]],[[198,5],[[26,[57]]]],[[199,5],[[26,[57]]]],[[200,5],[[26,[57]]]],[[44,5],[[26,[57]]]],[[201,5],[[26,[57]]]],[[202,5],[[26,[57]]]],[[146,5],[[26,[57]]]],[[203,12],[[26,[57]]]],[[204,5],[[26,[57]]]],[[205,5],[[26,[57]]]],[[206,5],[[26,[57]]]],[[187,5],[[26,[57]]]],[[207,5],[[26,[57]]]],[[82,5],[[26,[57]]]],[[208,5],[[26,[57]]]],[[209,5],[[26,[57]]]],[[210,12],[[26,[57]]]],[[211,5],[[26,[57]]]],[[212,5],[[26,[57]]]],[[213,5],[[26,[57]]]],[[214,5],[[26,[57]]]],[[215,5],[[26,[57]]]],[[216,5],[[26,[57]]]],[[135,5],[[26,[57]]]],[[181,12],[[26,[57]]]],[[217,5],[[26,[57]]]],[[218,5],[[26,[57]]]],[[219,5],[[26,[57]]]],[[182,5],[[26,[57]]]],[[183,5],[[26,[57]]]],[[184,5],[[26,[57]]]],[[142,5],[[26,[57]]]],[[136,5],[[26,[57]]]],[[137,5],[[26,[57]]]],[[143,5],[[26,[57]]]],[[144,5],[[26,[57]]]],[[138,5],[[26,[57]]]],[[139,5],[[26,[57]]]],[[140,5],[[26,[57]]]],[[141,5],[[26,[57]]]],[[151,5],[[26,[57]]]],[[153,5],[[26,[57]]]],[[154,5],[[26,[57]]]],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],[[68,12],14],0,[[171,52],[[13,[82,382]]]],[193,14],0,[186,[[26,[136]]]],[191,[[26,[383]]]],0,[149,14],0,0,0,0,0,0,[136,136],[137,137],[138,138],[22],[[28,19],[[13,[358]]]],[[289,19],[[13,[358]]]],[[170,19],[[13,[358]]]],[[92,19],[[13,[358]]]],[[189,19],[[13,[358]]]],[[189,19],[[13,[358]]]],[[359,19],[[13,[358]]]],[[174,19],[[13,[358]]]],[[291,19],[[13,[358]]]],[[50,19],[[13,[358]]]],[[245,19],[[13,[358]]]],[[246,19],[[13,[358]]]],[[190,19],[[13,[358]]]],[[293,19],[[13,[358]]]],[[191,19],[[13,[358]]]],[[360,19],[[13,[358]]]],[[249,19],[[13,[358]]]],[[192,19],[[13,[358]]]],[[250,19],[[13,[358]]]],[[193,19],[[13,[358]]]],[[251,19],[[13,[358]]]],[[194,19],[[13,[358]]]],[[384,19],[[13,[358]]]],[[385,19],[[13,[358]]]],[[386,19],[[13,[358]]]],[[387,19],[[13,[358]]]],[[388,19],[[13,[358]]]],[[389,19],[[13,[358]]]],[[195,19],[[13,[358]]]],[[57,19],[[13,[358]]]],[[196,19],[[13,[358]]]],[[350,19],[[13,[358]]]],[[122,19],[[13,[358]]]],[[294,19],[[13,[358]]]],[[295,19],[[13,[358]]]],[[296,19],[[13,[358]]]],[[298,19],[[13,[358]]]],[[299,19],[[13,[358]]]],[[300,19],[[13,[358]]]],[[197,19],[[13,[358]]]],[[301,19],[[13,[358]]]],[[198,19],[[13,[358]]]],[[302,19],[[13,[358]]]],[[303,19],[[13,[358]]]],[[390,19],[[13,[358]]]],[[390,19],[[13,[358]]]],[[307,19],[[13,[358]]]],[[52,19],[[13,[358]]]],[[199,19],[[13,[358]]]],[[308,19],[[13,[358]]]],[[200,19],[[13,[358]]]],[[44,19],[[13,[358]]]],[[309,19],[[13,[358]]]],[[201,19],[[13,[358]]]],[[310,19],[[13,[358]]]],[[311,19],[[13,[358]]]],[[202,19],[[13,[358]]]],[[146,19],[[13,[358]]]],[[203,19],[[13,[358]]]],[[312,19],[[13,[358]]]],[[204,19],[[13,[358]]]],[[313,19],[[13,[358]]]],[[247,19],[[13,[358]]]],[[315,19],[[13,[358]]]],[[316,19],[[13,[358]]]],[[149,19],[[13,[358]]]],[[317,19],[[13,[358]]]],[[318,19],[[13,[358]]]],[[187,19],[[13,[358]]]],[[319,19],[[13,[358]]]],[[320,19],[[13,[358]]]],[[321,19],[[13,[358]]]],[[207,19],[[13,[358]]]],[[322,19],[[13,[358]]]],[[323,19],[[13,[358]]]],[[226,19],[[13,[358]]]],[[81,19],[[13,[358]]]],[[82,19],[[13,[358]]]],[[208,19],[[13,[358]]]],[[324,19],[[13,[358]]]],[[171,19],[[13,[358]]]],[[325,19],[[13,[358]]]],[[326,19],[[13,[358]]]],[[327,19],[[13,[358]]]],[[67,19],[[13,[358]]]],[[209,19],[[13,[358]]]],[[163,19],[[13,[358]]]],[[328,19],[[13,[358]]]],[[168,19],[[13,[358]]]],[[329,19],[[13,[358]]]],[[330,19],[[13,[358]]]],[[331,19],[[13,[358]]]],[[332,19],[[13,[358]]]],[[283,19],[[13,[358]]]],[[333,19],[[13,[358]]]],[[334,19],[[13,[358]]]],[[148,19],[[13,[358]]]],[[335,19],[[13,[358]]]],[[210,19],[[13,[358]]]],[[85,19],[[13,[358]]]],[[211,19],[[13,[358]]]],[[286,19],[[13,[358]]]],[[286,19],[[13,[358]]]],[[336,19],[[13,[358]]]],[[337,19],[[13,[358]]]],[[212,19],[[13,[358]]]],[[186,19],[[13,[358]]]],[[351,19],[[13,[358]]]],[[391,19],[[13,[358]]]],[[391,19],[[13,[358]]]],[[391,19],[[13,[358]]]],[[49,19],[[13,[358]]]],[[90,19],[[13,[358]]]],[[367,19],[[13,[358]]]],[[213,19],[[13,[358]]]],[[214,19],[[13,[358]]]],[[215,19],[[13,[358]]]],[[216,19],[[13,[358]]]],[[39,19],[[13,[358]]]],[[135,19],[[13,[358]]]],[[256,19],[[13,[358]]]],[[68,19],[[13,[358]]]],[[287,19],[[13,[358]]]],[[22,19],[[13,[358]]]],[[22,19],[[13,[358]]]],[[22,19],[[13,[358]]]],[[341,19],[[13,[358]]]],[[365,19],[[13,[358]]]],[[172,19],[[13,[358]]]],[[181,19],[[13,[358]]]],[[217,19],[[13,[358]]]],[[218,19],[[13,[358]]]],[[366,19],[[13,[358]]]],[[220,19],[[13,[358]]]],[[182,19],[[13,[358]]]],[[182,19],[[13,[358]]]],[[183,19],[[13,[358]]]],[[183,19],[[13,[358]]]],[[184,19],[[13,[358]]]],[[184,19],[[13,[358]]]],[[142,19],[[13,[358]]]],[[142,19],[[13,[358]]]],[[136,19],[[13,[358]]]],[[136,19],[[13,[358]]]],[[137,19],[[13,[358]]]],[[137,19],[[13,[358]]]],[[143,19],[[13,[358]]]],[[143,19],[[13,[358]]]],[[144,19],[[13,[358]]]],[[144,19],[[13,[358]]]],[[145,19],[[13,[358]]]],[[145,19],[[13,[358]]]],[[138,19],[[13,[358]]]],[[138,19],[[13,[358]]]],[[139,19],[[13,[358]]]],[[139,19],[[13,[358]]]],[[140,19],[[13,[358]]]],[[140,19],[[13,[358]]]],[[141,19],[[13,[358]]]],[[141,19],[[13,[358]]]],[[151,19],[[13,[358]]]],[[151,19],[[13,[358]]]],[[153,19],[[13,[358]]]],[[153,19],[[13,[358]]]],[[154,19],[[13,[358]]]],[[154,19],[[13,[358]]]],[[392,19],[[13,[358]]]],[[288,19],[[13,[358]]]],[[158,19],[[13,[358]]]],0,[[247,39]],[[351,393]],[[247,39]],[[351,393]],[[247,39]],[359],0,[359],0,[[171,352],171],0,[174,137],[190,137],0,[136,136],[137,137],[138,138],[[],394],[164],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,189],[5,189],[[]],[[]],[[]],[144,174],[175,174],[395,174],[368,174],[[]],[190,174],[[]],[[]],[[]],[[]],[[]],[[]],[245,246],[50,246],[[]],[395,190],[368,190],[[]],[174,190],[[]],[[]],[190,293],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[396,298],[396,298],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[397,390],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[172]]],200],[135,200],[[]],[[]],[[]],[[]],[44,309],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[399,[[42,[286,10]],398]]],85],[[]],[[]],[[]],[400,286],[226,286],[199,286],[337,286],[[]],[209,286],[322,286],[332,286],[211,286],[401,286],[320,286],[402,286],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,49],[[]],[[]],[[]],[[]],[245,367],[[]],[216,214],[215,214],[[]],[[]],[[]],[[]],[138,135],[[],135],[[],135],[[]],[403,256],[404,256],[405,256],[406,256],[[]],[407,256],[408,256],[409,256],[410,256],[411,256],[412,256],[[]],[[]],[[]],[[]],[5,[[22,[5]]]],[413,[[22,[414]]]],[[[42,[10]]],22],[415,[[22,[416]]]],[[],22],[416,[[22,[416]]]],[[]],[414,[[22,[414]]]],[417],[[],22],[40,[[22,[40]]]],[[[11,[10]]],22],[87,[[22,[5]]]],[[[22,[5]]],22],[41,[[22,[40]]]],[104,22],[[]],[[]],[190,365],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[418,142],[419,142],[[]],[[]],[368,136],[[],136],[[],136],[261,136],[395,136],[395,137],[[]],[[],137],[[],137],[252,137],[[],137],[[]],[[]],[175,144],[395,145],[368,145],[[]],[145,138],[420,138],[135,138],[[]],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[],138],[[]],[[]],[[],139],[[]],[[],139],[[]],[[],140],[[],140],[[],140],[[],141],[[],141],[[],141],[[]],[[],141],[[],141],[[],141],[[],151],[[]],[[],151],[[],153],[[]],[[],153],[[],153],[[]],[[],154],[[],154],[[],154],[[],154],[[],154],[[],154],[[]],[[]],[[]],[421,160],[179,160],[[]],[175,145],[123,142],[123,136],[123,143],[[],136],[[],137],[[],145],[[],138],[[],139],[[],140],[[],141],[[],151],[[],153],[[],154],[[137,123],142],[[137,123],144],[[137,123],145],[21,68],[[422,423,14],[[13,[172,424]]]],[[136,136],170],[[136,136],170],[[137,137,137],142],[[136,136],143],[[138,138,138,138],144],[[],142],[[],143],[[],144],[[],142],[[],143],[[],144],[[],142],[[],143],[[],144],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[136,136],170],[137,142],[136,143],[138,144],[[425,14],172],[[220,123,123,123],142],[[220,123,123,123],144],[[220,123,123,123],145],[426],[426],[[[258,[[104,[5]]]],427],341],[[[44,[172]],136,12,12,[26,[136]],[26,[136]]],82],[[]],[[]],[[],85],[[],22],[[],181],[[],181],[143,142],[142,143],[142,144],[142,145],[418,143],[418,144],[418,145],[144,142],[144,145],[144,190],[[],142],[[],136],[[],137],[[],143],[[],144],[[],138],[[],139],[[],140],[[],141],[[],151],[[],153],[[],154],[145,142],[145,144],[152,68],[[],22],[57,26],[57,[[26,[170]]]],[57,[[26,[189]]]],[57,[[26,[174]]]],[57,[[26,[190]]]],[57,[[26,[191]]]],[57,[[26,[193]]]],[57,[[26,[195]]]],[57,[[26,[196]]]],[57,[[26,[197]]]],[57,[[26,[198]]]],[57,[[26,[199]]]],[57,[[26,[200]]]],[57,[[26,[44]]]],[57,[[26,[201]]]],[57,[[26,[202]]]],[57,[[26,[146]]]],[57,[[26,[204]]]],[57,[[26,[82]]]],[57,[[26,[209]]]],[57,[[26,[210]]]],[57,[[26,[211]]]],[57,[[26,[212]]]],[57,[[26,[213]]]],[57,[[26,[215]]]],[57,[[26,[216]]]],[57,[[26,[135]]]],[57,[[26,[68]]]],[57,[[26,[172]]]],[57,[[26,[217]]]],[57,[[26,[182]]]],[57,[[26,[183]]]],[57,[[26,[184]]]],[57,[[26,[142]]]],[57,[[26,[136]]]],[57,[[26,[137]]]],[57,[[26,[143]]]],[57,[[26,[144]]]],[57,[[26,[145]]]],[57,[[26,[138]]]],[57,[[26,[139]]]],[57,[[26,[140]]]],[57,[[26,[141]]]],[57,[[26,[151]]]],[57,[[26,[153]]]],[57,[[26,[154]]]],[145,190],[[137,137],145],[[136,136],145],[[137,137],145],[[145,137],144],[123,142],[123,144],[123,145],[123,142],[123,144],[123,145],[123,142],[123,144],[123,145],[137,190],[136,142],[137,144],[[136,123],143],[[136,123,136],142],[[137,145,137],144],[137,145],[[123,195],193],[[],136],[[],137],[[],145],[[],138],[[],139],[[],140],[[],141],[[],151],[[],153],[[],154],[426],[[[258,[104]]],341],[[161,5],165],[190,293],[190,365],[137,190],[136,142],[137,144],[[],338],[[],339],[[],340],[[],221],[[],222],[[[258,[428]],123],320],[[[258,[428]],[258,[428]],123,123],322],[138,145],[[[258,[[104,[5]]]]],341],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39,192],[39],[39,194],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39,247],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[[123,123,123],190],[[123,123,123,123],145],0,0,0,[135,123],[85,[[26,[196]]]],0,0,0,[[],226],0,[[22,22],14],[256,[[13,[429]]]],[68,152],0,[359,26],[360,[[26,[123]]]],[194,68],[[354,5],[[26,[355]]]],[[52,44],26],[[247,39,68],[[13,[430]]]],[[148,431],[[26,[149]]]],[85,432],[[351,68],[[13,[430]]]],[[39,68],26],[28,[[42,[10]]]],[12,26],[[39,68,348],[[26,[433]]]],[[284,5],[[26,[285]]]],[[351,68],[[13,[434]]]],[[351,68],[[13,[246,434]]]],[[351,68],[[13,[246,434]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[354,[[26,[355]]]],[354,[[26,[355]]]],[[],160],[[66,68],[[26,[376]]]],[[39,68],[[26,[377]]]],[[39,68],[[26,[378]]]],[168,26],[168,26],[5,26],[12,26],[5,26],[5,26],[12,26],[5,26],[5,26],[12,26],[5,26],[12,26],[5,26],[[435,5],26],[5,26],[[436,12],26],[5,26],[5,26],[5,26],[5,26],[12,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[12,26],[5,26],[5,26],[5,26],[5,26],[12,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[12,26],[5,26],[5,26],[12,26],[5,26],[5,26],[12,26],[5,26],[12,26],[5,26],[[435,5],26],[5,26],[[436,12],26],[5,26],[5,26],[5,26],[5,26],[12,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[12,26],[5,26],[5,26],[5,26],[5,26],[12,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[[5,12]],[[5,12]],[[28,5,12]],[[158,5,12]],[[5,12]],[[5,12]],[[28,5,12]],[[158,5,12]],[5,165],[5,165],[[28,5],165],[[158,5],165],[5,165],[5,165],[[28,5],165],[[158,5],165],[[164,188],437],[164,44],[52,44],[164,[[26,[43]]]],[164,309],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[256,26],[[351,68],[[13,[430]]]],[146,[[42,[10]]]],[187,438],[146,[[42,[10]]]],[187,438],[[],152],[223,152],[164,437],[[247,39,68],[[13,[430]]]],[[247,39],[[13,[430]]]],[351,[[13,[430]]]],[[247,39],[[13,[430]]]],[351,[[13,[430]]]],[256,[[441,[439,440]]]],[359,26],[[354,5],[[26,[355]]]],[[52,44],26],[[247,39,68],[[13,[430]]]],[[148,431],[[26,[149]]]],[[351,68],[[13,[430]]]],[[39,68],[[26,[246]]]],[22,26],[[39,68,348],[[26,[442]]]],[22],[39,26],[39,[[26,[246]]]],[39,[[26,[246]]]],[[52,155]],[[66,68],376],[[39,68],[[26,[378]]]],[[247,443]],[[247,443,39,152]],[146,[[42,[10]]]],[187,438],[[186,21],[[26,[444]]]],[148,[[26,[149]]]],[148,[[26,[149]]]],[214,144],[215,144],[216,144],[287,445],[287,445],[146,[[42,[10]]]],[[186,21],[[26,[444]]]],[39,26],[[39,348],[[26,[433]]]],[39,[[26,[246]]]],[[39,348],[[26,[442]]]],[[39,155],246],[39,[[26,[246]]]],[[338,57],446],0,[354,[[26,[355]]]],[[247,39],[[13,[447]]]],[351,[[13,[447]]]],[354,[[26,[355]]]],[[247,39],[[13,[447]]]],[351,[[13,[447]]]],[[247,39],[[13,[447]]]],[[247,39,152,152],[[13,[447]]]],[12,68],[[158,162],26],[[158,162],26],[[28,166],[[13,[28,166]]]],[[28,166],[[13,[28,448]]]],[[82,44],[[26,[12]]]],[[],59],[170,59],[189,59],[174,59],[190,59],[191,59],[192,59],[193,59],[194,59],[195,59],[196,59],[197,59],[198,59],[199,59],[200,59],[44,59],[201,59],[202,59],[146,59],[203,59],[204,59],[205,59],[206,59],[187,59],[207,59],[82,59],[208,59],[209,59],[210,59],[211,59],[212,59],[213,59],[214,59],[215,59],[216,59],[135,59],[68,59],[172,59],[181,59],[217,59],[218,59],[219,59],[220,59],[182,59],[183,59],[184,59],[142,59],[136,59],[137,59],[143,59],[144,59],[145,59],[138,59],[139,59],[140,59],[141,59],[151,59],[153,59],[154,59],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[247,39,68],[[13,[430]]]],[[351,68],[[13,[430]]]],[256,[[42,[24,10]]]],0,0,0,0,0,0,0,0,0,0,0,[[22,22],14],[170,136],[371,[[44,[51]]]],0,[[85,449,334]],0,0,0,[189],[291],[249],[250],[251],[195],[196],[303],[199],[44],[309],[201],[202],[204],[314],[320],[322],[226],[327],[209],[332],[210],[211],[286],[336],[337],[68],[22],[220],[182],[183],[184],[139],[140],[141],[151],[153],[154],0,0,[170,123],[149,123],0,[[],[[13,[135,450]]]],[[123,123,123],135],[[123,123,123,123],135],[44,451],[149,431],[39,452],0,0,0,0,0,0,0,0,0,0,0,0,[52,260],0,[[],178],0,[341,[[26,[453]]]],0,[341,438],0,[288],[39,152],[[]],[[],12],[68,152],[[136,12]],[[137,12]],[[138,12]],[[139,12]],[[140,12]],[[141,12]],[[151,12]],[[153,12]],[[154,12]],0,0,0,[[136,12]],[[137,12]],[[138,12]],[[139,12]],[[140,12]],[[141,12]],[[151,12]],[[153,12]],[[154,12]],[[195,5],[[26,[12]]]],[[197,5],[[26,[12]]]],[[199,5],[[26,[12]]]],[[202,5],[[26,[12]]]],[[209,5],[[26,[12]]]],[[211,5],[[26,[12]]]],[[214,5],[[26,[12]]]],[[135,5],[[26,[12]]]],[256,[[26,[454]]]],0,[256,[[26,[454]]]],0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[39,443],247],[[39,443],247],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[28,28],[39,348],[[39,455],348],[[]],[28,28],[[39,348,152,152],456],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,348,152,152]],[[39,348,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,152,152]],[[39,348,152,152]],[[39,348,152,152]],[28,28],[39],[28,28],[66],[39],[39,348],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39,348],[39,348],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39,348],[39,348],[[171,136],171],0,[39],[[223,39]],0,[[85,[258,[286]]],85],[[221,39,68,57]],[[222,39,57]],[[85,[258,[286]],12],85],[[256,457,[258,[259]]]],[12],[12],[[389,12],389],[[85,188],85],[[85,337,[258,[401]]],85],[[85,188],85],[28,28],[39],[66],[39,[[13,[[42,[68,10]]]]]],[28,28],[66],[39],[[39,348,458]],[[170,123],170],[[39,68],[[42,[459,10]]]],[28],[28],[28],[28],[28],0,[146,[[26,[383]]]],0,[[170,170],170],[[181,181],14],[[]],[[]],[[]],[[],460],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[392,460],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[170,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[189,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[174,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[190,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[191,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[192,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[193,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[194,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[195,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[196,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[197,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[198,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[199,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[200,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[44,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[201,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[202,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[146,10]]],[[11,[1,10]]]],[[[11,[203,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[204,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[205,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[206,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[187,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[207,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[82,10]]],[[11,[1,10]]]],[[[11,[208,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[209,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[210,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[211,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[212,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[213,10]]],[[11,[1,10]]]],[[[11,[214,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[215,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[216,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[135,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[68,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[172,10]]],[[11,[1,10]]]],[[[11,[181,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[217,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[218,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[219,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[220,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[182,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[183,10]]],[[11,[1,10]]]],[[[11,[184,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[142,10]]],[[11,[1,10]]]],[[[11,[136,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[137,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[143,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[144,10]]],[[11,[1,10]]]],[[[11,[145,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[138,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[139,10]]],[[11,[1,10]]]],[[[11,[140,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[141,10]]],[[11,[1,10]]]],[[[11,[151,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[153,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[154,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[],461],[[],178],[122,96],[50],[245],[246],[49],[50],[50],[246],[246],[[]],[[]],[192],[351],[351],[49],[90],[90],[462],[22],[[[11,[10]]],[[11,[57,10]]]],[[[11,[170,10]]],[[11,[57,10]]]],[[[11,[189,10]]],[[11,[57,10]]]],[[[11,[174,10]]],[[11,[57,10]]]],[[[11,[190,10]]],[[11,[57,10]]]],[[[11,[191,10]]],[[11,[57,10]]]],[[[11,[192,10]]],[[11,[57,10]]]],[[[11,[193,10]]],[[11,[57,10]]]],[[[11,[194,10]]],[[11,[57,10]]]],[[[11,[195,10]]],[[11,[57,10]]]],[[[11,[196,10]]],[[11,[57,10]]]],[[[11,[197,10]]],[[11,[57,10]]]],[[[11,[198,10]]],[[11,[57,10]]]],[[[11,[199,10]]],[[11,[57,10]]]],[[[11,[200,10]]],[[11,[57,10]]]],[[[11,[44,10]]],[[11,[57,10]]]],[[[11,[201,10]]],[[11,[57,10]]]],[[[11,[202,10]]],[[11,[57,10]]]],[[[11,[146,10]]],[[11,[57,10]]]],[[[11,[203,10]]],[[11,[57,10]]]],[[[11,[204,10]]],[[11,[57,10]]]],[[[11,[205,10]]],[[11,[57,10]]]],[[[11,[206,10]]],[[11,[57,10]]]],[[[11,[187,10]]],[[11,[57,10]]]],[[[11,[207,10]]],[[11,[57,10]]]],[[[11,[82,10]]],[[11,[57,10]]]],[[[11,[208,10]]],[[11,[57,10]]]],[[[11,[209,10]]],[[11,[57,10]]]],[[[11,[210,10]]],[[11,[57,10]]]],[[[11,[211,10]]],[[11,[57,10]]]],[[[11,[212,10]]],[[11,[57,10]]]],[[[11,[213,10]]],[[11,[57,10]]]],[[[11,[214,10]]],[[11,[57,10]]]],[[[11,[215,10]]],[[11,[57,10]]]],[[[11,[216,10]]],[[11,[57,10]]]],[[[11,[135,10]]],[[11,[57,10]]]],[[[11,[68,10]]],[[11,[57,10]]]],[[[11,[172,10]]],[[11,[57,10]]]],[[[11,[181,10]]],[[11,[57,10]]]],[[[11,[217,10]]],[[11,[57,10]]]],[[[11,[218,10]]],[[11,[57,10]]]],[[[11,[219,10]]],[[11,[57,10]]]],[[[11,[220,10]]],[[11,[57,10]]]],[[[11,[182,10]]],[[11,[57,10]]]],[[[11,[183,10]]],[[11,[57,10]]]],[[[11,[184,10]]],[[11,[57,10]]]],[[[11,[142,10]]],[[11,[57,10]]]],[[[11,[136,10]]],[[11,[57,10]]]],[[[11,[137,10]]],[[11,[57,10]]]],[[[11,[143,10]]],[[11,[57,10]]]],[[[11,[144,10]]],[[11,[57,10]]]],[[[11,[145,10]]],[[11,[57,10]]]],[[[11,[138,10]]],[[11,[57,10]]]],[[[11,[139,10]]],[[11,[57,10]]]],[[[11,[140,10]]],[[11,[57,10]]]],[[[11,[141,10]]],[[11,[57,10]]]],[[[11,[151,10]]],[[11,[57,10]]]],[[[11,[153,10]]],[[11,[57,10]]]],[[[11,[154,10]]],[[11,[57,10]]]],[[],[[463,[87]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[359,13],[142,142],[143,143],[144,144],[145,145],0,[369,14],[57,14],[163,14],0,[[],14],[50,14],[245,14],[246,14],[307,14],[49,14],[367,14],[[],14],[50,14],[245,14],[246,14],[307,14],[49,14],[367,14],[[284,5],14],[172,14],[170,14],[52,14],[[247,39,152,152],14],[82,14],[85,14],[286,14],[351,14],[287,14],[93,14],[[],14],[223,14],[142,14],[136,14],[137,14],[143,14],[144,14],[145,14],[138,14],[149,14],[142,14],[136,14],[137,14],[143,14],[144,14],[145,14],[138,14],[136,182],[137,183],[138,346],[145,14],[136,152],[137,152],[138,152],[139,152],[140,152],[141,152],[136,14],[137,14],[145,14],[138,14],[191,14],[[],14],[285,14],[54,14],[28,14],[39,14],[39,14],[[],14],[223,14],[44,14],[309,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[218,14],0,[218,14],0,[218,14],0,[44,14],[309,14],[350,260],[52,260],[[247,39],464],[148,260],[85,260],[186,260],[351,464],[462,[[466,[[465,[68]]]]]],[93,[[0,[467,438]]]],[181,260],[68,468],[[351,68],468],[[247,39],469],[351,469],[[247,39],469],[351,469],[[247,39],469],[351,469],[287,[[0,[467,438]]]],[68,470],[[351,68],470],[39,260],[[],61],[[],471],[170,61],[189,61],[174,471],[190,61],[191,61],[192,471],[193,61],[194,471],[195,472],[196,61],[197,472],[198,61],[199,472],[200,61],[44,61],[201,61],[202,472],[146,61],[203,471],[204,61],[205,61],[206,61],[187,61],[207,61],[82,61],[208,61],[209,472],[210,471],[211,472],[212,61],[213,61],[214,472],[215,61],[216,61],[135,472],[181,471],[217,61],[218,61],[219,61],[182,61],[183,61],[184,61],[142,61],[136,61],[137,61],[143,61],[144,61],[138,61],[139,61],[140,61],[141,61],[151,61],[153,61],[154,61],[351,464],[85,260],[186,260],[186,260],[186,260],[[247,39],464],[[247,39],473],[351,473],[[247,39],473],[351,473],[351,473],[52,260],[[247,39],464],[148,260],[351,464],[158,260],[[247,39],464],[351,464],[93,[[0,[467,438]]]],0,0,0,0,[[186,21],14],0,[193,14],[146,14],[187,14],[[186,21],14],0,0,[146,14],[187,14],[[186,21],14],0,0,[337],0,0,[176,169],[180,178],[176,169],[[179,180],179],[[160,180],160],0,0,[176,169],[176,169],0,0,0,0,[39,152],0,0,0,0,0,[[],152],[50,152],[245,152],[246,152],0,[191,[[26,[383]]]],0,[24,181],0,0,[[22,22],14],[174,137],[190,137],0,0,[[],322],[52,12],[82,12],[85,12],[286,12],[287,12],[93,12],[22,12],[136,123],[137,123],[145,123],[138,123],[136,123],[137,123],[145,123],[138,123],[136,123],[137,123],[145,123],[138,123],[[136,136,123],136],[[137,137,123],137],[[145,145,123],145],[[138,138,123],138],[161,297],[[371,161],371],[[[372,[380]],161],372],[[[372,[381]],161],372],[[31,42]],[164,44],[[311,31,42]],[[313,31,42]],[[315,31,42]],[[316,31,42]],[[317,31,42]],[[318,31,42]],[[319,31,42]],[[321,31,42]],[[323,31,42]],[[324,31,42]],[[325,31,42]],[[328,31,42]],[[329,31,42]],[164,[[13,[[42,[309,10]],474]]]],[[164,5],[[13,[[42,[44,10]],32]]]],[[44,475],476],[[309,475],476],[164,309],0,[190,137],[190,137],[190,137],0,[[22,477]],[213,[[26,[136]]]],[213,26],[213,[[26,[136]]]],[[190,137,137]],[[137,137,137],144],[[137,137,137],144],[[137,137,137],144],[[137,137,137],144],[[190,137,137],190],[[371,262],371],[371,371],[[22,22],14],0,0,[22],[[44,52]],[22],[351],[351],0,0,[[192,478],[[13,[479]]]],[[194,478],[[13,[479]]]],[[50,155],246],[[245,155],246],[[246,155],246],[164],0,0,0,0,0,0,0,0,0,[348,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[348,14],[348,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[348,14],[348,14],[[136,136],136],[[137,137],137],[[138,138],138],[[139,139],139],[[140,140],140],[[141,141],141],[[151,151],151],[[153,153],153],[[154,154],154],0,[136,123],[137,123],[138,123],[139,150],[140,150],[141,150],[151,152],[153,152],[154,152],[22,[[26,[480]]]],[[[22,[279]]],[[26,[480]]]],[[171,136],171],0,0,[[85,85],85],0,[[136,136],136],[[137,137],137],[[138,138],138],[[139,139],139],[[140,140],140],[[141,141],141],[[151,151],151],[[153,153],153],[[154,154],154],0,0,[136,123],[137,123],[138,123],[139,150],[140,150],[141,150],[151,152],[153,152],[154,152],0,[193,195],[149,330],0,0,0,[[337,[258,[401]]],286],0,[[],322],[[],226],[[],320],[[],320],[[],322],[[],226],[[],320],[[],320],0,[[174,137]],[[174,174]],[[174,190]],[[190,137]],[[190,190]],[135],[[135,137]],[[135,138]],[[135,123]],[135],[[142,137]],[[142,142]],[[142,252],252],[[142,419]],[[142,123]],[[136,136],136],[[136,123],136],[[137,137],137],[[137,123],137],[[143,143]],[[143,136]],[[143,123]],[[144,144]],[[144,138]],[[144,175]],[[144,123]],[[145,252]],[[145,137]],[[145,123],145],[[145,145],145],[[138,138],138],[[138,123],138],[[139,139],139],[[139,150],139],[[140,150],140],[[140,140],140],[[141,141],141],[[141,150],141],[[151,151],151],[[151,152],151],[[153,152],153],[[153,153],153],[[154,152],154],[[154,154],154],[[136,136,136],136],[[137,137,137],137],[[138,138,138],138],[135],[[135,123]],[[135,138]],[135],[[135,137]],[[142,123]],[[142,142]],[[136,136]],[[136,123]],[[137,137]],[[137,123]],[[143,143]],[[143,123]],[[144,144]],[[144,123]],[[145,145]],[[138,138]],[[138,123]],[[139,150]],[[139,139]],[[140,150]],[[140,140]],[[141,150]],[[141,141]],[[151,151]],[[151,152]],[[153,152]],[[153,153]],[[154,152]],[[154,154]],[[143,143],143],[[142,142],142],[[144,144],144],[[145,145],145],[[142,123],142],[[143,123],143],[[144,123],144],[[174,190],174],[[190,190],190],[[143,136],136],[[142,137],137],[[145,137],137],[[142,252],252],[[145,252],252],[[144,138],138],0,[189],[[286,481],12],[[],[[104,[5]]]],[223,[[104,[5]]]],[[],5],[[],87],[[350,196],[[26,[5]]]],0,0,0,0,[12,[[26,[5]]]],[[170,12],[[26,[5]]]],[[189,12],[[26,[5]]]],[[190,12],[[26,[5]]]],[[191,12],[[26,[5]]]],[[193,12],[[26,[5]]]],[[195,12],[[26,[5]]]],[[196,12],[[26,[5]]]],[[197,12],[[26,[5]]]],[[198,12],[[26,[5]]]],[[199,12],[[26,[5]]]],[[200,12],[[26,[5]]]],[[44,12],[[26,[5]]]],[[201,12],[[26,[5]]]],[[202,12],[[26,[5]]]],[[146,12],[[26,[5]]]],[[204,12],[[26,[5]]]],[[205,12],[[26,[5]]]],[[206,12],[[26,[5]]]],[[187,12],[[26,[5]]]],[[207,12],[[26,[5]]]],[[82,12],[[26,[5]]]],[[208,12],[[26,[5]]]],[[209,12],[[26,[5]]]],[[211,12],[[26,[5]]]],[[212,12],[[26,[5]]]],[[213,12],[[26,[5]]]],[[214,12],[[26,[5]]]],[[215,12],[[26,[5]]]],[[216,12],[[26,[5]]]],[[135,12],[[26,[5]]]],[[217,12],[[26,[5]]]],[[218,12],[[26,[5]]]],[[219,12],[[26,[5]]]],[[182,12],[[26,[5]]]],[[183,12],[[26,[5]]]],[[184,12],[[26,[5]]]],[[142,12],[[26,[5]]]],[[136,12],[[26,[5]]]],[[137,12],[[26,[5]]]],[[143,12],[[26,[5]]]],[[144,12],[[26,[5]]]],[[138,12],[[26,[5]]]],[[139,12],[[26,[5]]]],[[140,12],[[26,[5]]]],[[141,12],[[26,[5]]]],[[151,12],[[26,[5]]]],[[153,12],[[26,[5]]]],[[154,12],[[26,[5]]]],[[213,174,137],[[26,[137]]]],[[22,22],14],0,0,[142],[136,136],[137,137],[143],[144],[145,145],[138,138],[139,139],[140,140],[141,141],0,[[[258,[428]],123],320],[[],28],[[123,123,123,123],170],[[],179],[[[258,[[104,[5]]]]],189],[[],359],[[161,5],165],[383,191],[[351,68],470],[335,173],[[351,68],468],[[],159],[[161,195],193],[12,196],[[161,482],297],[[196,197],198],[[],164],[[196,199],201],[[196,202],204],[39,247],[[431,333,152,152,262,[26,[139]],[26,[483]]],149],[12,208],[[[11,[484,10]]],168],[188,85],[[485,39],66],[[],39],[486,256],[[],22],[[487,488,[42,[24,10]],352],172],[[14,14],182],[[14,14,14],183],[[14,14,14,14],184],[[123,123],136],[[123,123,123],137],[[123,123,123,123],138],[489,221],[[222,490],222],[[150,150],139],[[150,150,150],140],[[150,150,150,150],141],[[152,152],151],[[152,152,152],153],[[152,152,152,152],154],[[],288],[[],160],[[247,491]],[[247,491,443]],[[],22],[[[44,[172]],136],82],[[487,488,352],172],[[485,375],66],[[22,492],344],[[],[[22,[255]]]],[12,22],[123,361],[[],[[22,[255]]]],[12,22],[470,26],[468,26],0,[39],[39,246],[[],181],[136,136],[137,137],[145,145],[138,138],[136,136],[137,137],[138,138],[182,182],[183,183],[184,184],[139],[140],[141],[151],[153],[154],0,[287,12],[[],169],[[],160],[[],160],[[],169],[[],160],[[],160],[[],169],[[],160],[[],169],[[],160],[[],160],[[],169],[[],160],[[],160],[[],169],[[],160],[[],160],[[],169],[[],160],[[],160],[[]],[[]],0,[[123,123,123,123,123,123],144],[[123,123,123,123,123,123],144],[[123,123,123,123,123,123],144],[288,[[13,[493]]]],[288,[[13,[493]]]],[288,[[13,[493]]]],[288],[288,[[13,[493]]]],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[494],[[247,39,12]],[[351,12,[0,[167,495,496,497]]]],[[247,39,12]],[[351,12,[0,[167,495,496,497]]]],[[247,39,12]],[[],168],0,[168],0,0,0,0,0,0,[156,68],[389,68],0,[[189,189],[[26,[345]]]],[[298,298],[[26,[345]]]],[[44,44],[[26,[345]]]],[[209,209],[[26,[345]]]],[[210,210],[[26,[345]]]],[[336,336],[[26,[345]]]],[[68,68],[[26,[345]]]],[[22,22],[[26,[345]]]],[[181,181],[[26,[345]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[[57,5],[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[[57,5],[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[[],[[372,[381]]]],[191],[193],[285,[[372,[381]]]],[54,[[372,[381]]]],[[51,297],[[26,[390]]]],[165,165],[193,14],0,0,[193,123],[193,123],[136,136],[139,139],[[136,136],123],[[139,139],150],[[123,123,123],144],[[123,123,123],144],[[123,123,123],144],[[123,123,123],144],[[123,123,123,123],144],[[123,123,123,123],144],[[123,123,123,123],144],0,0,0,[149,[[26,[236]]]],0,[149,152],0,[213,[[26,[151]]]],[213,26],[213,[[26,[151]]]],[149,152],0,0,[[],[[498,[22]]]],[[],499],[[],499],[[176,[501,[500,500]]],169],[[[44,[304]]],371],[[285,[44,[304]]],371],[[54,[44,[304]]],371],0,0,0,0,0,[288,[[13,[493]]]],0,0,[298,[[26,[262]]]],[149,[[26,[139]]]],0,0,0,0,0,0,[[[258,[428]],123],320],[[136,123],136],[[137,123],137],[[138,123],138],[[],[[13,[502]]]],[[],[[13,[502]]]],[149,503],0,0,[146],[187],[[[258,[286]]],14],[[28,[258,[286]]],14],[146,14],[187,14],[[85,449,334],14],[[39,[258,[286]]],14],0,0,[[[258,[286]],[26,[196]]],14],[[28,[258,[286]],[26,[196]]],14],[[39,[258,[286]],[26,[196]]],14],[146,161],[148,149],[148,149],[256,486],0,0,[[],142],[[],142],[[],136],[[],136],[[],137],[[],137],[[],143],[[],143],[[],144],[[],144],[[],145],[[],145],[[],138],[[],138],[[],139],[[],139],[[],140],[[],140],[[],141],[[],141],[[],151],[[],151],[[],153],[[],153],[[],154],[[],154],[[136,136],136],[[137,137],137],[[138,138],138],[[136,136],136],[[137,137],137],[[138,138],138],[[144,137],137],0,0,[213,144],[131],[131],[[22,131]],0,[[22,22],14],[288,[[13,[493]]]],[[]],[[]],[389,389],0,0,0,[39,247],[39,247],0,[135,123],[[174,252],123],0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[191,161],0,[191,123],0,[191,262],0,[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[191,161],0,[191,123],0,[191,262],0,[191,123],0,[191,262],0,[191,161],0,[149,[[26,[483]]]],0,[286,504],[[22,12]],[39,152],[[135,353]],[[142,353]],[[136,353]],[[137,353]],[[143,353]],[[144,353]],[[138,353]],[[139,353]],[[140,353]],[[141,353]],[[151,353]],[[153,353]],[[154,353]],0,[136,136],[137,137],[138,138],[[22,344,505]],[[22,344,344]],0,0,0,[[221,39,68],[[26,[57]]]],[[222,39],[[26,[57]]]],[195,[[26,[21]]]],[[],[[26,[21]]]],[196,[[26,[21]]]],[197,[[26,[21]]]],[199,[[26,[21]]]],[201,[[26,[21]]]],[202,[[26,[21]]]],[204,[[26,[21]]]],[209,[[26,[21]]]],[210,[[26,[21]]]],[211,[[26,[21]]]],[214,[[26,[21]]]],[135,[[26,[21]]]],[68,[[26,[21]]]],[[],63],[170,63],[189,63],[174,63],[190,63],[191,63],[192,63],[193,63],[194,63],[195,63],[196,63],[197,63],[198,63],[199,63],[200,63],[44,63],[201,63],[202,63],[146,63],[203,63],[204,63],[205,63],[206,63],[187,63],[207,63],[82,63],[208,63],[209,63],[210,63],[211,63],[212,63],[213,63],[214,63],[215,63],[216,63],[135,63],[68,63],[172,63],[181,63],[217,63],[218,63],[219,63],[220,63],[182,63],[183,63],[184,63],[142,63],[136,63],[137,63],[143,63],[144,63],[145,63],[138,63],[[221,39,68],[[26,[[246,[57]]]]]],[[222,39],[[26,[[246,[57]]]]]],[139,63],[140,63],[141,63],[151,63],[153,63],[154,63],[[[11,[10]]],64],[[[11,[170,10]]],64],[[[11,[189,10]]],64],[[[11,[174,10]]],64],[[[11,[190,10]]],64],[[[11,[191,10]]],64],[[[11,[192,10]]],64],[[[11,[193,10]]],64],[[[11,[194,10]]],64],[[[11,[195,10]]],64],[[[11,[196,10]]],64],[[[11,[197,10]]],64],[[[11,[198,10]]],64],[[[11,[199,10]]],64],[[[11,[200,10]]],64],[[[11,[44,10]]],64],[[[11,[201,10]]],64],[[[11,[202,10]]],64],[[[11,[146,10]]],64],[[[11,[203,10]]],64],[[[11,[204,10]]],64],[[[11,[205,10]]],64],[[[11,[206,10]]],64],[[[11,[187,10]]],64],[[[11,[207,10]]],64],[[[11,[82,10]]],64],[[[11,[208,10]]],64],[[[11,[209,10]]],64],[[[11,[210,10]]],64],[[[11,[211,10]]],64],[[[11,[212,10]]],64],[[[11,[213,10]]],64],[[[11,[214,10]]],64],[[[11,[215,10]]],64],[[[11,[216,10]]],64],[[[11,[135,10]]],64],[[[11,[68,10]]],64],[[[11,[172,10]]],64],[[[11,[181,10]]],64],[[[11,[217,10]]],64],[[[11,[218,10]]],64],[[[11,[219,10]]],64],[[[11,[220,10]]],64],[[[11,[182,10]]],64],[[[11,[183,10]]],64],[[[11,[184,10]]],64],[[[11,[142,10]]],64],[[[11,[136,10]]],64],[[[11,[137,10]]],64],[[[11,[143,10]]],64],[[[11,[144,10]]],64],[[[11,[145,10]]],64],[[[11,[138,10]]],64],[[[11,[139,10]]],64],[[[11,[140,10]]],64],[[[11,[141,10]]],64],[[[11,[151,10]]],64],[[[11,[153,10]]],64],[[[11,[154,10]]],64],[[170,57],[[26,[14]]]],[[189,57],[[26,[14]]]],[[174,57],[[26,[14]]]],[[190,57],[[26,[14]]]],[[191,57],[[26,[14]]]],[[192,57],[[26,[14]]]],[[193,57],[[26,[14]]]],[[194,57],[[26,[14]]]],[[195,57],[[26,[14]]]],[57,[[26,[14]]]],[[196,57],[[26,[14]]]],[[197,57],[[26,[14]]]],[[198,57],[[26,[14]]]],[[199,57],[[26,[14]]]],[[200,57],[[26,[14]]]],[[44,57],[[26,[14]]]],[[201,57],[[26,[14]]]],[[202,57],[[26,[14]]]],[[146,57],[[26,[14]]]],[[203,57],[[26,[14]]]],[[204,57],[[26,[14]]]],[[205,57],[[26,[14]]]],[[206,57],[[26,[14]]]],[[187,57],[[26,[14]]]],[[207,57],[[26,[14]]]],[[82,57],[[26,[14]]]],[[208,57],[[26,[14]]]],[[209,57],[[26,[14]]]],[[210,57],[[26,[14]]]],[[211,57],[[26,[14]]]],[[212,57],[[26,[14]]]],[[213,57],[[26,[14]]]],[[214,57],[[26,[14]]]],[[215,57],[[26,[14]]]],[[216,57],[[26,[14]]]],[[135,57],[[26,[14]]]],[[68,57],[[26,[14]]]],[[181,57],[[26,[14]]]],[[217,57],[[26,[14]]]],[[218,57],[[26,[14]]]],[[219,57],[[26,[14]]]],[[182,57],[[26,[14]]]],[[183,57],[[26,[14]]]],[[184,57],[[26,[14]]]],[[142,57],[[26,[14]]]],[[136,57],[[26,[14]]]],[[137,57],[[26,[14]]]],[[143,57],[[26,[14]]]],[[144,57],[[26,[14]]]],[[145,57],[[26,[14]]]],[[138,57],[[26,[14]]]],[[139,57],[[26,[14]]]],[[140,57],[[26,[14]]]],[[141,57],[[26,[14]]]],[[151,57],[[26,[14]]]],[[153,57],[[26,[14]]]],[[154,57],[[26,[14]]]],[[],65],[170,65],[189,65],[174,65],[190,65],[191,65],[192,65],[193,65],[194,65],[195,65],[196,65],[197,65],[198,65],[199,65],[200,65],[44,65],[201,65],[202,65],[146,65],[203,65],[204,65],[205,65],[206,65],[187,65],[207,65],[82,65],[208,65],[209,65],[210,65],[211,65],[212,65],[213,65],[214,65],[215,65],[216,65],[135,65],[68,65],[172,65],[181,65],[217,65],[218,65],[219,65],[220,65],[182,65],[183,65],[184,65],[142,65],[136,65],[137,65],[143,65],[144,65],[145,65],[138,65],[139,65],[140,65],[141,65],[151,65],[153,65],[154,65],0,[[221,39,68],[[26,[[246,[57]]]]]],[[222,39],[[26,[[246,[57]]]]]],[[]],[28,28],[[22,280],281],[28,28],[28,28],[[172,487]],[[172,152]],[[136,136],136],[[137,137],137],[[138,138],138],[[136,136],136],[[137,137],137],[[138,138],138],[191,123],0,[191,262],[146],[187],[146],[187],[[[258,[286]]]],[[28,[258,[286]]]],[[39,[258,[286]]]],[[[258,[286]],[26,[196]]]],[[28,[258,[286]],[26,[196]]]],[[39,[258,[286]],[26,[196]]]],[146,14],[164],[[136,136],136],[[136,123],136],[[137,137],137],[[137,123],137],[[138,123],138],[[138,138],138],[[139,150],139],[[139,139],139],[[140,140],140],[[140,150],140],[[141,141],141],[[141,150],141],[[151,152],151],[[151,151],151],[[153,153],153],[[153,152],153],[[154,154],154],[[154,152],154],[[136,136]],[[136,123]],[[137,123]],[[137,137]],[[138,123]],[[138,138]],[[139,139]],[[139,150]],[[140,140]],[[140,150]],[[141,141]],[[141,150]],[[151,152]],[[151,151]],[[153,153]],[[153,152]],[[154,154]],[[154,152]],[193,161],[193,123],[360,[[26,[123]]]],[52,26],[[148,431],[[26,[149]]]],[[85,[258,[286]]],[[26,[12]]]],[[221,39,68]],[[222,39]],[[85,12],14],[[256,[258,[257]]],[[26,[259]]]],[[284,5]],[[]],[[]],[389,389],[39,26],[[]],[66],[39,26],[[39,348],26],[39,26],[39,[[466,[[465,[68]]]]]],0,[[39,348],[[466,[[465,[68]]]]]],[288,[[13,[493]]]],[[168,39]],[57,14],[149,123],0,[149,123],0,[[52,12]],[193],[187],[187],[[]],[28],[39],[149,14],0,0,[[172,487]],[149,506],0,0,[39],[39,246],[[39,155]],[173],[288,[[13,[493]]]],[[173,507]],[[],[[372,[380]]]],[285,[[372,[380]]]],[54,[[372,[380]]]],[[51,297],[[26,[390]]]],[371,371],[[123,123,123],135],[[123,123,123],135],[[24,24,24],135],[[123,123,123,123],135],[[123,123,123,123],135],[[24,24,24,24],135],[174,137],[190,137],0,0,[[],322],[[190,145]],[[136,136],136],[[139,139],139],[[190,137,145]],[[190,137,123]],[[190,145]],[[190,137,123]],[[190,123]],[[190,123]],[[190,123]],[[190,123]],[[190,123]],[[190,123]],0,[136,136],[137,137],[138,138],[[142,12],137],[[143,12],136],[[144,12],138],[39],[[]],[28],[[165,39]],[[159,39]],[[168,39]],[39],[[158,39]],0,0,0,[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[[158,39]],[[]],[[],461],[179,179],[[]],[[],461],[179,179],[39],[[223,39],500],0,0,0,0,0,0,[149,262],[[148,431],262],[149,[[26,[262]]]],0,0,0,0,0,0,[[51,262],[[26,[390]]]],[[51,262],[[26,[390]]]],[[182,136,136],136],[[183,137,137],137],[[346,138,138],138],[[182,139,139],139],[[183,140,140],140],[[184,141,141],141],[[182,151,151],151],[[183,153,153],153],[[184,154,154],154],[287],[253],[[253,188]],[287],[253],[39],[[39,260]],[39],[[[258,[286]]]],[[28,[258,[286]]]],[[39,[258,[286]]]],[[[258,[286]],[26,[196]]]],[[28,[258,[286]],[26,[196]]]],[[39,[258,[286]],[26,[196]]]],[[],[[26,[446]]]],[[],13],[289,13],[170,13],[189,13],[174,13],[291,13],[190,13],[193,13],[195,13],[196,13],[295,13],[300,13],[197,13],[301,13],[198,13],[302,13],[199,13],[308,13],[201,13],[310,13],[202,13],[146,13],[204,13],[320,13],[322,13],[323,13],[226,13],[327,13],[209,13],[330,13],[331,13],[332,13],[283,13],[333,13],[334,13],[210,13],[85,13],[211,13],[286,13],[336,13],[337,13],[212,13],[135,13],[68,13],[220,13],[182,13],[183,13],[184,13],[142,13],[136,13],[137,13],[143,13],[144,13],[145,13],[138,13],[139,13],[140,13],[141,13],[151,13],[153,13],[154,13],[[],275],0,[[[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[170,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[],263],[[189,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[189,[258,[[104,[5]]]]]],[[174,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[190,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[191,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[360,123],[[26,[123]]]],[[192,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[193,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[194,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[195,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[196,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[197,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[198,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[52,44],[[199,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[200,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[44,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[201,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[202,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[146,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[203,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[204,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[205,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[206,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[187,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[207,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[82,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[208,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[209,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[210,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[211,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[212,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[213,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[214,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[215,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[216,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[135,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[68,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[172,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[181,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[217,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[218,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[219,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[220,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[182,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[183,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[184,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[142,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[136,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[137,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[143,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[144,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[145,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[138,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[139,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[140,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[141,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[151,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[153,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[154,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[288,[[13,[493]]]],[[135,123],135],[[146,147]],[[168,14]],[[456,348,491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[348,491,508]],[[348,491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[491,508]],[[348,491,508]],[[348,491,508]],[[135,123],135],[[]],[50],[245],[246],[[149,357]],[[149,291]],[[149,136]],[[149,14]],[[149,14]],[[193,161]],[[193,161]],[163,28],[163,158],[[28,163],28],[159],[[158,163],158],[[168,[11,[484,10]]]],[163,28],[163,158],[[28,163],28],[159],[[158,163],158],[[135,123],135],[[85,196],85],[341],[[256,[26,[454]]]],[152],[[223,152]],[152],[[50,152]],[[245,152]],[[246,152]],[[149,14]],[[173,[22,[67]]]],[[149,14]],[[193,195]],[[149,330]],[[168,348]],[262,[[372,[380]]]],[[285,262],[[372,[380]]]],[[54,262],[[372,[380]]]],[[51,262,297],[[26,[390]]]],[68],[262,[[372,[380]]]],[[285,262],[[372,[380]]]],[[54,262],[[372,[380]]]],[[51,262,297],[[26,[390]]]],[[149,283,139]],[[149,503]],[[135,123],135],[[165,152,123]],[[191,123]],[[191,262]],[[149,14]],[[149,506]],[[149,123,123]],[168,168],[158,158],[[28,167],28],[[149,[26,[262]]]],[[456,348,508]],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[[348,508]],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[508],[[348,508]],[[348,508]],[[149,87]],[52],[218],[262,[[372,[380]]]],[[285,262],[[372,[380]]]],[[54,262],[[372,[380]]]],[[51,262,297],[[26,[390]]]],[[191,161]],0,0,[[139,509]],[[139,510]],[[139,139]],[[139,150]],[[139,152]],[[139,511]],[[139,151]],[[139,24]],[[140,511]],[[140,150]],[[140,24]],[[140,510]],[[140,153]],[[140,509]],[[140,152]],[[140,140]],[[141,154]],[[141,24]],[[141,141]],[[141,509]],[[141,150]],[[141,511]],[[141,152]],[[141,510]],[[151,151]],[[151,509]],[[151,24]],[[151,150]],[[151,152]],[[151,510]],[[151,139]],[[151,511]],[[153,152]],[[153,509]],[[153,150]],[[153,511]],[[153,510]],[[153,140]],[[153,24]],[[153,153]],[[154,150]],[[154,24]],[[154,509]],[[154,141]],[[154,511]],[[154,152]],[[154,510]],[[154,154]],[[139,511]],[[139,152]],[[139,510]],[[139,24]],[[139,509]],[[139,139]],[[139,151]],[[139,150]],[[140,153]],[[140,511]],[[140,509]],[[140,510]],[[140,140]],[[140,24]],[[140,152]],[[140,150]],[[141,152]],[[141,150]],[[141,509]],[[141,24]],[[141,510]],[[141,141]],[[141,511]],[[141,154]],[[151,152]],[[151,510]],[[151,511]],[[151,509]],[[151,151]],[[151,24]],[[151,139]],[[151,150]],[[153,509]],[[153,152]],[[153,140]],[[153,150]],[[153,24]],[[153,153]],[[153,511]],[[153,510]],[[154,150]],[[154,24]],[[154,509]],[[154,152]],[[154,141]],[[154,510]],[[154,154]],[[154,511]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[52],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[354,355],[[247,39]],[157,168],[351],[354,355],[[247,39]],[351],[[],168],[170,136],[22,278],[172,136],0,0,[[145,145,123],145],0,[173,507],0,0,0,[22,[[26,[132]]]],0,0,[68,12],[[156,512],376],[[389,[0,[512,495,496]]],378],[66,376],[39,378],[66],[39,513],[[156,512],376],[[389,[0,[512,495,496]]],378],[66,376],[156,376],[389,378],[66,376],[39,378],0,[14,182],[14,183],[14,184],[123,136],[123,137],[123,138],[150,139],[150,140],[150,141],[152,151],[152,153],[152,154],0,0,0,0,[[28,162],28],[[158,162],158],0,0,0,0,0,[[371,262],371],[191,383],0,[44,298],[44,298],[[285,44],298],[[54,44],298],[51,298],[[[52,[51]],44],298],0,0,0,0,0,0,[262,223],0,[262,223],[[],[[372,[381]]]],[285,[[372,[381]]]],[54,[[372,[381]]]],[[51,297],[[26,[390]]]],0,0,[39,38],0,[22,12],[[142,142]],[[136,136],136],[[136,123],136],[[137,137],137],[[137,123],137],[[143,143]],[[144,144]],[[145,145],145],[[138,123],138],[[138,138],138],[[139,150],139],[[139,139],139],[[140,150],140],[[140,140],140],[[141,150],141],[[141,141],141],[[151,151],151],[[151,152],151],[[153,153],153],[[153,152],153],[[154,152],154],[[154,154],154],[[28,166],28],[[28,166],28],0,[[142,142]],[[136,123]],[[136,136]],[[137,123]],[[137,137]],[[143,143]],[[144,144]],[[138,123]],[[138,138]],[[139,150]],[[139,139]],[[140,150]],[[140,140]],[[141,150]],[[141,141]],[[151,151]],[[151,152]],[[153,153]],[[153,152]],[[154,154]],[[154,152]],[[143,143],143],[[142,142],142],[[144,144],144],[[],142],[[],142],[[],136],[[],136],[[],137],[[],137],[[],143],[[],143],[[],144],[[],144],[[],145],[[],145],[[],138],[[],138],[[],139],[[],139],[[],140],[[],140],[[],141],[[],141],[[],151],[[],151],[[],153],[[],153],[[],154],[[],154],[[192,12,12]],[[[258,[428]],123],320],[[[258,[428]],[258,[428]],123],322],0,0,0,0,[[[11,[57,10]]],[[13,[[11,[57,10]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[193,161],193],[[146,383,383]],0,0,0,0,0,0,0,0,[193,152],0,[149,5],0,0,[136],[137],[145],[138],[139],[140],[141],[151],[153],[154],[145],[68,21],[142],[143],[144],[142],[143],[144],[[145,220]],[[213,151],[[26,[136]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[351,351],[174],[144],[145,137],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[217],0,0,0,0,0,0,0,0,0,0,[[174,137],137],[[190,137],137],[[142,136],136],[[144,137],137],[[144,252],252],[[142,136],136],[[144,137],137],[[144,252],252],0,[[190,137,145]],[174,137],0,[174,252],[174,252],0,[142,142],[143,143],[144,144],[137,136],[138,137],[140,139],[141,140],[153,151],[154,153],[[22,344],14],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[428,[[13,[202,514]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[428,[[13,[327,514]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[22,[[13,[22]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[172,[[13,[425,32]]]],[[],[[13,[22,515]]]],[[],[[13,[[22,[255]],515]]]],[[],[[13,[[22,[255]],515]]]],[136,[[26,[136]]]],[137,[[26,[137]]]],[138,[[26,[138]]]],[[],[[13,[[498,[22]],515]]]],[22,[[13,[22]]]],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],5],[170,5],[189,5],[174,5],[190,5],[191,5],[192,5],[193,5],[194,5],[195,5],[196,5],[[],5],[197,5],[198,5],[[],5],[[],5],[199,5],[200,5],[[],5],[44,5],[201,5],[202,5],[146,5],[203,5],[[],5],[204,5],[205,5],[206,5],[187,5],[207,5],[[],5],[82,5],[[],5],[208,5],[[],5],[209,5],[210,5],[[],5],[211,5],[212,5],[213,5],[214,5],[215,5],[216,5],[135,5],[[],5],[68,5],[[],5],[[],5],[172,5],[181,5],[217,5],[218,5],[219,5],[220,5],[182,5],[183,5],[184,5],[142,5],[136,5],[137,5],[143,5],[144,5],[145,5],[138,5],[139,5],[140,5],[141,5],[151,5],[153,5],[154,5],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[309,44],[309,44],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],0,0,0,0,0,[[170,170],170],[[170,136],170],[191],[193],[22],[174,137],[190,137],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[28],[191],[[146,[42,[147,10]]]],[[214,123,123]],[[215,123,123]],[[216,123,123]],[287],[[149,139]],[[149,152,152]],[39],[[223,39]],[[348,491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[348,491,224]],[[348,491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[491,224]],[[348,491,224]],[[348,491,224]],[[247,39]],[[348,516]],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[[348,516]],[[348,516]],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[516],[[348,516]],[[348,516]],[[149,[26,[236]]]],[[149,14]],[173],[[149,262]],[[[50,[287]]]],[[191,383]],[[247,39]],[146,123],0,0,0,0,0,0,[195,12],[197,12],[199,12],[202,12],[209,12],[211,12],[214,12],[135,12],[195,5],[197,5],[199,5],[202,5],[209,5],[211,5],[214,5],[135,5],[195,517],[197,517],[199,517],[202,517],[209,517],[211,517],[214,517],[135,517],[[],518],[[168,5,42,19],[[13,[358]]]],0,0,[[213,174,136],[[26,[289]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],226],0,[451,44],[451,309],[22,12],[[34,21],309],[[85,449,334],[[42,[147,10]]]],[170,123],[149,123],0,0,0,0,[[181,24],181],[[[11,[254,10]]],164],[155],[155],[[389,155],389],[[320,123],320],[[322,123],322],[[297,482],297],[159,159],[[159,157],159],[[159,160],159],[159,159],[[159,157],159],[[159,160],159],[341,341],[[223,5],223],[12,290],[[371,262],371],[[371,262],371],[[165,152,123],165],[[190,145],190],[519,178],[168,168],[[160,519],160],[158,158],[[190,137],190],[165,165],[[158,162],158],[[158,162,162],158],[[158,162,162],158],[179,421],[[168,157],168],[[160,157],160],[[158,162,157],158],[[168,169],168],[[168,160],168],[[190,137],190],[[371,262],371],[[181,24],181],0,0,0,0,0,0,0,0,[[213,174,137],[[26,[137]]]],[[213,174,137],[[26,[136]]]],[191,161],0,[[520,39]],[[521,39]],[[384,39]],[[385,39]],[[386,39]],[[387,39]],[[388,39]],[142],[143],[144],[[135,522]],[[22,522]],[[142,522]],[[136,522]],[[137,522]],[[143,522]],[[144,522]],[[138,522]],[[139,522]],[[140,522]],[[141,522]],[[151,522]],[[153,522]],[[154,522]],[136],[137],[145],[138],[139],[140],[141],[151],[153],[154],[138,136],[141,139],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,136],[141,139],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,136],[141,139],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,136],[141,139],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[138,136],[141,139],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[136,136],[137,136],[138,136],[139,139],[140,139],[141,139],[151,151],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[136,136],[137,136],[138,136],[139,139],[140,139],[141,139],[151,151],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[145,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,136],[138,136],[140,139],[141,139],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[138,136],[141,139],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[136,136],[137,136],[138,136],[139,139],[140,139],[141,139],[151,151],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[136,136],[137,136],[138,136],[139,139],[140,139],[141,139],[151,151],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[136,137],[137,137],[138,137],[139,140],[140,140],[141,140],[151,153],[153,153],[154,153],[138,138],[141,141],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[136,138],[137,138],[138,138],[139,141],[140,141],[141,141],[151,154],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,136],[138,136],[140,139],[141,139],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],0,0,0,0,0,0,0,0,0,0,0,[138,136],[141,139],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[137,136],[138,136],[140,139],[141,139],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,136],[138,136],[140,139],[141,139],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,136],[138,136],[140,139],[141,139],[153,151],[154,151],[138,137],[141,140],[154,153],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[138,138],[141,141],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,137],[138,137],[140,140],[141,140],[153,153],[154,153],[138,138],[141,141],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],[137,138],[138,138],[140,141],[141,141],[153,154],[154,154],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[252,252],[236,236],[237,237],[238,238],[[419,419,123],14],[[175,175,123],14],[[418,418,123],14],[[252,252,123],14],[[523,523,262],14],[[524,524,262],14],[[233,233,262],14],[[234,234,262],14],[[235,235,262],14],[[239,239,262],14],[[236,236,262],14],[[237,237,262],14],[[238,238,262],14],0,[525],[526],[[418,418]],[[252,252],252],[[252,123],252],[[233,233]],[[234,234]],[[235,235]],[[239,239],239],[[236,262],236],[[236,236],236],[[237,237],237],[[237,262],237],[[238,262],238],[[238,238],238],[[418,418]],[[252,123]],[[252,252]],[[233,233]],[[234,234]],[[235,235]],[[236,262]],[[236,236]],[[237,237]],[[237,262]],[[238,262]],[[238,238]],[[233,233],233],[[418,418],418],[[234,234],234],[[235,235],235],[527],[[528,527]],[529,529],[[530,123]],0,[531,14],[346,14],[[252,252],123],[[239,239],262],[[236,236],262],[[237,237],262],[531,14],[346,14],[252,252],[237,237],[252],[237],[252,252],[237,237],[[531,57]],[[346,57]],[[419,57]],[[175,57]],[[418,57]],[[252,57]],[[523,57]],[[524,57]],[[233,57]],[[234,57]],[[235,57]],[[239,57]],[[236,57]],[[237,57]],[[238,57]],[532],[[533,532]],[[534,532]],[[534,532]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[531,1],[[],1],[[],1],[346,1],[[],1],[419,1],[[],1],[[],1],[175,1],[[],1],[[],1],[[],1],[[],1],[418,1],[[],1],[[],1],[252,1],[[],1],[[],1],[523,1],[524,1],[[],1],[[],1],[[],1],[233,1],[[],1],[234,1],[[],1],[[],1],[235,1],[[],1],[[],1],[[],1],[239,1],[[],1],[[],1],[[],1],[236,1],[237,1],[[],1],[[],1],[[],1],[238,1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[531,1],[[],1],[346,1],[419,1],[[],1],[175,1],[[],1],[[],1],[418,1],[[],1],[252,1],[523,1],[[],1],[[],1],[524,1],[[],1],[233,1],[234,1],[[],1],[[],1],[235,1],[239,1],[[],1],[236,1],[[],1],[237,1],[[],1],[[],1],[238,1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[418,234],[252,237],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[239,145],[236,139],[252,140],[237,140],[238,141],[233,143],[234,142],[235,144],[252],[233],[234],[235],[236],[237],[238],[535],[252],[233],[234],[235],[239],[236],[237],[238],[531,57],[346,57],[419,57],[175,57],[418,57],[252,57],[523,57],[524,57],[233,57],[234,57],[235,57],[239,57],[236,57],[237,57],[238,57],[531,57],[346,57],[419,57],[175,57],[418,57],[252,57],[523,57],[524,57],[233,57],[234,57],[235,57],[239,57],[236,57],[237,57],[238,57],[236,151],[252,153],[237,153],[238,154],[236,136],[237,137],[237,252],[238,138],0,0,[[],14],[[]],[[]],[[],14],[[12,14]],[[],12],[[],14],[[],14],[12],[[],536],[14],[[],12],[[]],[[],14],[[]],[[]],[12],[12],[[],14],[[],14],[12,14],[[]],[[531,531],531],[[346,346],346],[[531,531]],[[346,346]],[531,152],[346,152],[[531,531],531],[[346,346],346],0,[[531,531]],[[346,346]],[537,532],[533,532],[534,532],[538,532],[539,532],0,0,0,0,0,0,[[531,531],531],[[346,346],346],[[531,531]],[[346,346]],0,[[]],[[]],[[]],[[]],[535,540],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[541,540],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[542,533],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[535,543],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[541,543],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[542,534],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[252,252],[236,236],[237,237],[238,238],0,0,0,[[252,252,252],252],[[236,236,236],236],[[237,237,237],237],[[238,238,238],238],[[252,123,123],252],[[236,262,262],236],[[237,262,262],237],[[238,262,262],238],[[252,123],252],[[236,262],236],[[237,262],237],[[238,262],238],[[252,123],252],[[236,262],236],[[237,262],237],[[238,262],238],[539],[544,544],[545,545],[546,546],[535,535],[540,540],[547,547],[548,548],[549,549],[550,550],[551,551],[552,552],[553,553],[97,97],[554,554],[555,555],[556,556],[557,557],[558,558],[559,559],[560,560],[538,538],[561,561],[562,562],[563,563],[564,564],[530,530],[565,565],[566,566],[567,567],[568,568],[569,569],[532,532],[542,542],[570,570],[571,571],[539,539],[572,572],[573,573],[574,574],[526,526],[507,507],[531,531],[346,346],[419,419],[175,175],[418,418],[252,252],[523,523],[524,524],[233,233],[234,234],[235,235],[239,239],[236,236],[237,237],[238,238],[419,58],[175,58],[418,58],[252,58],[523,58],[524,58],[233,58],[234,58],[235,58],[236,58],[237,58],[238,58],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[531,[[11,[57,10]]]],[346,[[11,[57,10]]]],[419,[[11,[57,10]]]],[175,[[11,[57,10]]]],[418,[[11,[57,10]]]],[252,[[11,[57,10]]]],[523,[[11,[57,10]]]],[524,[[11,[57,10]]]],[233,[[11,[57,10]]]],[234,[[11,[57,10]]]],[235,[[11,[57,10]]]],[239,[[11,[57,10]]]],[236,[[11,[57,10]]]],[237,[[11,[57,10]]]],[238,[[11,[57,10]]]],[[535,535],345],[[97,97],345],[[252,252],531],[[236,236],182],[[237,237],183],[[238,238],184],[[252,252],531],[[236,236],182],[[237,237],183],[[238,238],184],[[252,252],531],[[236,236],182],[[237,237],183],[[238,238],184],[[252,252],531],[[236,236],182],[[237,237],183],[[238,238],184],[[252,252],531],[[236,236],182],[[237,237],183],[[238,238],184],[[252,252],531],[[236,236],182],[[237,237],183],[[238,238],184],[[418,12],252],[[233,12],236],[[234,12],237],[[235,12],238],[[418,12],252],[[233,12],236],[[234,12],237],[[235,12],238],0,0,0,0,0,0,0,0,[239,239],[[537,571],14],[[533,571],14],[[534,571],14],[[532,571],14],[573,14],[539,571],[[],532],[[252,252],252],[[237,237],237],0,0,0,0,[97,575],[[531,19],[[13,[358]]]],[[346,19],[[13,[358]]]],[[419,19],[[13,[358]]]],[[175,19],[[13,[358]]]],[[418,19],[[13,[358]]]],[[252,19],[[13,[358]]]],[[523,19],[[13,[358]]]],[[524,19],[[13,[358]]]],[[233,19],[[13,[358]]]],[[234,19],[[13,[358]]]],[[235,19],[[13,[358]]]],[[239,19],[[13,[358]]]],[[236,19],[[13,[358]]]],[[237,19],[[13,[358]]]],[[238,19],[[13,[358]]]],0,[[]],[[],544],[[],545],[[],546],[[],535],[[],548],[[],550],[[],537],[[],551],[[],552],[[],553],[[],97],[[],525],[[],554],[[],556],[[],557],[[],558],[[],559],[[],560],[[],561],[[],562],[[],563],[[],530],[[],565],[[],566],[[],567],[[],568],[[],532],[[],542],[[],570],[[],539],[[],572],[[],573],[[],526],[[],507],[[],531],[[],346],[[],419],[[],175],[[],418],[[],252],[[],523],[[],524],[[],233],[[],234],[[],235],[[],239],[[],236],[[],237],[[],238],[12],[545],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[540],[12],[12],[12],[12],[12],[543],[12],[12],[12],[12],[552],[12],[12],[12],[12],[12],[554],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[568],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[576],[12],[577],[12],[532],[12],[12],[12],[12],[12],[12],[12],[12],[12],[578],[12],[12],[12],[12],[419],[12],[175],[12],[12],[12],[252],[523],[12],[524],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[545],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[543],[12],[12],[12],[12],[12],[552],[12],[12],[12],[12],[12],[554],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[568],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[577],[12],[532],[12],[12],[12],[12],[12],[12],[12],[12],[578],[12],[12],[12],[12],[12],[419],[12],[12],[175],[12],[12],[252],[523],[12],[12],[524],[12],[12],[12],[12],[12],[12],[12],[[],[[13,[551]]]],[[],[[13,[553]]]],[[],[[13,[557]]]],[[],[[13,[560]]]],[[],[[13,[531]]]],[[],[[13,[346]]]],[[],[[13,[419]]]],[[],[[13,[175]]]],[[],[[13,[418]]]],[[],[[13,[252]]]],[[],[[13,[523]]]],[[],[[13,[524]]]],[[],[[13,[233]]]],[[],[[13,[234]]]],[[],[[13,[235]]]],[[],[[13,[239]]]],[[],[[13,[236]]]],[[],[[13,[237]]]],[[],[[13,[238]]]],[418,123],[233,262],[234,262],[235,262],[[252,252],123],[[236,236],262],[[237,237],262],[[238,238],262],[[252,252],123],[[236,236],262],[[237,237],262],[[238,238],262],[[252,252],252],[[252,123],252],[[239,262],239],[[236,262],236],[[236,236],236],[[237,237],237],[[237,262],237],[[238,238],238],[[238,262],238],[[252,252]],[[252,123]],[[236,262]],[[236,236]],[[237,237]],[[237,262]],[[238,238]],[[238,262]],[[236,236],233],[[237,237,237],234],[[238,238,238,238],235],[[252,252],123],[[239,239],262],[[236,236],262],[[237,237],262],[[238,238],262],[[252,252],252],[[236,236],236],[[237,237],237],[[238,238],238],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[262,262,262,262],239],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[538],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[569],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,0,[[262,262],236],[[262,262,262],237],[[262,262,262,262],238],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[3,14],[15],[15],[15],[15],[15],[15],[15],[15],0,0,0,[[535,535],14],[[553,553],14],[[97,97],14],[[556,556],14],[[557,557],14],[[560,560],14],[[571,571],14],[[531,531],14],[[346,346],14],[[419,419],14],[[175,175],14],[[418,418],14],[[252,252],14],[[523,523],14],[[524,524],14],[[233,233],14],[[234,234],14],[[235,235],14],[[239,239],14],[[236,236],14],[[237,237],14],[[238,238],14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[1,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[16,[[13,[17,18]]]],[252,252],[236,236],[237,237],[238,238],[[252,123],138],[[236,262],237],[[237,262],238],0,0,[[419,5],[[26,[57]]]],[[175,5],[[26,[57]]]],[[418,5],[[26,[57]]]],[[252,5],[[26,[57]]]],[[523,5],[[26,[57]]]],[[524,5],[[26,[57]]]],[[233,5],[[26,[57]]]],[[234,5],[[26,[57]]]],[[235,5],[[26,[57]]]],[[236,5],[[26,[57]]]],[[237,5],[[26,[57]]]],[[238,5],[[26,[57]]]],[[419,12],[[26,[57]]]],[[175,12],[[26,[57]]]],[[418,12],[[26,[57]]]],[[252,12],[[26,[57]]]],[[523,12],[[26,[57]]]],[[524,12],[[26,[57]]]],[[233,12],[[26,[57]]]],[[234,12],[[26,[57]]]],[[235,12],[[26,[57]]]],[[236,12],[[26,[57]]]],[[237,12],[[26,[57]]]],[[238,12],[[26,[57]]]],[[419,12],[[26,[57]]]],[[175,12],[[26,[57]]]],[[418,12],[[26,[57]]]],[[252,12],[[26,[57]]]],[[523,12],[[26,[57]]]],[[524,12],[[26,[57]]]],[[233,12],[[26,[57]]]],[[234,12],[[26,[57]]]],[[235,12],[[26,[57]]]],[[236,12],[[26,[57]]]],[[237,12],[[26,[57]]]],[[238,12],[[26,[57]]]],[419,12],[175,12],[418,12],[252,12],[523,12],[524,12],[233,12],[234,12],[235,12],[236,12],[237,12],[238,12],[[419,5],[[26,[57]]]],[[175,5],[[26,[57]]]],[[418,5],[[26,[57]]]],[[252,5],[[26,[57]]]],[[523,5],[[26,[57]]]],[[524,5],[[26,[57]]]],[[233,5],[[26,[57]]]],[[234,5],[[26,[57]]]],[[235,5],[[26,[57]]]],[[236,5],[[26,[57]]]],[[237,5],[[26,[57]]]],[[238,5],[[26,[57]]]],[540,[[26,[540]]]],[543,[[26,[543]]]],0,0,0,0,0,0,[252,252],[236,236],[237,237],[238,238],[[544,19],[[13,[358]]]],[[546,19],[[13,[358]]]],[[535,19],[[13,[358]]]],[[579,19],[[13,[358]]]],[[579,19],[[13,[358]]]],[[580,19],[[13,[358]]]],[[580,19],[[13,[358]]]],[[536,19],[[13,[358]]]],[[536,19],[[13,[358]]]],[[536,19],[[13,[358]]]],[[536,19],[[13,[358]]]],[[540,19],[[13,[358]]]],[[547,19],[[13,[358]]]],[[548,19],[[13,[358]]]],[[549,19],[[13,[358]]]],[[543,19],[[13,[358]]]],[[550,19],[[13,[358]]]],[[551,19],[[13,[358]]]],[[553,19],[[13,[358]]]],[[553,19],[[13,[358]]]],[[97,19],[[13,[358]]]],[[97,19],[[13,[358]]]],[[555,19],[[13,[358]]]],[[555,19],[[13,[358]]]],[[556,19],[[13,[358]]]],[[557,19],[[13,[358]]]],[[558,19],[[13,[358]]]],[[559,19],[[13,[358]]]],[[560,19],[[13,[358]]]],[[561,19],[[13,[358]]]],[[562,19],[[13,[358]]]],[[564,19],[[13,[358]]]],[[530,19],[[13,[358]]]],[[565,19],[[13,[358]]]],[[567,19],[[13,[358]]]],[[527,19],[[13,[358]]]],[[532,19],[[13,[358]]]],[[571,19],[[13,[358]]]],[[574,19],[[13,[358]]]],[[526,19],[[13,[358]]]],[[581,19],[[13,[358]]]],[[581,19],[[13,[358]]]],[[531,19],[[13,[358]]]],[[531,19],[[13,[358]]]],[[346,19],[[13,[358]]]],[[346,19],[[13,[358]]]],[[419,19],[[13,[358]]]],[[419,19],[[13,[358]]]],[[175,19],[[13,[358]]]],[[175,19],[[13,[358]]]],[[418,19],[[13,[358]]]],[[418,19],[[13,[358]]]],[[252,19],[[13,[358]]]],[[252,19],[[13,[358]]]],[[523,19],[[13,[358]]]],[[523,19],[[13,[358]]]],[[524,19],[[13,[358]]]],[[524,19],[[13,[358]]]],[[233,19],[[13,[358]]]],[[233,19],[[13,[358]]]],[[234,19],[[13,[358]]]],[[234,19],[[13,[358]]]],[[235,19],[[13,[358]]]],[[235,19],[[13,[358]]]],[[239,19],[[13,[358]]]],[[239,19],[[13,[358]]]],[[236,19],[[13,[358]]]],[[236,19],[[13,[358]]]],[[237,19],[[13,[358]]]],[[237,19],[[13,[358]]]],[[238,19],[[13,[358]]]],[[238,19],[[13,[358]]]],[[],538],0,[252,252],[236,236],[237,237],[238,238],[[]],[[]],[[]],[[],535],[417],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[]],[582,97],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[419,418],[142,418],[[]],[[],252],[[]],[420,252],[137,252],[[],252],[138,252],[[],252],[[]],[[]],[[]],[523,234],[[]],[524,235],[[]],[[]],[[],236],[[],236],[[]],[[],237],[[],237],[[]],[[],237],[[],238],[[],238],[[]],[239,238],[[],238],[[],238],[[],238],[[],238],[524,239],[123,419],[123,418],[262,523],[262,233],[262,234],[262,236],[[123,136],419],[[262,236],523],[[],252],[[],239],[[],236],[[],237],[[],238],[[137,123],175],[[137,123],418],[[237,262],524],[[237,262],234],[[237,262],235],[[237,262],239],[[136,136,136],419],[[252,252,252,252],175],[[252,252,252],418],[[236,236,236],523],[[237,237,237,237],524],[[236,236],233],[[237,237,237],234],[[238,238,238,238],235],[[],419],[[],175],[[],418],[[],523],[[],524],[[],233],[[],234],[[],235],[[],419],[[],175],[[],418],[[],523],[[],524],[[],233],[[],234],[[],235],[[],419],[[],175],[[],418],[[],523],[[],524],[[],233],[[],234],[[],235],[538,537],[538,537],[[[22,[[535,[538]]]]],542],[575,97],[575,97],[137,418],[236,233],[237,234],[238,235],[[220,123,123,123],418],[[220,262,262,262],234],[[220,262,262,262],235],[[220,262,262,262],239],[426],[426],[[]],[[]],[143,419],[143,418],[233,523],[233,234],[[143,136],419],[[233,236],523],[142,419],[142,175],[234,523],[234,524],[234,233],[234,235],[234,239],[[142,137],175],[[234,237],524],[418,419],[144,175],[144,418],[235,524],[235,234],[235,239],[[21,582],97],[145,175],[145,418],[239,524],[239,234],[239,235],[57,[[26,[419]]]],[57,[[26,[175]]]],[57,[[26,[418]]]],[57,[[26,[252]]]],[57,[[26,[523]]]],[57,[[26,[524]]]],[57,[[26,[233]]]],[57,[[26,[234]]]],[57,[[26,[235]]]],[57,[[26,[239]]]],[57,[[26,[236]]]],[57,[[26,[237]]]],[57,[[26,[238]]]],[145,567],[[237,237],239],[[236,236],239],[[237,237],239],[[145,137],175],[[239,237],524],[[239,237],235],[123,175],[123,418],[262,524],[262,234],[262,235],[262,239],[123,175],[123,418],[262,524],[262,234],[262,235],[262,239],[123,175],[123,418],[262,524],[262,234],[262,235],[262,239],[137,567],[136,419],[137,175],[136,418],[236,523],[237,524],[236,234],[237,235],[[236,262],233],[[136,123,136],419],[[136,123,136],418],[[236,262,236],523],[[236,262,236],234],[[137,145,137],175],[[237,239,237],524],[[237,239,237],235],[237,239],[[],252],[[],239],[[],236],[[],237],[[],238],[426],[5,[[13,[97]]]],[5,[[13,[97,583]]]],[137,567],[136,419],[137,175],[136,418],[236,523],[237,524],[236,234],[237,235],[238,239],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[[262,262,262,262],239],[571,152],0,0,0,[560,24],[557,26],[[584,560],24],[[585,557],26],[[586,557],26],[[587,538,571],26],[[537,571],26],[525,585],[[533,571],26],[[534,571],26],[[538,571],[[26,[24]]]],[[564,151],[[26,[571]]]],[570,542],[[572,97],[[26,[[22,[[535,[24]]]]]]]],[573,541],[557,44],[560,309],[557,309],[[570,97],[[22,[[535,[538]]]]]],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[5,26],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[560,24],[557,26],[535],[[584,560],24],[[586,557],26],[[587,538,571],26],[[537,571],26],[525,586],[[534,571],26],[[538,571],[[26,[24]]]],[507],[507],[507],[507],[507],[507],[531,59],[346,59],[419,59],[175,59],[418,59],[252,59],[523,59],[524,59],[233,59],[234,59],[235,59],[239,59],[236,59],[237,59],[238,59],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],[[],60],0,0,[553],[97],[556],[557],[560],[571],[531],[346],0,0,[[],97],[[],97],[528,97],[574,97],0,0,0,0,[97,[[26,[97]]]],[571,152],[[252,12]],[[236,12]],[[237,12]],[[238,12]],0,[[252,12]],[[236,12]],[[237,12]],[[238,12]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[570],[[],12],[[],12],[[],12],[[],12],[[],12],[573],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[507],[507],[507],[507],[[528,507]],[[527,507]],[507],[507],[507],0,[[529,507]],[[587,538,571],26],[[537,571],26],[[534,571],26],[[538,571,24],14],[[572,97,569],[[26,[569]]]],[573],[529],[529],[529],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[531,10]]],[[11,[1,10]]]],[[[11,[346,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[419,10]]],[[11,[1,10]]]],[[[11,[175,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[418,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[252,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[523,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[524,10]]],[[11,[1,10]]]],[[[11,[233,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[234,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[235,10]]],[[11,[1,10]]]],[[[11,[239,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[236,10]]],[[11,[1,10]]]],[[[11,[237,10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[238,10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[556,43],[567,190],[535],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[531,10]]],[[11,[57,10]]]],[[[11,[346,10]]],[[11,[57,10]]]],[[[11,[419,10]]],[[11,[57,10]]]],[[[11,[175,10]]],[[11,[57,10]]]],[[[11,[418,10]]],[[11,[57,10]]]],[[[11,[252,10]]],[[11,[57,10]]]],[[[11,[523,10]]],[[11,[57,10]]]],[[[11,[524,10]]],[[11,[57,10]]]],[[[11,[233,10]]],[[11,[57,10]]]],[[[11,[234,10]]],[[11,[57,10]]]],[[[11,[235,10]]],[[11,[57,10]]]],[[[11,[239,10]]],[[11,[57,10]]]],[[[11,[236,10]]],[[11,[57,10]]]],[[[11,[237,10]]],[[11,[57,10]]]],[[[11,[238,10]]],[[11,[57,10]]]],[[],[[463,[87]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[537,538],[573,572],[419,419],[175,175],[418,418],[523,523],[524,524],[233,233],[234,234],[235,235],[239,239],[[539,571],14],[419,14],[175,14],[418,14],[252,14],[523,14],[524,14],[233,14],[234,14],[235,14],[239,14],[236,14],[237,14],[238,14],[419,14],[175,14],[418,14],[252,14],[523,14],[524,14],[233,14],[234,14],[235,14],[239,14],[236,14],[237,14],[238,14],[252,531],[236,182],[237,183],[238,184],[239,14],[252,152],[236,152],[237,152],[238,152],[97,14],[252,14],[239,14],[236,14],[237,14],[238,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[587,538],260],[537,260],[533,260],[534,260],[538,260],0,0,[419,61],[175,61],[418,61],[252,61],[523,61],[524,61],[233,61],[234,61],[235,61],[236,61],[237,61],[238,61],[[587,538],260],[537,260],[534,260],[538,260],[[587,538,[23,[532]]],588],[[537,[23,[532]]],588],[[534,[23,[532]]],588],[[538,[23,[532]]],589],[539,590],[[[23,[532]]]],[[587,538,[23,[532]]],591],[[537,[23,[532]]],591],[[533,[23,[532]]]],[[533,[23,[532]]],591],[[534,[23,[532]]],591],[[534,[23,[532]]]],[[534,[23,[532]]]],[[538,[23,[532]]],592],[[539,532],593],[[150,150],139],[[150,150,150],140],[[150,150,150,150],141],0,[[539,571]],[539,42],0,0,[538,594],0,0,0,[252,123],[239,262],[236,262],[237,262],[238,262],[252,123],[239,262],[236,262],[237,262],[238,262],[252,123],[239,262],[236,262],[237,262],[238,262],[[252,252,123],252],[[239,239,262],239],[[236,236,262],236],[[237,237,262],237],[[238,238,262],238],[[557,31,42]],[[557,475],476],[[560,475],476],[[137,137,137],175],[[237,237,237],524],[[237,237,237],235],[[137,137,137],175],[[237,237,237],524],[[237,237,237],235],[[137,137,137],175],[[237,237,237],524],[[237,237,237],235],[[137,137,137],175],[[237,237,237],524],[[237,237,237],235],[507],[540,540],[543,543],[[136,136],143],[[137,137,137],142],[[252,252,252],418],[[138,138,138,138],144],0,0,0,0,[[252,252],252],[[236,236],236],[[237,237],237],[[238,238],238],0,[252,123],[236,262],[237,262],[238,262],0,0,[[252,252],252],[[236,236],236],[[237,237],237],[[238,238],238],[252,123],[236,262],[237,262],[238,262],[[419,419]],[[419,418]],[[419,142]],[[175,144]],[[175,175]],[[418,418]],[[418,137],137],[[418,419]],[[418,252]],[[418,123]],[[252,252],252],[[252,123],252],[[523,234]],[[523,523]],[[524,524]],[[524,235]],[[233,236]],[[233,233]],[[233,262]],[[234,237]],[[234,523]],[[234,262]],[[234,234]],[[235,235]],[[235,238]],[[235,262]],[[235,524]],[[239,239],239],[[239,262],239],[[239,237]],[[236,236],236],[[236,262],236],[[237,262],237],[[237,237],237],[[238,238],238],[[238,262],238],[[252,252,252],252],[[236,236,236],236],[[237,237,237],237],[[238,238,238],238],[[418,123]],[[418,418]],[[252,252]],[[252,123]],[[233,233]],[[233,262]],[[234,234]],[[234,262]],[[235,235]],[[235,262]],[[239,239]],[[236,262]],[[236,236]],[[237,237]],[[237,262]],[[238,238]],[[238,262]],[[233,233],233],[[418,418],418],[[234,234],234],[[235,235],235],[[239,239],239],[[418,123],418],[[233,262],233],[[234,262],234],[[235,262],235],[[233,236],236],[[418,137],137],[[234,237],237],[[239,237],237],[[418,252],252],[[235,238],238],[[]],[[],87],[[],87],[528,87],[527,5],[574,87],0,0,[[419,12],[[26,[5]]]],[[175,12],[[26,[5]]]],[[418,12],[[26,[5]]]],[[252,12],[[26,[5]]]],[[523,12],[[26,[5]]]],[[524,12],[[26,[5]]]],[[233,12],[[26,[5]]]],[[234,12],[[26,[5]]]],[[235,12],[[26,[5]]]],[[236,12],[[26,[5]]]],[[237,12],[[26,[5]]]],[[238,12],[[26,[5]]]],[418],[252,252],[233],[234],[235],[239,239],[236,236],[237,237],[238,238],[[],535],[[],587],[5,[[13,[553,555]]]],[[],97],[[[26,[87]]],556],[[[26,[87]]],557],[[[26,[87]]],560],[[594,26],538],[[[557,[559]]],562],[[151,136,[557,[559]]],564],[[123,136,123],530],[[],569],[[],528],[[],572],[[],573],[[],507],[[14,14,14],531],[[14,14,14,14],346],[[123,123,123],252],[[262,262],236],[[262,262,262],237],[[262,262,262,262],238],[595,569],[591,26],[588,26],[592,26],[589,26],[590,26],[593,26],0,0,0,[[],97],[252,252],[239,239],[236,236],[237,237],[238,238],[252,252],[236,236],[237,237],[238,238],[[556,40]],[531,531],[346,346],0,0,0,[[262,262,262,262,262,262],235],[[262,262,262,262,262,262],235],[[262,262,262,262,262,262],235],[[535,535],[[26,[345]]]],[[97,97],[[26,[345]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],0,0,0,[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],[236,236],[[236,236],262],[[262,262,262],235],[[262,262,262],235],[[262,262,262],235],[[262,262,262],235],[[262,262,262,262],235],[[262,262,262,262],235],[[262,262,262,262],235],0,[[548,[557,[547]],123]],[[252,123],252],[[236,262],236],[[237,262],237],[[238,262],238],[[],419],[[],175],[[],418],[[],418],[[],252],[[],252],[[],523],[[],524],[[],233],[[],233],[[],234],[[],234],[[],235],[[],235],[[],239],[[],239],[[],236],[[],236],[[],237],[[],237],[[],238],[[],238],[[252,252],252],[[236,236],236],[[237,237],237],[[238,238],238],[[252,252],252],[[236,236],236],[[237,237],237],[[238,238],238],[[235,237],237],[131],[131],0,[[123,123,123,123],145],0,0,0,0,[97,582],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[252,252],[236,236],[237,237],[238,238],[531,63],[346,63],[419,63],[175,63],[418,63],[252,63],[523,63],[524,63],[233,63],[234,63],[235,63],[239,63],[236,63],[237,63],[238,63],[[[11,[531,10]]],64],[[[11,[346,10]]],64],[[[11,[419,10]]],64],[[[11,[175,10]]],64],[[[11,[418,10]]],64],[[[11,[252,10]]],64],[[[11,[523,10]]],64],[[[11,[524,10]]],64],[[[11,[233,10]]],64],[[[11,[234,10]]],64],[[[11,[235,10]]],64],[[[11,[239,10]]],64],[[[11,[236,10]]],64],[[[11,[237,10]]],64],[[[11,[238,10]]],64],[[419,57],[[26,[14]]]],[[175,57],[[26,[14]]]],[[418,57],[[26,[14]]]],[[252,57],[[26,[14]]]],[[523,57],[[26,[14]]]],[[524,57],[[26,[14]]]],[[233,57],[[26,[14]]]],[[234,57],[[26,[14]]]],[[235,57],[[26,[14]]]],[[239,57],[[26,[14]]]],[[236,57],[[26,[14]]]],[[237,57],[[26,[14]]]],[[238,57],[[26,[14]]]],[531,65],[346,65],[419,65],[175,65],[418,65],[252,65],[523,65],[524,65],[233,65],[234,65],[235,65],[239,65],[236,65],[237,65],[238,65],[[252,252],252],[[236,236],236],[[237,237],237],[[238,238],238],[[252,252],252],[[236,236],236],[[237,237],237],[[238,238],238],[[252,123],252],[[252,252],252],[[236,262],236],[[236,236],236],[[237,237],237],[[237,262],237],[[238,262],238],[[238,238],238],[[252,123]],[[252,252]],[[236,262]],[[236,236]],[[237,262]],[[237,237]],[[238,262]],[[238,238]],[[587,538,571],26],[[537,571],26],[525,[[11,[596,10]]]],[[534,571],26],[[538,571,[26,[24]]],14],[[572,97],[[26,[569]]]],0,0,0,[[236,236],236],0,[252,252],[236,236],[237,237],[238,238],[[418,12],252],[[233,12],236],[[234,12],237],[[235,12],238],[507,[[13,[32]]]],[[529,507],[[13,[32]]]],[[528,507],[[13,[32]]]],[[527,507],[[13,[32]]]],0,[507,[[13,[32]]]],[507,[[13,[32]]]],0,[[531,252,252],252],[[182,236,236],236],[[183,237,237],237],[[184,238,238],238],[[548,549]],[[566,123]],[551,13],[553,13],[531,13],[346,13],[419,13],[175,13],[418,13],[252,13],[523,13],[524,13],[233,13],[234,13],[235,13],[239,13],[236,13],[237,13],[238,13],[[564,151,[26,[571]]]],[[531,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[346,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[419,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[175,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[418,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[252,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[523,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[524,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[233,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[234,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[235,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[239,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[236,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[237,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[[238,[11,[57,10]]],[[13,[[11,[57,10]]]]]],[252,252],[236,236],[237,237],[238,238],0,[[239,239,262],239],[14,531],[14,346],[123,252],[262,236],[262,237],[262,238],0,0,0,[[418,418]],[[252,252],252],[[252,123],252],[[233,233]],[[234,234]],[[235,235]],[[239,239],239],[[236,262],236],[[236,236],236],[[237,237],237],[[237,262],237],[[238,238],238],[[238,262],238],[[418,418]],[[252,123]],[[252,252]],[[233,233]],[[234,234]],[[235,235]],[[236,262]],[[236,236]],[[237,262]],[[237,237]],[[238,238]],[[238,262]],[[233,233],233],[[418,418],418],[[234,234],234],[[235,235],235],[[],418],[[],418],[[],252],[[],252],[[],233],[[],233],[[],234],[[],234],[[],235],[[],235],[[],239],[[],239],[[],236],[[],236],[[],237],[[],237],[[],238],[[],238],0,[[],527],[527,527],0,0,0,0,[97,21],[252],[239],[236],[237],[238],[239],[419],[175],[418],[523],[524],[233],[234],[235],[419],[175],[418],[523],[524],[233],[234],[235],[[239,220]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[175],[524],[235],[239,237],[97,[[13,[5,597]]]],[[],87],[[],87],[[],87],[[],87],[[],87],[97,87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[],87],[[419,136],136],[[418,136],136],[[523,236],236],[[234,236],236],[[175,137],137],[[524,237],237],[[235,237],237],[[175,252],252],[[419,136],136],[[418,136],136],[[523,236],236],[[234,236],236],[[175,137],137],[[524,237],237],[[235,237],237],[[175,252],252],0,0,0,0,0,[418,418],[233,233],[234,234],[235,235],0,[252,136],[237,236],[238,237],[535,[[13,[540,579]]]],[535,[[13,[543,580]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[5,[[13,[553]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[525,[[26,[585]]]],[570,[[13,[542,581]]]],[573,[[26,[541]]]],[[570,97],[[13,[[22,[[535,[538]]]],581]]]],[525,[[26,[586]]]],[570,[[13,[581]]]],[573,[[13,[581]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[252,[[26,[252]]]],[236,[[26,[236]]]],[237,[[26,[237]]]],[238,[[26,[238]]]],[525,[[26,[[11,[596,10]]]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[531,5],[346,5],[419,5],[175,5],[418,5],[252,5],[523,5],[524,5],[233,5],[234,5],[235,5],[239,5],[236,5],[237,5],[238,5],[560,557],0,[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[[],97],[557,560],[573,572],0,0,0,0,[573,572],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[152,152],151],[[152,152,152],153],[[152,152,152,152],154],0,0,0,[[123,123],136],[[123,123,123],137],[[123,123,123],252],[[123,123,123,123],138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],529],[[],97],[[123,123,136,123],530],[419],[175],[418],[523],[524],[233],[234],[235],[252],[239],[236],[237],[238],[[]],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[[]],[252,136],[236,236],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[[]],[252,136],[236,236],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[239,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,136],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[[]],[252,136],[236,236],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[[]],[252,136],[236,236],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[[]],[252,252],[236,237],[237,237],[238,237],[[]],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[[]],[252,138],[236,238],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,136],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[252,136],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,136],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,136],[237,236],[238,236],[[]],[238,237],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,252],[237,237],[238,237],[[]],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],[[]],[[]],[252,138],[237,238],[238,238],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[136,136],143],[[137,137,137],142],[[252,252,252],418],[[138,138,138,138],144],0,0,[[123,123,123,123],145],0,0,[[123,123],136],[[123,123,123],137],[[123,123,123],252],[[123,123,123,123],138],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[236,236],233],[[237,237,237],234],[[238,238,238,238],235],[[262,262,262,262],239],[[262,262],236],[[262,262,262],237],[[262,262,262,262],238],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[150,150],139],[[150,150,150],140],[[150,150,150,150],141],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[152,152],151],[[152,152,152],153],[[152,152,152,152],154],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[412,412],[405,405],[410,410],[407,407],[408,408],[598,598],[406,406],[411,411],[409,409],[404,404],[403,403],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],412],[[],405],[[],410],[[],407],[[],408],[[],598],[[],406],[[],411],[[],409],[[],404],[[],403],0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[136,410],[[412,19],[[13,[358]]]],[[405,19],[[13,[358]]]],[[410,19],[[13,[358]]]],[[407,19],[[13,[358]]]],[[408,19],[[13,[358]]]],[[598,19],[[13,[358]]]],[[406,19],[[13,[358]]]],[[411,19],[[13,[358]]]],[[409,19],[[13,[358]]]],[[404,19],[[13,[358]]]],[[403,19],[[13,[358]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[409,411],[[]],[[]],[[]],[[]],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[39],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[123,412],[[123,123,123],405],[136,410],[[123,12],411],[123,409],0,0,0,0,0,0,[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[599],[393,393],[[[599,[13]]]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[600,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[601,28]],0,[12],[12],[602],[12],[12],[12],[12],[602],[12],[12],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],0,[[[49,[[54,[55]]]],[26,[[49,[602]]]]]],[603],0,[[603,335]],[603],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[39],[[[26,[[50,[602]]]],351]],[[]],[[]],[[]],[[]],[602,507],0,0,0,0,0,0,0,0,0,0,0,0,0,[[604,605],604],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[[],3],[[604,605],604],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[606,28]],[607,607],[608,608],[609,609],[[]],[[]],[[]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],[[],[[11,[9,10]]]],0,[[],[[612,[[0,[610,611]]]]]],[[],608],[[],609],[[],613],[12],[12],[12],[12],[12],[12],[12],[613],[12],[614],[12],[12],[12],[12],[12],[12],[613],[12],[12],[614],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[12],[12],[12],[3,14],[15],[[607,607],14],[1,14],[[],14],[[607,19],20],[[608,19],20],[[609,19],20],[[]],[[]],[[]],[5,607],[[]],[[]],[[]],[[]],[[]],[39],[39],[39],[39],[[],21],[[[49,[613]],[50,[148]],[351,[146]],[49,[[187,[209]]]],[50,[615]],[49,[608]],[50,[616]]]],[607],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[5,607],0,[[24,24]],[[24,24]],[[24,24]],[24],[24],[24],0,[[39,617,618,607]],0,[[604,605],604],[[]],[[]],[[]],[[604,605],604],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[[90,[[42,[[44,[29]]]]]],[50,[616]],[26,[[50,[614]]]],[26,[[49,[48]]]],[93,[[92,[29]]]],[49,[[52,[29]]]]]],[[[49,[48]],[50,[619]],[49,[148]],[351,[216,[620,[56]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[39,618,607]],[[608,605],604],0,[[607,5],607],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[621,28]],[[[90,[14]],[50,[616]],[50,[622]],[49,[91]],[49,[[187,[209]]]],[50,[75]]]],[[],623],[[],622],[12],[12],[12],[622],[12],[12],[12],[622],[[]],[[]],[[]],[12],[12],[12],[[[90,[623]],[50,[616]],[50,[622]],[49,[624]],[49,[91]]]],[[]],[[]],[[]],[39],[39],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[],3],[[]],[[]],[[]],[[]],[[625,28]],[84,84],[[]],[[],[[11,[9,10]]]],[12],[12],[12],[12],[[],[[13,[84]]]],[[]],[[]],[12],[12],[3,14],[15],[[84,84],14],[1,14],[[],14],[[84,19],20],[[]],[[]],[12,[[26,[84]]]],[[],21],[84],[84,12],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[24,24]],[24],[[]],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],26],[[],26],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[626,57]],[[],1],[[],1],[626,1],[[],1],[[],1],[[],1],[[],1],[[],1],[626,1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[626,57],[626,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[627,28]],[[66,[351,[68,[620,[626]]]]]],[628,628],[626,58],[[]],[[],[[11,[9,10]]]],[626,[[11,[57]]]],0,[[37,38]],[[],628],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[626,5],[[26,[57]]]],[[626,12],[[26,[57]]]],[[626,12],[[26,[57]]]],[626,12],[[626,5],[[26,[57]]]],[[]],[[]],[[]],[[]],[[]],[[]],[39],0,[[]],[5,26],[5,26],[626,59],[[],60],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[626]]],[[11,[1]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[[11,[626]]],[[11,[57]]]],[[]],[[]],[[]],[[]],[[]],[626,61],0,[39],0,0,0,0,[[626,12],[[26,[5]]]],[5,[[13,[57,62]]]],[5,[[13,[57,62]]]],0,0,[[24,24]],[24],[626,63],[[[11,[626]]],64],[[626,57],[[26,[14]]]],[626,65],[[626,[11,[57]]],[[13,[[11,[57]]]]]],0,[[66,[49,[48]],[49,[326]],603]],0,[[39,617,618,607]],[[39,617,618,607]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],25],[[],59],[626,5],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[2],[[]],[[]],0,0,[12],[12],[[]],[12],[[]],0,0,[629],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],0,0,0,0,0,0,0,[[39,617,618,607]],[[],13],[[],13],[[],25],[[],26],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],630],[[],631],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[39],[39],0,0,[632],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[618,557,81,82,633]],0,0,0,0,0,0,[[39,617,618,607]],[[39,617,618,607,12]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[634,634],[[]],[[],[[11,[9,10]]]],0,0,0,0,[[],634],[[],635],[12],[12],[635],[12],[12],[635],[12],[12],[[]],[[]],[[]],[12],[12],[12],[3,14],[[634,634],14],[1,14],[[],14],[[]],[[]],[[]],[39],[39],0,[[],12],[[],12],[[],12],[[]],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[]],0,0,0,0,0,[[24,24]],[24],0,0,[[39,617,618,607]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[636,618,14]],[12],[12],[12],[12],[[]],[[]],[12],[12],[401,87],[[]],[[]],0,0,[[637,638],[[13,[[26,[401]]]]]],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],0,0,[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],26],[[],26],[[]],[[]],[[636,618,14]],[[618,48]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[[]],[[]],[[]],[[]],[[639,28]],[640,640],[[]],[[],[[11,[9,10]]]],[[],640],[12],[12],[12],[12],[[]],[[]],[12],[12],[3,14],[[640,640],14],[1,14],[[],14],[[]],[[]],[39],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[66,[50,[616]],[49,[48]],[49,[91]],[351,[36]],[49,[[52,[312]]]],[50,[640]],603]],[39],[[66,[351,[146]]]],[[24,24]],[24],[[]],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[66,[351,[146]],[50,[640]]]],[[],26],[[],26],[[]],[[]],0,0,0,0,0,[[]],[618,605],[[114,5],605],0,[[],1],[[],1],[2],[[641,118],641],[[]],[[]],0,[12],[12],[[]],[12],[[641,14],641],0,[[]],[[],12],[[]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[[]],[[641,642],641],0,[[641,643],641],0,[[[258,[644]]],641],[[641,[26,[118]]],641],0,[[641,[26,[118]]],641],0,[[641,642],641],0,[[641,645],641],0,[[641,618],605],0,[[117,[258,[646]]],641],[[],13],[[],13],[[],25],[[641,618],605],[[],26],[[]],[[641,14],641],0,0,0,[[],1],[[],1],[[],1],[[],1],[2],[2],0,[[647,618],648],0,[[647,14],647],0,[[647,123],647],0,[[]],[[]],[[]],[[]],0,[12],[12],[12],[12],[[]],[[]],[12],[12],[[648,618],605],0,[[]],[[]],[[],12],[[],12],[[]],[[]],[[[11,[10]]],[[11,[1,10]]]],[[[11,[10]]],[[11,[1,10]]]],[22,[[22,[1]]]],[22,[[22,[1]]]],[23,[[23,[1]]]],[23,[[23,[1]]]],[[]],[[]],[[647,642],647],0,[118,647],[[647,642],647],0,[[647,649],650],[[647,618,155],651],[[647,618,[11,[155]]],651],0,0,[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],26],[[],26],[[]],[[]]],"p":[[8,"Any"],[3,"RenderAssets"],[8,"DynEq"],[4,"RollbackStage"],[15,"str"],[4,"EngineState"],[4,"InGameState"],[4,"GameEditorState"],[8,"TypeData"],[3,"Global"],[3,"Box"],[15,"usize"],[4,"Result"],[15,"bool"],[8,"Hasher"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"Arc"],[3,"Rc"],[15,"u8"],[3,"TypeId"],[4,"Option"],[3,"JumpyAssetPlugin"],[3,"App"],[3,"EguiFont"],[3,"EguiFontLoader"],[3,"LoadContext"],[3,"Error"],[6,"BoxedFuture"],[3,"Uuid"],[8,"Asset"],[3,"AssetHandle"],[3,"Components"],[3,"Storages"],[3,"World"],[3,"Path"],[3,"PathBuf"],[3,"Vec"],[3,"AssetPath"],[3,"Handle"],[3,"JumpyAudioPlugin"],[3,"CurrentMusic"],[3,"ShuffledPlaylist"],[3,"GameMeta"],[3,"Res"],[3,"ResMut"],[3,"AudioInstance"],[3,"Assets"],[3,"MusicChannel"],[3,"AudioChannel"],[3,"EffectsChannel"],[3,"MenuCamera"],[8,"Reflect"],[3,"DynamicStruct"],[4,"TypeInfo"],[3,"TypeRegistration"],[3,"FieldIter"],[4,"ReflectPathError"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectRef"],[3,"Commands"],[3,"CoreMeta"],[3,"Entity"],[3,"Command"],[3,"EngineConfig"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"JumpyDebugPlugin"],[3,"WorldInspectorEnabled"],[3,"JumpyPlayerInputPlugin"],[4,"PlayerAction"],[3,"JumpyLinesPlugin"],[3,"JumpyLoadingPlugin"],[3,"GameMetaHandle"],[3,"PlayerMeta"],[3,"TextureAtlas"],[3,"GameLoader"],[4,"MenuAction"],[3,"InputMap"],[3,"JumpyLocalizationPlugin"],[3,"String"],[3,"Locale"],[3,"BundleAsset"],[3,"Local"],[3,"Localization"],[4,"AssetEvent"],[3,"EventReader"],[3,"MainMenuMeta"],[3,"ImageMeta"],[3,"Color32"],[3,"Ulid"],[3,"AssetLoader"],[3,"TranslationsMeta"],[3,"Settings"],[3,"PlayerControlMethods"],[3,"PlayerControls"],[3,"Storage"],[4,"Cow"],[3,"ButtonStylesMeta"],[3,"UiThemeEditorIcons"],[3,"UIThemeMeta"],[3,"UiThemeEditor"],[3,"UiThemeColors"],[3,"UiThemeWidgets"],[3,"WidgetStyle"],[3,"FontStylesMeta"],[3,"FontFamily"],[3,"FontMeta"],[3,"HudThemeMeta"],[3,"PanelThemeMeta"],[3,"ButtonThemeMeta"],[3,"BorderImageMeta"],[3,"ProgressBarMeta"],[3,"ButtonBordersMeta"],[3,"MarginMeta"],[3,"ColorMeta"],[15,"f32"],[3,"FontId"],[3,"Widgets"],[3,"WidgetVisuals"],[3,"JumpyPlatformPlugin"],[4,"StorageError"],[3,"Error"],[3,"SaveTask"],[3,"Demand"],[8,"Error"],[4,"StorageRequest"],[3,"Sender"],[4,"Color"],[3,"Vec2"],[3,"Vec3"],[3,"Vec4"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[3,"Mat3"],[3,"Mat2"],[3,"Mat4"],[3,"Quat"],[3,"ActionState"],[3,"ActionData"],[3,"Windows"],[3,"Window"],[15,"i32"],[3,"UVec2"],[15,"u32"],[3,"UVec3"],[3,"UVec4"],[8,"FnOnce"],[3,"ChildBuilder"],[8,"IntoSystemDescriptor"],[3,"Schedule"],[3,"StateTransitionStage"],[3,"SystemSet"],[3,"Duration"],[8,"StageLabel"],[8,"Stage"],[3,"AssetServer"],[3,"FixedTimestepStage"],[8,"AppLabel"],[8,"Fn"],[3,"SystemStage"],[3,"RunCriteriaDescriptor"],[3,"Rect"],[3,"TextureAtlasBuilder"],[3,"Image"],[3,"GameSession"],[3,"GlobalTransform"],[3,"Affine3A"],[8,"RunCriteriaLabel"],[8,"AsSystemLabel"],[3,"SystemDescriptor"],[3,"ConditionSet"],[8,"SystemLabel"],[3,"RenderLayers"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[4,"CompositeAlphaMode"],[3,"Touches"],[3,"Input"],[8,"IntoIterator"],[3,"Name"],[3,"Transform"],[3,"Time"],[3,"Children"],[3,"Timer"],[3,"Parent"],[4,"TimerMode"],[3,"Gamepad"],[4,"GamepadEventType"],[3,"GamepadEvent"],[4,"GamepadButtonType"],[3,"ColorMaterial"],[3,"GamepadButton"],[4,"GamepadAxisType"],[3,"ClearColor"],[3,"GamepadAxis"],[3,"Camera2d"],[3,"Camera3d"],[3,"Sprite"],[3,"TextureAtlasSprite"],[4,"KeyCode"],[3,"ScanCode"],[4,"MouseButton"],[3,"TouchInput"],[3,"Camera"],[4,"Projection"],[3,"PerspectiveProjection"],[3,"OrthographicProjection"],[3,"Visibility"],[3,"ComputedVisibility"],[3,"Msaa"],[4,"EulerRot"],[3,"ReflectComponent"],[3,"ReflectResource"],[3,"FixedTimestep"],[3,"Access"],[3,"Archetypes"],[3,"VirtualDPad"],[3,"BindGroupLayout"],[3,"RenderDevice"],[3,"FallbackImage"],[3,"PreparedBindGroup"],[4,"AsBindGroupError"],[3,"ColorMaterialUniform"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"DQuat"],[3,"BorrowedFd"],[3,"FilelikeView"],[3,"StageLabelId"],[3,"SystemLabelId"],[3,"RunCriteriaLabelId"],[3,"NonSendMut"],[3,"Mut"],[3,"QueryState"],[3,"SocketlikeView"],[4,"CoreStage"],[3,"StartupSchedule"],[4,"StartupStage"],[3,"Vec3A"],[3,"EventWriter"],[8,"AssetIo"],[19,"MaybeUninit"],[3,"Mesh"],[3,"MeshVertexAttributeId"],[8,"Into"],[4,"VertexAttributeValues"],[8,"Iterator"],[3,"DualAxisData"],[15,"f64"],[3,"PluginGroupBuilder"],[3,"DefaultPlugins"],[3,"MinimalPlugins"],[3,"GilrsPlugin"],[3,"JumpyCoreAssetsPlugin"],[3,"WindowPlugin"],[3,"CorePlugin"],[3,"ValidParentCheckPlugin"],[3,"TransformPlugin"],[3,"HierarchyPlugin"],[3,"AudioPlugin"],[3,"AssetPlugin"],[3,"InputManagerPlugin"],[3,"ImagePlugin"],[3,"Bundles"],[3,"NonZeroU64"],[8,"Filter"],[3,"Metadata"],[3,"Interest"],[3,"WorldCell"],[4,"MonitorSelection"],[3,"DynamicAudioChannels"],[3,"DynamicAudioChannel"],[4,"UserInput"],[3,"Events"],[3,"State"],[3,"Ray"],[3,"TaskPoolOptions"],[4,"CursorIcon"],[3,"AppTypeRegistry"],[3,"TransformBundle"],[3,"CurrentState"],[3,"CursorMoved"],[3,"NextState"],[3,"AudioTween"],[4,"PlaybackState"],[3,"ElementMeta"],[3,"CursorEntered"],[3,"CursorLeft"],[3,"ReceivedCharacter"],[3,"AudioSettings"],[3,"AudioSource"],[3,"SpriteBundle"],[3,"SpriteSheetBundle"],[3,"ChangeTrackers"],[4,"FileDragAndDrop"],[3,"HandleUntyped"],[3,"WindowMoved"],[4,"BuiltinElementKind"],[3,"MapMeta"],[3,"BackgroundMeta"],[3,"ActionStateDriver"],[3,"ParallaxLayerMeta"],[3,"MapLayerMeta"],[4,"MapLayerKind"],[3,"MapTileLayer"],[3,"ElementLayer"],[3,"SingleAxis"],[3,"ElementSpawn"],[3,"DualAxis"],[3,"MapTileMeta"],[3,"PlayerStats"],[3,"PlayerSounds"],[3,"CoreMetaArc"],[4,"MouseWheelAxisType"],[3,"CameraMeta"],[3,"PhysicsMeta"],[4,"WindowMode"],[4,"WindowPosition"],[4,"MouseWheelDirection"],[3,"WindowDescriptor"],[4,"ClashStrategy"],[3,"GameSessionInfo"],[3,"PhantomData"],[4,"Modifier"],[3,"ReflectSerialize"],[3,"ReflectDeserialize"],[3,"ReflectDefault"],[3,"Shader"],[3,"DynamicTupleStruct"],[3,"DynamicEnum"],[3,"Id"],[4,"Ordering"],[3,"BVec4A"],[3,"ParallelCommands"],[3,"ComponentId"],[3,"Aabb"],[3,"Gamepads"],[3,"Query"],[4,"TextureFormat"],[3,"Reader"],[3,"FixedTimesteps"],[3,"FixedTimestepInfo"],[3,"Current"],[4,"CursorGrabMode"],[3,"Error"],[3,"Lazy"],[3,"Axis"],[3,"Camera2dBundle"],[3,"Camera3dBundle"],[3,"ToggleActions"],[3,"InputManagerBundle"],[3,"SpatialBundle"],[3,"VisibilityBundle"],[3,"NonSend"],[3,"Rotation"],[8,"Plugin"],[3,"Weak"],[3,"PlayAudioCommand"],[3,"TweenCommand"],[3,"Context"],[3,"Metadata"],[3,"Entities"],[3,"EntityCommands"],[3,"EntityRef"],[3,"EntityMut"],[3,"Event"],[3,"FadeIn"],[3,"FadeOut"],[4,"TextureAtlasBuilderError"],[3,"Instant"],[3,"DespawnRecursive"],[3,"DespawnChildrenRecursive"],[3,"AddChild"],[3,"InsertChildren"],[3,"PushChildren"],[3,"WorldChildBuilder"],[4,"AudioCommandError"],[8,"System"],[3,"RunCriteria"],[8,"FnMut"],[4,"ShaderRef"],[3,"Direction"],[3,"StaticSoundHandle"],[4,"CommandError"],[3,"RandomState"],[3,"HashMap"],[4,"MouseMotionDirection"],[4,"InputKind"],[3,"VirtualAxis"],[3,"UVSphere"],[3,"Torus"],[3,"Box"],[3,"Icosphere"],[3,"Plane"],[3,"Capsule"],[3,"Circle"],[3,"Quad"],[3,"RegularPolygon"],[3,"Cube"],[3,"OsString"],[3,"OsStr"],[3,"CString"],[3,"CStr"],[15,"never"],[3,"Mat3A"],[3,"Affine2"],[3,"__m128"],[3,"ConditionSystemSet"],[4,"ImageType"],[3,"CompressedImageFormats"],[4,"TextureError"],[4,"DynamicImage"],[3,"OwnedFd"],[4,"ShaderStage"],[4,"AxisType"],[4,"GenerateTangentsError"],[4,"QueryEntityError"],[3,"WindowId"],[3,"PetitSet"],[3,"Ptr"],[4,"QueryComponentError"],[8,"Struct"],[8,"TupleStruct"],[4,"LoadState"],[8,"ExactSizeIterator"],[3,"InnerMeshVertexBufferLayout"],[3,"FixedState"],[3,"Hashed"],[3,"MutUntyped"],[3,"SystemMeta"],[3,"Touch"],[3,"ManualEventReader"],[4,"Serializable"],[4,"QuerySingleError"],[3,"AppLabelId"],[3,"InputStreams"],[4,"HexColorError"],[4,"HandleId"],[3,"WorldId"],[4,"ShaderImport"],[4,"Indices"],[3,"ComponentDescriptor"],[3,"ChangeTrackersFetch"],[3,"MeshVertexAttribute"],[3,"OwningPtr"],[3,"ComponentInfo"],[4,"RunCriteriaDescriptorOrLabel"],[3,"ConditionalSystemDescriptor"],[3,"RemovedComponents"],[4,"Resettable"],[3,"QueryIter"],[3,"Iter"],[3,"Cloned"],[8,"DoubleEndedIterator"],[3,"AncestorIter"],[3,"QueryCombinationIter"],[3,"DescendantIter"],[3,"TupleStructFieldIter"],[3,"VariantFieldIter"],[3,"QueryManyIter"],[4,"AssetServerError"],[3,"LoadingResources"],[3,"LoadProgress"],[3,"Record"],[3,"EntityMap"],[4,"MapEntitiesError"],[3,"LevelFilter"],[3,"HashSet"],[4,"Easing"],[3,"RawHandleWrapper"],[8,"ParallelSystemExecutor"],[3,"CommandQueue"],[4,"PrimitiveTopology"],[3,"Extent3d"],[4,"TextureDimension"],[3,"ReflectComponentFns"],[3,"ReflectResourceFns"],[3,"Archetype"],[3,"Attributes"],[4,"StateError"],[3,"ParamSet"],[8,"Send"],[8,"Sync"],[8,"Clone"],[3,"Pin"],[3,"PipeSystem"],[4,"ShouldRun"],[8,"IntoSystem"],[4,"PrepareAssetError"],[4,"PresentMode"],[3,"RawInputs"],[3,"Record"],[3,"WindowResizeConstraints"],[3,"World"],[3,"Table"],[15,"u16"],[15,"i16"],[15,"i8"],[8,"Bundle"],[3,"SpawnBatchIter"],[3,"AxisConversionError"],[3,"AllocError"],[3,"FilteredAccess"],[4,"VariantType"],[3,"ActionIter"],[8,"IntoRunCriteria"],[3,"RemoveChildren"],[3,"RemoveParent"],[3,"Writer"],[3,"DAffine2"],[3,"DAffine3"],[3,"AssetProviders"],[3,"CommandQueue"],[3,"System"],[3,"SimpleSystemStage"],[3,"SystemStages"],[3,"CameraShake"],[3,"BVec3A"],[3,"BitSetVec"],[3,"AtomicComponentStoreRef"],[3,"AtomicComponentStoreRefMut"],[3,"AtomicRefCell"],[3,"BitFmt"],[3,"ComponentStore"],[3,"UntypedComponentStore"],[3,"Entities"],[3,"AtomicRef"],[3,"AtomicResource"],[3,"AtomicComponentStore"],[3,"AtomicRefMut"],[3,"Time"],[3,"BevyWorld"],[3,"Window"],[3,"AudioSource"],[3,"AudioEvents"],[4,"AudioEvent"],[3,"Camera"],[3,"AnimatedSprite"],[3,"ClearColor"],[3,"Key"],[3,"AssetProvidersResource"],[4,"KeyError"],[3,"AssetPath"],[3,"Handle"],[3,"Image"],[3,"Atlas"],[3,"UntypedHandle"],[3,"Sprite"],[3,"AtlasSprite"],[3,"ShakeNoise"],[3,"TileLayer"],[3,"Tile"],[3,"CameraTraumaEvents"],[3,"Transform"],[3,"FrameTime"],[3,"UntypedResource"],[3,"ComponentStores"],[3,"Entity"],[3,"UntypedResources"],[3,"Resources"],[4,"CoreStage"],[3,"SystemTime"],[3,"Res"],[3,"ResMut"],[3,"Commands"],[3,"BorrowError"],[3,"BorrowMutError"],[4,"EcsError"],[15,"u128"],[4,"DecodeError"],[8,"AssetProvider"],[3,"AssetProviderRef"],[3,"AssetProviderMut"],[3,"TypedComponentOps"],[3,"ComponentBitsetIteratorMut"],[3,"UntypedComponentBitsetIteratorMut"],[3,"EntitiesIterWith"],[3,"ComponentBitsetIterator"],[3,"UntypedComponentBitsetIterator"],[3,"EntityIterator"],[3,"Layout"],[3,"UntypedResourceInfo"],[8,"UntypedAssetProvider"],[4,"EncodeError"],[4,"CapsuleUvProfile"],[3,"In"],[4,"SessionStage"],[3,"JumpySessionPlugin"],[3,"Session"],[3,"SessionManager"],[3,"WidgetAdjacencyEntry"],[3,"Response"],[3,"JumpyUiPlugin"],[3,"WidgetId"],[3,"WidgetAdjacencies"],[3,"WidgetAdjacency"],[8,"Default"],[8,"WidgetSystem"],[3,"StateInstances"],[3,"DisableMenuInput"],[3,"EguiFontDefinitions"],[3,"EguiRenderInputContainer"],[3,"EguiContext"],[3,"SystemState"],[3,"Ui"],[3,"EguiSettings"],[3,"With"],[3,"DebugToolsPlugin"],[3,"ShowFameTimeDiagnostics"],[3,"FrameDiagState"],[3,"Diagnostics"],[3,"UiInputPlugin"],[3,"MainMenuBackground"],[3,"MainMenuPlugin"],[4,"MenuPage"],[3,"MapSelectMenu"],[3,"PlayerSelectState"],[3,"PlayerSlot"],[3,"PlayerSelectMenu"],[3,"PlayerAtlasEguiTextures"],[4,"SettingsTab"],[3,"ModifiedSettings"],[3,"SettingsMenu"],[3,"ControlInputBindingEvents"],[4,"BindingKind"],[3,"PausePlugin"],[4,"PauseMenuPage"],[3,"BorderedButton"],[3,"Margin"],[3,"Vec2"],[4,"WidgetText"],[3,"Sense"],[3,"RichText"],[3,"BorderedFrame"],[3,"BorderedFramePrepared"],[3,"Rect"],[4,"Shape"],[3,"InnerResponse"],[3,"PlayerInputCollector"],[8,"LocalizationExt"],[8,"ColorMetaExt"],[13,"SerializationError"],[13,"Save"],[13,"Load"],[3,"AnyOf"],[3,"Without"],[3,"Or"],[3,"Added"],[3,"Changed"],[8,"SystemParam"],[8,"DetectChanges"],[8,"Actionlike"],[8,"Component"],[8,"Deref"],[8,"TypeUlid"],[8,"AddAsset"],[8,"AudioApp"],[8,"BuildChildren"],[8,"AppLooplessStateExt"],[8,"ScheduleLooplessStateExt"],[8,"AppLooplessFixedTimestepExt"],[8,"ScheduleLooplessFixedTimestepExt"],[8,"AddConditionalToSet"],[8,"RunCriteriaDescriptorCoercion"],[3,"MainTrack"],[8,"PluginGroup"],[8,"Deserialize"],[8,"DespawnRecursiveExt"],[8,"FromReflect"],[8,"FromWorld"],[8,"GetField"],[8,"GetTupleStructField"],[8,"BuildWorldChildren"],[8,"BonesBevyAsset"],[8,"IntoConditionalSystem"],[8,"AudioControl"],[8,"HierarchyQueryExt"],[8,"BonesBevyAssetLoad"],[8,"IntoPipeSystem"],[8,"MockInput"],[8,"SystemParamFunction"],[8,"ConditionHelpers"],[8,"Serialize"],[8,"AudioInstanceAssetsExt"],[13,"Created"],[13,"Modified"],[13,"Removed"],[13,"Grenade"],[13,"Sword"],[13,"KickBomb"],[13,"Mine"],[13,"AnimatedDecoration"],[13,"Crab"],[13,"Sproinger"],[13,"Crate"],[13,"StompBoots"],[13,"Rgba"],[13,"RgbaLinear"],[13,"Hsla"],[13,"DroppedFile"],[13,"HoveredFile"],[13,"HoveredFileCancelled"],[13,"Other"],[13,"Other"],[13,"Connected"],[13,"ButtonChanged"],[13,"AxisChanged"],[13,"Tile"],[13,"Element"],[13,"Index"],[13,"Other"],[13,"Paused"],[13,"Pausing"],[13,"Playing"],[13,"Stopping"],[13,"Perspective"],[13,"Orthographic"],[13,"Single"],[13,"Chord"],[13,"VirtualDPad"],[13,"VirtualAxis"],[13,"At"],[8,"QueryItem"],[8,"SystemParam"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[8,"SystemStage"],[8,"BitSet"],[8,"StageLabel"],[8,"IntoBevy"],[8,"RawFns"],[8,"IntoSystem"],[13,"PlaySound"],[13,"DispatcherExecutionFailed"],[13,"SystemError"],[3,"MainMenu"],[3,"HomeMenu"],[13,"MapSelect"],[3,"PlayerSelectPanel"],[8,"EguiContextExt"],[8,"EguiResponseExt"],[8,"EguiUiExt"]],"a":{"&*":[2157],"*":[2157],"cross":[11304,11305,19482],"determinant":[11304,11305,19482],"magnitude":[10647,10648,10649,10650,19229,19230,19231,19232,19233],"magnitude2":[10655,10656,10657,10658,19239,19240,19241,19242,19243],"mix":[10659,10660,10661,10662,19244,19245,19246,19247,19248],"mouse position":[5515],"scale":[8081,8082,8083,18278,18279,18280,18281],"set_vsync":[12442],"vsync":[11355,11357],"wedge":[11304,11305,19482],"world_to_screen":[14478]}},\
"jumpy_core":{"doc":"Jumpy Core","t":[17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,12,12,12,12,12,12,12,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,13,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,6,6,3,3,3,3,4,3,3,3,3,3,3,3,3,3,24,24,13,8,4,3,3,3,3,4,18,18,18,18,18,13,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,8,8,16,3,4,13,3,3,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,16,13,13,13,3,8,18,8,3,6,3,3,3,3,3,8,16,3,13,8,6,8,3,18,18,18,18,18,18,3,3,3,13,3,8,24,13,3,8,18,3,3,3,3,6,8,3,3,3,3,3,3,3,13,3,16,16,8,3,16,16,3,8,3,16,16,8,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,10,10,10,10,10,10,10,10,11,11,10,10,10,11,11,10,10,10,10,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,10,10,11,11,12,12,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,5,5,5,14,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,3,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,12,12,5,12,12,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,5,5,5,12,12,12,12,12,12,12,12,12,16,16,8,16,16,8,16,16,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,3,3,5,5,5,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,5,11,11,11,11,11,11,11,11,0,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,4,3,3,3,3,13,13,13,3,3,3,13,3,13,4,3,3,3,3,13,13,3,3,3,3,13,3,13,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,3,12,11,11,11,11,11,12,12,11,11,11,11,0,11,11,12,11,11,11,12,12,12,5,11,11,11,11,12,12,12,12,12,11,11,12,11,11,11,11,11,11,12,11,12,12,3,18,3,3,18,18,18,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,18,13,4,3,3,3,3,3,3,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5],"n":["FPS","MAX_PLAYERS","bevy_prelude","camera","damage","elements","input","item","lifetime","map","math","metadata","physics","player","session","testing","GameSession","GameSessionInfo","MAX_PLAYERS","bones","0","0","0","0","0","0","0","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","AXES","Affine2","Affine3A","AlreadyBorrowed","AnimatedSprite","AssetPath","AssetProvider","AssetProviderMut","AssetProviderRef","AssetProviders","AssetProvidersResource","Atlas","AtlasSprite","AtomicComponentStore","AtomicComponentStoreRef","AtomicComponentStoreRefMut","AtomicRef","AtomicRefCell","AtomicRefMut","AtomicResource","AudioEvent","AudioEvents","AudioSource","BVec2","BVec3","BVec3A","BVec4","BVec4A","BevyWorld","BitFmt","BitSet","BitSetVec","BorrowError","BorrowMutError","Camera","CameraShake","CameraTraumaEvents","ClearColor","CommandQueue","Commands","Comp","CompMut","ComponentBitsetIterator","ComponentBitsetIteratorMut","ComponentStore","ComponentStores","CoreStage","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","Deref","DerefMut","DispatcherExecutionFailed","EcsData","EcsError","Entities","EntitiesIterWith","Entity","EntityIterator","EulerRot","FALSE","FALSE","FALSE","FALSE","FALSE","First","FrameTime","Handle","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IDENTITY","IVec2","IVec3","IVec4","Image","IntoBevy","IntoSystem","Iter","Key","KeyError","Last","Mat2","Mat3","Mat3A","Mat4","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NAN","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_ONE","NEG_W","NEG_W","NEG_W","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_X","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Y","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NEG_Z","NotAscii","NotInitialized","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","ONE","Param","PlaySound","PostUpdate","PreUpdate","Quat","QueryItem","RAND_BITS","RawFns","Res","ResAssetProviders","ResMut","Resources","ShakeNoise","SimpleSystemStage","Sprite","StageLabel","State","System","SystemError","SystemParam","SystemResult","SystemStage","SystemStages","TIME_BITS","TRUE","TRUE","TRUE","TRUE","TRUE","Tile","TileLayer","Time","TooLong","Transform","TypeUlid","TypeUlid","TypeUlidCollision","TypedComponentOps","TypedEcsData","ULID","UVec2","UVec3","UVec4","Ulid","UlidMap","UntypedAssetProvider","UntypedComponentBitsetIterator","UntypedComponentBitsetIteratorMut","UntypedComponentStore","UntypedHandle","UntypedResource","UntypedResourceInfo","UntypedResources","Update","Vec2","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3","Vec3A","Vec3Swizzles","Vec4","Vec4","Vec4","Vec4Swizzles","W","W","W","W","Window","World","X","X","X","X","X","X","X","X","X","X","X","X","X","XYZ","XZY","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","Y","YXZ","YZX","Z","Z","Z","Z","Z","Z","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZXY","ZYX","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","active","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat2","add_mat2","add_mat3","add_mat3","add_mat3","add_mat4","add_mat4","add_system","add_system","add_system_to_stage","add_trauma","all","all","all","all","all","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","angle_between","any","any","any","any","any","any_orthogonal_vector","any_orthogonal_vector","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_pair","any_orthonormal_vector","any_orthonormal_vector","any_orthonormal_vector","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply","apply_bitset","apply_bitset","apply_bitset","apply_bitset","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_dmat2","as_dmat3","as_dmat3","as_dmat4","as_dvec2","as_dvec2","as_dvec2","as_dvec3","as_dvec3","as_dvec3","as_dvec3","as_dvec4","as_dvec4","as_dvec4","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_dyn_eq","as_f32","as_f64","as_ivec2","as_ivec2","as_ivec2","as_ivec3","as_ivec3","as_ivec3","as_ivec3","as_ivec4","as_ivec4","as_ivec4","as_mat2","as_mat3","as_mat4","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_mut_parts","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_ref_parts","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_reflect_mut","as_uvec2","as_uvec2","as_uvec2","as_uvec3","as_uvec3","as_uvec3","as_uvec3","as_uvec4","as_uvec4","as_uvec4","as_vec2","as_vec2","as_vec2","as_vec3","as_vec3","as_vec3","as_vec3a","as_vec3a","as_vec3a","as_vec4","as_vec4","as_vec4","atlas","atlas","bit_all","bit_and","bit_andnot","bit_any","bit_cond","bit_count","bit_disjoint","bit_eq","bit_flip","bit_fmt","bit_fmt","bit_init","bit_len","bit_mask","bit_none","bit_none","bit_not","bit_or","bit_reset","bit_set","bit_subset","bit_superset","bit_superset","bit_test","bit_xor","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitmask","bitmask","bitmask","bitmask","bitmask","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitset","bitset","bitset","bitset","bitset","bitset","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","ceil","ceil","ceil","ceil","ceil","cell","center","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clamp_length_min","clear_killed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_dynamic","clone_fn","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","clone_value","cmp","cmp","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","col","col","col","col","col","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","col_mut","components","conjugate","conjugate","contains","contains","contains","contains","contains","create","create_bitset","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","create_from","cross","cross","cross","cross","cross","datetime","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","decay_rate","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","determinant","determinant","determinant","determinant","determinant","determinant","determinant","distance","distance","distance","distance","distance","distance","distance","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dmat2","dmat3","dmat4","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","dot_into_vec","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dquat","drop","drop","drop_fn","dvec2","dvec3","dvec4","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_eq","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","dyn_hash","elapsed","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","exp","exp","exp","exp","exp","exp","exp","extend","extend","extend","extend","extend","extend","extend","extend","extend","f32","f64","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_at_mut","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_len","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","field_mut","filter_map","filter_map","flip_x","flip_x","flip_x","flip_y","flip_y","flip_y","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_type","fps","fract","fract","fract","fract","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_affine3","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle","from_angle_translation","from_angle_translation","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_cols_slice","from_components","from_components_unsafe","from_components_unsafe","from_datetime","from_datetime_with_source","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_euler","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2","from_mat2_translation","from_mat2_translation","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3","from_mat3_translation","from_mat3_translation","from_mat3a","from_mat3a","from_mat3a","from_mat3a","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_mat4","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_parts","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_quat","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_reflect","from_rotation","from_rotation_arc","from_rotation_arc","from_rotation_arc_2d","from_rotation_arc_2d","from_rotation_arc_colinear","from_rotation_arc_colinear","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale","from_scale_angle","from_scale_angle","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_angle_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scale_rotation_translation","from_scaled_axis","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_str","from_string","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_translation","from_vec4","from_vec4","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_xyzw","from_xyzw","generation","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_bevy_handle","get_bevy_handle","get_bevy_handle_untyped","get_by_uuid","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_field_mut","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_state","get_state","get_state","get_state","get_state","get_state","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_info","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","get_type_registration","grid_size","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","i32","id","id","id","id","id","idx","image","impl_bitset","increment","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","init","init","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize_systems","insert","insert","insert","insert","insert","insert","insert_stage_after","insert_stage_before","install","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_bevy","into_bevy","into_bevy","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_reflect","into_untyped","into_untyped","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","inverse","is_alive","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_near_identity","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_negative_bitmask","is_nil","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_normalized","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","iter","iter","iter","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_fields","iter_mut","iter_mut","iter_mut","iter_mut","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_mut_with_bitset","iter_with","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","iter_with_bitset","ivec2","ivec3","ivec4","key","kill","killed","label","layout","layout","length","length","length","length","length","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","lerp","load","load_progress","load_progress","look_at_lh","look_at_lh","look_at_lh","look_at_lh","look_at_rh","look_at_rh","look_at_rh","look_at_rh","look_to_lh","look_to_lh","look_to_lh","look_to_lh","look_to_rh","look_to_rh","look_to_rh","look_to_rh","maintain","map","map","mat2","mat3","mat3a","mat4","matrix2","matrix2","matrix3","matrix3","max","max","max","max","max","max","max","max","max","max","max","max","max","max_angle_rad","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_element","max_offset","min","min","min","min","min","min","min","min","min","min","min","min","min","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat2","mul_mat2","mul_mat3","mul_mat3","mul_mat3","mul_mat4","mul_mat4","mul_quat","mul_quat","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_scalar","mul_vec2","mul_vec2","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec3a","mul_vec4","mul_vec4","name","name","name","name","name","name","name","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","name_at","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_raw","next","next","next","next","next","next","nil","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_relative_to","not","not","not","not","not","not","not","not","not","not","not","orthographic_lh","orthographic_lh","orthographic_rh","orthographic_rh","orthographic_rh_gl","orthographic_rh_gl","partial_cmp","partial_cmp","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","path_mut","perp","perp","perp","perp_dot","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_infinite_rh","perspective_lh","perspective_lh","perspective_rh","perspective_rh","perspective_rh_gl","perspective_rh_gl","play","powf","powf","powf","powf","powf","powf","powf","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","product","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_onto_normalized","project_point3","project_point3","provide","provide","quat","queue","queue","queue","random","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","read_from","recip","recip","recip","recip","recip","recip","recip","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_mut","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_owned","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_partial_eq","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reflect_ref","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","reject_from_normalized","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","remove","remove","remove","remove","remove","remove","repeat","resources","rotate","rotate","rotate","rotation","round","round","round","round","round","round","round","row","row","row","row","row","row","row","run","run","run","run","run","run_initialized_system","run_system","scale","select","select","select","select","select","select","select","select","select","select","select","select","select","send","send","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","signum","signum","signum","signum","signum","signum","signum","signum","signum","signum","size","slerp","slerp","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","splat","stages","start","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat2","sub_mat2","sub_mat3","sub_mat3","sub_mat3","sub_mat4","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","sum","swizzles","system","system","systems","tile_size","tiles","timer","timestamp_ms","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_axis_angle","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_cols_array_2d","to_euler","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scale_rotation_translation","to_scaled_axis","to_scaled_axis","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform_point2","transform_point2","transform_point2","transform_point2","transform_point2","transform_point3","transform_point3","transform_point3","transform_point3","transform_point3a","transform_point3a","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector2","transform_vector3","transform_vector3","transform_vector3","transform_vector3","transform_vector3a","transform_vector3a","translation","translation","translation","translation","translation","transpose","transpose","transpose","transpose","transpose","transpose","transpose","trauma","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","truncate","try_borrow","try_borrow_mut","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_get","try_get","try_get_by_uuid","try_get_mut","try_init","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_normalize","try_remove","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_info","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","typed","u32","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","ulid","untyped","untyped","untyped_mut","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","uvec2","uvec3","uvec4","vec2","vec3","vec3a","vec4","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","w","w","w","w_axis","w_axis","with_core_stages","with_source","with_trauma","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_cols_to_slice","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_into","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","ww","ww","ww","ww","ww","www","www","www","www","www","wwww","wwww","wwww","wwww","wwww","wwwx","wwwx","wwwx","wwwx","wwwx","wwwy","wwwy","wwwy","wwwy","wwwy","wwwz","wwwz","wwwz","wwwz","wwwz","wwx","wwx","wwx","wwx","wwx","wwxw","wwxw","wwxw","wwxw","wwxw","wwxx","wwxx","wwxx","wwxx","wwxx","wwxy","wwxy","wwxy","wwxy","wwxy","wwxz","wwxz","wwxz","wwxz","wwxz","wwy","wwy","wwy","wwy","wwy","wwyw","wwyw","wwyw","wwyw","wwyw","wwyx","wwyx","wwyx","wwyx","wwyx","wwyy","wwyy","wwyy","wwyy","wwyy","wwyz","wwyz","wwyz","wwyz","wwyz","wwz","wwz","wwz","wwz","wwz","wwzw","wwzw","wwzw","wwzw","wwzw","wwzx","wwzx","wwzx","wwzx","wwzx","wwzy","wwzy","wwzy","wwzy","wwzy","wwzz","wwzz","wwzz","wwzz","wwzz","wx","wx","wx","wx","wx","wxw","wxw","wxw","wxw","wxw","wxww","wxww","wxww","wxww","wxww","wxwx","wxwx","wxwx","wxwx","wxwx","wxwy","wxwy","wxwy","wxwy","wxwy","wxwz","wxwz","wxwz","wxwz","wxwz","wxx","wxx","wxx","wxx","wxx","wxxw","wxxw","wxxw","wxxw","wxxw","wxxx","wxxx","wxxx","wxxx","wxxx","wxxy","wxxy","wxxy","wxxy","wxxy","wxxz","wxxz","wxxz","wxxz","wxxz","wxy","wxy","wxy","wxy","wxy","wxyw","wxyw","wxyw","wxyw","wxyw","wxyx","wxyx","wxyx","wxyx","wxyx","wxyy","wxyy","wxyy","wxyy","wxyy","wxyz","wxyz","wxyz","wxyz","wxyz","wxz","wxz","wxz","wxz","wxz","wxzw","wxzw","wxzw","wxzw","wxzw","wxzx","wxzx","wxzx","wxzx","wxzx","wxzy","wxzy","wxzy","wxzy","wxzy","wxzz","wxzz","wxzz","wxzz","wxzz","wy","wy","wy","wy","wy","wyw","wyw","wyw","wyw","wyw","wyww","wyww","wyww","wyww","wyww","wywx","wywx","wywx","wywx","wywx","wywy","wywy","wywy","wywy","wywy","wywz","wywz","wywz","wywz","wywz","wyx","wyx","wyx","wyx","wyx","wyxw","wyxw","wyxw","wyxw","wyxw","wyxx","wyxx","wyxx","wyxx","wyxx","wyxy","wyxy","wyxy","wyxy","wyxy","wyxz","wyxz","wyxz","wyxz","wyxz","wyy","wyy","wyy","wyy","wyy","wyyw","wyyw","wyyw","wyyw","wyyw","wyyx","wyyx","wyyx","wyyx","wyyx","wyyy","wyyy","wyyy","wyyy","wyyy","wyyz","wyyz","wyyz","wyyz","wyyz","wyz","wyz","wyz","wyz","wyz","wyzw","wyzw","wyzw","wyzw","wyzw","wyzx","wyzx","wyzx","wyzx","wyzx","wyzy","wyzy","wyzy","wyzy","wyzy","wyzz","wyzz","wyzz","wyzz","wyzz","wz","wz","wz","wz","wz","wzw","wzw","wzw","wzw","wzw","wzww","wzww","wzww","wzww","wzww","wzwx","wzwx","wzwx","wzwx","wzwx","wzwy","wzwy","wzwy","wzwy","wzwy","wzwz","wzwz","wzwz","wzwz","wzwz","wzx","wzx","wzx","wzx","wzx","wzxw","wzxw","wzxw","wzxw","wzxw","wzxx","wzxx","wzxx","wzxx","wzxx","wzxy","wzxy","wzxy","wzxy","wzxy","wzxz","wzxz","wzxz","wzxz","wzxz","wzy","wzy","wzy","wzy","wzy","wzyw","wzyw","wzyw","wzyw","wzyw","wzyx","wzyx","wzyx","wzyx","wzyx","wzyy","wzyy","wzyy","wzyy","wzyy","wzyz","wzyz","wzyz","wzyz","wzyz","wzz","wzz","wzz","wzz","wzz","wzzw","wzzw","wzzw","wzzw","wzzw","wzzx","wzzx","wzzx","wzzx","wzzx","wzzy","wzzy","wzzy","wzzy","wzzy","wzzz","wzzz","wzzz","wzzz","wzzz","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x_axis","x_axis","x_axis","x_axis","x_axis","x_axis","xw","xw","xw","xw","xw","xww","xww","xww","xww","xww","xwww","xwww","xwww","xwww","xwww","xwwx","xwwx","xwwx","xwwx","xwwx","xwwy","xwwy","xwwy","xwwy","xwwy","xwwz","xwwz","xwwz","xwwz","xwwz","xwx","xwx","xwx","xwx","xwx","xwxw","xwxw","xwxw","xwxw","xwxw","xwxx","xwxx","xwxx","xwxx","xwxx","xwxy","xwxy","xwxy","xwxy","xwxy","xwxz","xwxz","xwxz","xwxz","xwxz","xwy","xwy","xwy","xwy","xwy","xwyw","xwyw","xwyw","xwyw","xwyw","xwyx","xwyx","xwyx","xwyx","xwyx","xwyy","xwyy","xwyy","xwyy","xwyy","xwyz","xwyz","xwyz","xwyz","xwyz","xwz","xwz","xwz","xwz","xwz","xwzw","xwzw","xwzw","xwzw","xwzw","xwzx","xwzx","xwzx","xwzx","xwzx","xwzy","xwzy","xwzy","xwzy","xwzy","xwzz","xwzz","xwzz","xwzz","xwzz","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xx","xxw","xxw","xxw","xxw","xxw","xxww","xxww","xxww","xxww","xxww","xxwx","xxwx","xxwx","xxwx","xxwx","xxwy","xxwy","xxwy","xxwy","xxwy","xxwz","xxwz","xxwz","xxwz","xxwz","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxx","xxxw","xxxw","xxxw","xxxw","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxy","xxyw","xxyw","xxyw","xxyw","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxz","xxzw","xxzw","xxzw","xxzw","xxzw","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xxzz","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xy","xyw","xyw","xyw","xyw","xyw","xyww","xyww","xyww","xyww","xyww","xywx","xywx","xywx","xywx","xywx","xywy","xywy","xywy","xywy","xywy","xywz","xywz","xywz","xywz","xywz","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyx","xyxw","xyxw","xyxw","xyxw","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyy","xyyw","xyyw","xyyw","xyyw","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyz","xyzw","xyzw","xyzw","xyzw","xyzw","xyzw","xyzw","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xyzz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xz","xzw","xzw","xzw","xzw","xzw","xzww","xzww","xzww","xzww","xzww","xzwx","xzwx","xzwx","xzwx","xzwx","xzwy","xzwy","xzwy","xzwy","xzwy","xzwz","xzwz","xzwz","xzwz","xzwz","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzx","xzxw","xzxw","xzxw","xzxw","xzxw","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzy","xzyw","xzyw","xzyw","xzyw","xzyw","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzz","xzzw","xzzw","xzzw","xzzw","xzzw","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","xzzz","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y_axis","y_axis","y_axis","y_axis","y_axis","y_axis","yw","yw","yw","yw","yw","yww","yww","yww","yww","yww","ywww","ywww","ywww","ywww","ywww","ywwx","ywwx","ywwx","ywwx","ywwx","ywwy","ywwy","ywwy","ywwy","ywwy","ywwz","ywwz","ywwz","ywwz","ywwz","ywx","ywx","ywx","ywx","ywx","ywxw","ywxw","ywxw","ywxw","ywxw","ywxx","ywxx","ywxx","ywxx","ywxx","ywxy","ywxy","ywxy","ywxy","ywxy","ywxz","ywxz","ywxz","ywxz","ywxz","ywy","ywy","ywy","ywy","ywy","ywyw","ywyw","ywyw","ywyw","ywyw","ywyx","ywyx","ywyx","ywyx","ywyx","ywyy","ywyy","ywyy","ywyy","ywyy","ywyz","ywyz","ywyz","ywyz","ywyz","ywz","ywz","ywz","ywz","ywz","ywzw","ywzw","ywzw","ywzw","ywzw","ywzx","ywzx","ywzx","ywzx","ywzx","ywzy","ywzy","ywzy","ywzy","ywzy","ywzz","ywzz","ywzz","ywzz","ywzz","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yx","yxw","yxw","yxw","yxw","yxw","yxww","yxww","yxww","yxww","yxww","yxwx","yxwx","yxwx","yxwx","yxwx","yxwy","yxwy","yxwy","yxwy","yxwy","yxwz","yxwz","yxwz","yxwz","yxwz","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxx","yxxw","yxxw","yxxw","yxxw","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxy","yxyw","yxyw","yxyw","yxyw","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxz","yxzw","yxzw","yxzw","yxzw","yxzw","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yy","yyw","yyw","yyw","yyw","yyw","yyww","yyww","yyww","yyww","yyww","yywx","yywx","yywx","yywx","yywx","yywy","yywy","yywy","yywy","yywy","yywz","yywz","yywz","yywz","yywz","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyx","yyxw","yyxw","yyxw","yyxw","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyy","yyyw","yyyw","yyyw","yyyw","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyz","yyzw","yyzw","yyzw","yyzw","yyzw","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yyzz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yz","yzw","yzw","yzw","yzw","yzw","yzww","yzww","yzww","yzww","yzww","yzwx","yzwx","yzwx","yzwx","yzwx","yzwy","yzwy","yzwy","yzwy","yzwy","yzwz","yzwz","yzwz","yzwz","yzwz","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzx","yzxw","yzxw","yzxw","yzxw","yzxw","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzy","yzyw","yzyw","yzyw","yzyw","yzyw","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzz","yzzw","yzzw","yzzw","yzzw","yzzw","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","yzzz","z","z","z","z","z","z","z","z","z","z","z_axis","z_axis","z_axis","z_axis","z_axis","zw","zw","zw","zw","zw","zww","zww","zww","zww","zww","zwww","zwww","zwww","zwww","zwww","zwwx","zwwx","zwwx","zwwx","zwwx","zwwy","zwwy","zwwy","zwwy","zwwy","zwwz","zwwz","zwwz","zwwz","zwwz","zwx","zwx","zwx","zwx","zwx","zwxw","zwxw","zwxw","zwxw","zwxw","zwxx","zwxx","zwxx","zwxx","zwxx","zwxy","zwxy","zwxy","zwxy","zwxy","zwxz","zwxz","zwxz","zwxz","zwxz","zwy","zwy","zwy","zwy","zwy","zwyw","zwyw","zwyw","zwyw","zwyw","zwyx","zwyx","zwyx","zwyx","zwyx","zwyy","zwyy","zwyy","zwyy","zwyy","zwyz","zwyz","zwyz","zwyz","zwyz","zwz","zwz","zwz","zwz","zwz","zwzw","zwzw","zwzw","zwzw","zwzw","zwzx","zwzx","zwzx","zwzx","zwzx","zwzy","zwzy","zwzy","zwzy","zwzy","zwzz","zwzz","zwzz","zwzz","zwzz","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zx","zxw","zxw","zxw","zxw","zxw","zxww","zxww","zxww","zxww","zxww","zxwx","zxwx","zxwx","zxwx","zxwx","zxwy","zxwy","zxwy","zxwy","zxwy","zxwz","zxwz","zxwz","zxwz","zxwz","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxx","zxxw","zxxw","zxxw","zxxw","zxxw","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxy","zxyw","zxyw","zxyw","zxyw","zxyw","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxz","zxzw","zxzw","zxzw","zxzw","zxzw","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zxzz","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zy","zyw","zyw","zyw","zyw","zyw","zyww","zyww","zyww","zyww","zyww","zywx","zywx","zywx","zywx","zywx","zywy","zywy","zywy","zywy","zywy","zywz","zywz","zywz","zywz","zywz","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyx","zyxw","zyxw","zyxw","zyxw","zyxw","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyy","zyyw","zyyw","zyyw","zyyw","zyyw","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyz","zyzw","zyzw","zyzw","zyzw","zyzw","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zyzz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zz","zzw","zzw","zzw","zzw","zzw","zzww","zzww","zzww","zzww","zzww","zzwx","zzwx","zzwx","zzwx","zzwx","zzwy","zzwy","zzwy","zzwy","zzwy","zzwz","zzwz","zzwz","zzwz","zzwz","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzx","zzxw","zzxw","zzxw","zzxw","zzxw","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzy","zzyw","zzyw","zzyw","zzyw","zzyw","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzz","zzzw","zzzw","zzzw","zzzw","zzzw","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","zzzz","sound_source","volume","0","0","BVec2","BVec3","BVec3A","BVec4","BVec4A","w","x","x","x","y","y","y","z","z","Affine2","Affine3A","Mat2","Mat3","Mat3A","Mat4","Quat","Vec2","Vec3","Vec3A","Vec4","mat2","mat3","mat3a","mat4","matrix2","matrix3","quat","translation","translation","vec2","vec3","vec3a","vec4","w_axis","x","x","x_axis","x_axis","x_axis","y","y","y_axis","y_axis","y_axis","z","z_axis","z_axis","z_axis","DAffine2","DAffine3","DMat2","DMat3","DMat4","DQuat","DVec2","DVec3","DVec4","dmat2","dmat3","dmat4","dquat","dvec2","dvec3","dvec4","matrix2","matrix3","translation","translation","w","w","w_axis","x","x","x","x","x_axis","x_axis","x_axis","y","y","y","y","y_axis","y_axis","y_axis","z","z","z","z_axis","z_axis","IVec2","IVec3","IVec4","ivec2","ivec3","ivec4","w","x","x","x","y","y","y","z","z","Vec2","Vec2","Vec2Swizzles","Vec3","Vec3","Vec3Swizzles","Vec4","Vec4","Vec4Swizzles","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxz","xxxz","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyz","xxyz","xxz","xxz","xxzw","xxzx","xxzx","xxzy","xxzy","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxz","xyxz","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyz","xyyz","xyz","xyz","xyzw","xyzx","xyzx","xyzy","xyzy","xyzz","xyzz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzxw","xzxx","xzxx","xzxy","xzxy","xzxz","xzxz","xzy","xzy","xzyw","xzyx","xzyx","xzyy","xzyy","xzyz","xzyz","xzz","xzz","xzzw","xzzx","xzzx","xzzy","xzzy","xzzz","xzzz","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxz","yxxz","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyz","yxyz","yxz","yxz","yxzw","yxzx","yxzx","yxzy","yxzy","yxzz","yxzz","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxz","yyxz","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyz","yyyz","yyz","yyz","yyzw","yyzx","yyzx","yyzy","yyzy","yyzz","yyzz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzxw","yzxx","yzxx","yzxy","yzxy","yzxz","yzxz","yzy","yzy","yzyw","yzyx","yzyx","yzyy","yzyy","yzyz","yzyz","yzz","yzz","yzzw","yzzx","yzzx","yzzy","yzzy","yzzz","yzzz","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxxw","zxxx","zxxx","zxxy","zxxy","zxxz","zxxz","zxy","zxy","zxyw","zxyx","zxyx","zxyy","zxyy","zxyz","zxyz","zxz","zxz","zxzw","zxzx","zxzx","zxzy","zxzy","zxzz","zxzz","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyxw","zyxx","zyxx","zyxy","zyxy","zyxz","zyxz","zyy","zyy","zyyw","zyyx","zyyx","zyyy","zyyy","zyyz","zyyz","zyz","zyz","zyzw","zyzx","zyzx","zyzy","zyzy","zyzz","zyzz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzxw","zzxx","zzxx","zzxy","zzxy","zzxz","zzxz","zzy","zzy","zzyw","zzyx","zzyx","zzyy","zzyy","zzyz","zzyz","zzz","zzz","zzzw","zzzx","zzzx","zzzy","zzzy","zzzz","zzzz","UVec2","UVec3","UVec4","uvec2","uvec3","uvec4","w","x","x","x","y","y","y","z","z","CameraState","ParallaxBackgroundSprite","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","downcast","downcast","fmt","from","from","from_world","idx","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","meta","player_camera_rects","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","0","DamageRegion","DamageRegionOwner","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","collider_rect","default","downcast","downcast","fmt","fmt","from","from","from_world","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","raw_clone","raw_clone","raw_drop","raw_drop","size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","0","ElementHandle","MapElementHydrated","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","decoration","default","deref","deref_mut","downcast","downcast","from","from","from_world","grenade","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","player_spawner","raw_clone","raw_clone","raw_drop","raw_drop","sproinger","sword","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","install","IdleGrenade","LitGrenade","age","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","downcast","downcast","fmt","fmt","from","from","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","raw_clone","raw_clone","raw_drop","raw_drop","spawner","spawner","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","0","CurrentSpawner","PlayerSpawner","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","downcast","downcast","fmt","fmt","from","from","from_world","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","raw_clone","raw_clone","raw_drop","raw_drop","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ulid","ulid","upcast","upcast","vzip","vzip","Sproinger","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","downcast","fmt","frame","from","from_world","install","into","into_any","into_any_arc","into_any_rc","raw_clone","raw_drop","sproinging","to_owned","try_from","try_into","type_id","ulid","upcast","vzip","Cooldown","Idle","Swinging","Sword","SwordState","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_type_data","clone_type_data","default","default","downcast","downcast","dropped_time","fmt","fmt","from","from","from_world","from_world","install","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","raw_clone","raw_clone","raw_drop","raw_drop","state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ulid","upcast","upcast","vzip","vzip","frame","frame","PlayerControl","PlayerInput","PlayerInputs","active","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","control","default","default","default","downcast","downcast","downcast","fmt","fmt","fmt","from","from","from","from_world","from_world","from_world","grab_just_pressed","grab_pressed","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","jump_just_pressed","jump_pressed","just_moved","move_direction","moving","players","previous_control","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","selected_player","shoot_just_pressed","shoot_pressed","slide_just_pressed","slide_pressed","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ulid","ulid","upcast","upcast","upcast","vzip","vzip","vzip","0","Inv","Inventory","Item","ItemDropped","ItemGrabbed","ItemUsed","PlayerInventories","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","deref","deref","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","fmt","fmt","from","from","from","from","from","from","from","from_world","get_state","initialize","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","inventory","player","player","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Lifetime","age","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","clone","clone_into","clone_type_data","default","downcast","from","from_world","install","into","into_any","into_any_arc","into_any_rc","lifetime","new","raw_clone","raw_drop","to_owned","try_from","try_into","type_id","ulid","upcast","vzip","0","0","0","MapHandle","MapRespawnPoint","MapSpawned","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","from","from","from","from_world","from_world","from_world","install","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ulid","ulid","ulid","upcast","upcast","upcast","vzip","vzip","vzip","Rect","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","bottom","bottom_left","bottom_right","center","clone","clone_into","clone_type_data","contains","default","downcast","fmt","from","from_world","height","into","into_any","into_any_arc","into_any_rc","is_valid_bit_pattern","left","max","max","min","min","new","overlaps","raw_clone","raw_drop","right","size","to_owned","top","top_left","top_right","try_from","try_into","type_id","upcast","vzip","width","0","0","AnimatedDecoration","BackgroundMeta","BuiltinElementKind","CameraMeta","ColorMeta","CoreMeta","CoreMetaArc","Crab","Crate","Element","ElementLayer","ElementMeta","ElementSpawn","Grenade","JumpyCoreAssetsPlugin","KickBomb","MapLayerKind","MapLayerMeta","MapMeta","MapTileLayer","MapTileMeta","Mine","None","ParallaxLayerMeta","PhysicsMeta","PlayerMeta","PlayerSounds","PlayerSpawner","PlayerStats","Sproinger","StompBoots","Sword","Tile","air_move_speed","animations","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","atlas","background","background_color","body_size","border_bottom","border_left","border_right","border_top","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builtin","camera","category","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_height","depth","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop_volume","editor_size","element","elements","entity","erased_serialize","experimental_maps","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","friction_lerp","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","from_world","grab","grab_volume","gravity","gravity","grid_size","has_collision","id","idx","image","install_asset","install_asset","install_asset","install_asset","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","jump","jump_speed","jump_through","jump_volume","kind","land","land_volume","layers","layers","load","load","load","load","load","load","load","load","load","load","load","load","load","min_camera_size","move_lerp_factor","name","name","name","offset","physics","player_camera_box_size","players","pos","pos","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","scale","serialize","size","slow_fall_speed","sounds","speed","stable_maps","stats","stop_threshold","terminal_velocity","tile_size","tilemap","tiles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_uuid","type_uuid","type_uuid","type_uuid","ulid","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_speed","zoom_in_lerp_factor","zoom_out_lerp_factor","angular_velocity","angular_velocity","angular_velocity","arm_delay","arm_delay","arm_delay","arm_sound","arm_sound_handle","armed_anim_end","armed_anim_fps","armed_anim_start","atlas","atlas","atlas","atlas","atlas","atlas","atlas","atlas","body_offset","body_offset","body_offset","body_offset","body_offset","body_offset","body_offset","body_size","body_size","body_size","body_size","body_size","body_size","body_size","bounciness","bounciness","bounciness","break_sound","break_timeout","breaking_anim_fps","breaking_anim_frames","breaking_atlas","can_rotate","can_rotate","can_rotate","comfortable_scared_distance","comfortable_spawn_distance","cooldown_frames","damage_region_lifetime","damage_region_lifetime","damage_region_lifetime","damage_region_size","damage_region_size","damage_region_size","end_frame","end_frame","explosion_anim_fps","explosion_anim_frames","explosion_atlas","explosion_atlas","explosion_atlas","explosion_fps","explosion_fps","explosion_frames","explosion_frames","explosion_lifetime","explosion_lifetime","explosion_sound","explosion_sound","explosion_sound","explosion_sound_handle","explosion_sound_handle","explosion_volume","fps","fps","fuse_sound","fuse_sound","fuse_sound_handle","fuse_sound_volume","fuse_time","fuse_time","grab_offset","grab_offset","grab_offset","grab_offset","grab_offset","map_icon","player_decoration","run_speed","same_level_threshold","sound","sound","sound_volume","sound_volume","spring_velocity","start_frame","start_frame","throw_velocity","throw_velocity","throw_velocity","throw_velocity","throw_velocity","timer_delay_max","walk_speed","0","0","CollisionWorld","KinematicBody","angular_velocity","as_any","as_any_mut","as_bind_group_shader_type","borrow","borrow_mut","bounciness","can_rotate","clone","clone_into","clone_type_data","collider_rect","collisions","default","downcast","fall_through","fmt","from","from_world","gravity","has_friction","has_mass","install","into","into_any","into_any_arc","into_any_rc","is_deactivated","is_on_ground","is_on_platform","is_spawning","offset","raw_clone","raw_drop","size","to_owned","try_from","try_into","type_id","ulid","upcast","velocity","vzip","was_on_ground","0","Actor","COLLIDER","Collider","CollisionWorld","EMPTY","JUMP_THROUGH","SOLID","Solid","TileCollision","TileCollisionTag","actor_collisions","actor_pos","add_actor","add_solid","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","collidable","collide_check","collide_solids","collide_tag","default","default","default","default","default","descent","descent","downcast","downcast","downcast","downcast","downcast","downcast","dyn_eq","dyn_eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_world","from_world","from_world","from_world","from_world","get_collider","get_state","height","initialize","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_valid_bit_pattern","is_valid_bit_pattern","move_h","move_v","pos","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","rect","seen_wood","set_actor_position","solid_at","solid_move","solid_pos","squished","squished","squishers","tag_at","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ulid","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","width","x_remainder","y_remainder","0","Despawn","ID","Kill","PlayerEvent","PlayerEvents","PlayerIdx","PlayerKilled","PlayerState","PlayerStateStage","PlayerStateStageImpl","SetInventory","UseItem","add_system","age","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_type_data","clone_type_data","clone_type_data","clone_type_data","clone_type_data","current","default","default","default","despawn","downcast","downcast","downcast","downcast","downcast","downcast","downcast","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_world","from_world","from_world","id","id","initialize","install","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kill","last","name","name","new","queue","raw_clone","raw_clone","raw_clone","raw_clone","raw_clone","raw_drop","raw_drop","raw_drop","raw_drop","raw_drop","run","send","set_inventory","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulid","ulid","ulid","ulid","upcast","upcast","upcast","upcast","upcast","upcast","upcast","use_item","vzip","vzip","vzip","vzip","vzip","vzip","vzip","item","player","player","player","player","GameSession","GameSessionInfo","advance","as_any","as_any","as_any_mut","as_any_mut","as_bind_group_shader_type","as_bind_group_shader_type","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_type_data","downcast","downcast","fmt","from","from","info","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","map","meta","new","player_info","raw_clone","raw_drop","restart","restore","scratch_world","set_metadata","snapshot","stages","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","update_input","vzip","vzip","world","install"],"q":["jumpy_core","","","","","","","","","","","","","","","","jumpy_core::bevy_prelude","","","","jumpy_core::bevy_prelude::bonesjumpy_core::bevy_prelude::bones::AudioEvent","","jumpy_core::bevy_prelude::bones::EcsError","","jumpy_core::bevy_prelude::bones::bool","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::f32","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::f64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::i32","","","","","","","","","","","","","","","jumpy_core::bevy_prelude::bones::swizzlesjumpy_core::bevy_prelude::bones::u32","","","","","","","","","","","","","","","jumpy_core::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::damage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::decoration","jumpy_core::elements::grenade","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::player_spawner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::sproinger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::sword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::elements::sword::SwordState","","jumpy_core::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::itemjumpy_core::lifetime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::metadatajumpy_core::metadata::BuiltinElementKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::metadata::MapLayerKind","","jumpy_core::physics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::physics::collisions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::playerjumpy_core::player::PlayerEvent","","","","","jumpy_core::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jumpy_core::testing"],"d":["The target fixed frames-per-second that the game …","","Prelude for use outside the crate","","Systems and components related to damage/kill zones","","","","Module providing entity lifetime components and systems","","Re-usable math utilities","Core game metadata","","","","Contains temporary and testing/debugging systems.","","","","Bones lib prelude","","","","","","","","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","The requested resource is already borrowed.","Component that may be added to entities with an <code>AtlasSprite</code>…","A path to an asset.","Trait for asset providers.","A mutable borrow of an <code>AssetProvider</code>.","A borrow of an <code>AssetProvider</code>.","A resource that may be used to access <code>AssetProvider</code>s for …","The type of the <code>AssetProviders</code> resource.","An atlas image asset type, contains no data, but …","An animated sprite component.","A typed, wrapper handle around <code>UntypedComponentStore</code> that …","A read-only borrow of <code>AtomicComponentStore</code>.","A mutable borrow of <code>AtomicComponentStore</code>.","A wrapper type for an immutably borrowed value from an …","A threadsafe analogue to RefCell.","A wrapper type for a mutably borrowed value from an …","A handle to a resource from a <code>Resources</code> collection.","An audio event that may be sent to the <code>AudioEvents</code> …","Resource containing the audio event queue.","The audio source asset type, contains no data, but …","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","Resource that contains a bevy world.","BitSet formatter.","The BitSet API.","The type of bitsets used to track entities in component …","An error returned by <code>AtomicRefCell::try_borrow</code>.","An error returned by <code>AtomicRefCell::try_borrow_mut</code>.","Makes an entity behave like a camera.","Component for an entity with camera shake.","Queue that can be used to send camera trauma events.","Resource for controlling the clear color.","A resource containing the <code>Commands</code> command queue.","A <code>SystemParam</code> that can be used to schedule systems that …","<code>SystemParam</code> for getting read access to a <code>ComponentStore</code>.","<code>SystemParam</code> for getting mutable access to a <code>ComponentStore</code>.","Read-only iterator over components matching a given bitset","Mutable iterator over components matching a given bitset","A typed wrapper around <code>UntypedComponentStore</code>.","A collection of <code>ComponentStore&lt;T&gt;</code>.","A <code>StageLabel</code> for the 5 core stages.","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Implements <code>Deref</code> for <em>single-item</em> structs. This is …","Implements <code>DerefMut</code> for <em>single-item</em> structs. This is …","The execution of the dispatcher failed and returned one or …","Helper trait that is auto-implemented for anything that …","The types of errors used throughout the ECS.","Holds a list of alive entities.","Iterator over entities returned by <code>Entities::iter_with</code>.","An entity index.","Iterator over entities using the provided bitset.","Euler rotation sequences.","All false.","All false.","All false.","All false.","All false.","The first stage","This is a resource that stores the game’s fixed frame …","A typed handle to an asset.","The identity transform.","The identity transform.","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","The identity transform.","The identity transform.","A 2x2 identity matrix, where all diagonal elements are <code>1</code>, …","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Image asset type, contains no data, but <code>Handle&lt;Image&gt;</code> is …","Helper trait for converting bones types to Bevy types.","Converts a function into a <code>System</code>.","The type of iterator this query item creates","A small ascii byte array stored on the stack and used …","An error that may be caused when creating a <code>Key</code>.","The fifth stage","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NAN:s.","All NANs.","All NAN.","All NAN.","All NAN.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","All negative ones.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative W axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative X axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Y axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","A unit-length vector pointing along the negative Z axis.","The key is not ASCII.","A resource was not initialized in the <code>World</code> but the <code>System</code> …","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","All ones.","The type of the parameter, ranging over the lifetime of …","Play a sound.","The fourth stage","The second stage","A quaternion representing an orientation.","A type representing a component-joining entity query.","The number of bits in a Ulid’s random portion","Helper trait that is auto-implemented for all <code>Clone</code>-able …","<code>SystemParam</code> for getting read access to a resource.","Type alias for getting the <code>AssetProviders</code> resource.","<code>SystemParam</code> for getting mutable access to a resource.","A collection of resources.","Resource providing a noise source for <code>CameraShake</code> entities …","A collection of systems that will be run in order.","A 2D sprite component","Trait for things that may be used to identify a system …","The intermediate state for the parameter, that may be …","Struct used to run a system function using the world.","This variant is for user-defined errors.","Trait used to implement parameters for <code>System</code> functions.","The result of a <code>System</code>’s execution.","Trait for system stages. A stage is a","An ordered collection of <code>SystemStage</code>s.","The number of bits in a Ulid’s time portion","All true.","All true.","All true.","All true.","All true.","A tilemap tile component.","A tilemap layer component.","Resource representing the current game time.","The key is too long.","The main transform component.","Associates a <code>Ulid</code> ID to a Rust type.","Derive macro for the <code>TypeUlid</code> trait.","This happens when two Rust types have the same <code>TypeUlid</code>, …","Implements typed operations on top of a …","Helper trait that is auto-implemented for anything that …","The type’s <code>Ulid</code>.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","A Ulid is a unique 128-bit lexicographically sortable …","Faster hash map using <code>FxHashMap</code> and a ULID key.","Trait implemented for asset providers that can return …","Iterates over components using a provided bitset. Each …","Iterates over components using a provided bitset. Each …","Holds components of a given type indexed by <code>Entity</code>.","An untyped handle to an asset.","An untyped resource that may be inserted into …","Used to construct an <code>UntypedResource</code>.","Storage for un-typed resources.","The third stage","A 2-dimensional vector.","","","","A 3-dimensional vector.","","","A 3-dimensional vector with SIMD support.","","A 4-dimensional vector with SIMD support.","","","","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","A unit-length vector pointing along the positive W axis.","Information about the window the game is running in.","The <code>World</code> is simply a collection of <code>Resources</code>, and …","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","A unit-length vector pointing along the positive X axis.","Intrinsic three-axis rotation XYZ","Intrinsic three-axis rotation XZY","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","A unit-length vector pointing along the positive Y axis.","Intrinsic three-axis rotation YXZ","Intrinsic three-axis rotation YZX","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","A unit-length vector pointing along the positive Z axis.","The degenerate zero transform.","The degenerate zero transform.","A 3x3 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","The degenerate zero transform.","The degenerate zero transform.","A 2x2 matrix with all elements set to <code>0.0</code>.","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","Intrinsic three-axis rotation ZXY","Intrinsic three-axis rotation ZYX","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Whether or not the camera is enabled and rendering.","Add an asset provider for a specific asset type.","Add a system to be run at the end of the stage.","","","","","","","","","Adds two quaternions.","","","","","","","","Adds two quaternions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds two 2x2 matrices.","Adds two 2x2 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Adds two 4x4 matrices.","Add a system to this stage.","","Add a <code>System</code> to the stage with the given label.","Adds trauma to the camera, capping it at 1.0","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns true if all the elements are true, false otherwise.","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between two vectors.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>rhs</code>.","Returns the angle (in radians) between two vectors.","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns true if any of the elements are true, false …","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Returns some vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","Returns any unit-length vector that is orthogonal to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Modify the iteration bitsetasts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a raw pointer to the underlying data in this cell.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","The atlas handle.","The texture atlas to use for the layer","Returns if all bits are set.","Bitwise AND.","Bitwise AND after NOT of rhs.","Returns if any bits are set.","Conditionally sets or resets the given bit.","Counts the number of set bits.","Returns if the two bitsets have no bits in common.","Returns if the two bitsets are equal.","Flips the given bit.","Format the bits.","Format the bits.","Initializes all bits.","Returns total number of bits.","Bitwise combine with MASK.","Returns if none of the bits are set.","Returns if none of the bits are set.","Bitwise NOT.","Bitwise OR.","Resets the given bit.","Sets the given bit.","Returns if self is a subset of rhs.","Returns if self is a superset of rhs.","Returns if self is a superset of rhs.","Returns if the given bit is set.","Bitwise XOR.","","","","","","","","","","","","","","","","","","","","","","","Returns a bitmask with the lowest 2 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","Returns a bitmask with the lowest 3 bits set from the …","Returns a bitmask with the lowest 4 bits set from the …","","","","","","","","","","","","","","","","","","Shorthand for combining bitsets with bit_or.","","","","","","Read the bitset containing the list of entites with this …","Read the bitset containing the list of entites with this …","Get the bitset representing which entities have this …","Returns the bitset indicating which entity indices have a …","Returns a bitset where each index where the bit is set to …","Shorthand for setting bits on the bitset container.","","","","","","","","","","","","","","","","","","","","","","","<code>bool</code> vector mask types. ","This is used create an instance of the system parame, …","","","","Immutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for reading.","","","","","","","","","","Borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably borrows the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lock the resource for read-writing.","","","","","","","","Mutably borrow the component store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Cell containing the raw pointer to the resource’s data","The camera will always restore to this position.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f32::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>f64::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>i32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Component-wise clamping of values, similar to <code>u32::clamp</code>.","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Clears the killed entity list.","","","","","Copies an <code>AtomicRef</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A function that may be called to clone the resource from …eturns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;=</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&gt;</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;=</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>&lt;</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Returns a mutable reference to the matrix column for the …","Stores the world components.","Returns the quaternion conjugate of <code>self</code>. For a unit …","Returns the quaternion conjugate of <code>self</code>. For a unit …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not this component store has data for the …","Check whether or not the bitset contains the given entity.","Check whether or not a resource is in the store.","Creates a new <code>Entity</code> and returns it.","Creates a bitset big enough to contain the index of each …","","","","","","","","","","","","","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Computes the cross product of <code>self</code> and <code>rhs</code>.","Gets the datetime of when this Ulid was created accurate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The the length of time in seconds for the camera trauma to …","Free-standing, shorter equivalent to <code>Default::default()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product …","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Computes the dot product of <code>self</code> and <code>rhs</code>.","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","Returns a vector where every component is the dot product …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","An optional function that will be called to drop the …","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time elapsed since the start of the game session.","The ending frame of the animation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","<code>f32</code> vector, quaternion and matrix types. ","<code>f64</code> vector, quaternion and matrix types. ","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new <code>AtomicRef</code> for an optional component of the …","Make a new <code>AtomicRefMut</code> for an optional component of the …","Whether or not the flip the sprite horizontally.","Whether or not the flip the sprite horizontally.","Whether or not to flip the tile horizontally.","Whether or not the flip the sprite vertically.","Whether or not the flip the sprite vertically.","Whether or not to flip tile vertically.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an <code>UntypedComponentStore</code> that is valid for the …","The frames per second to play the animation at.","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Creates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transform from the given rotation <code>angle</code>.","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given rotation <code>angle</code>.","Creates a 2x2 matrix containing a rotation of <code>angle</code> (in …","Creates an affine transformation matrix from the given 2D …","Creates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …","Creates an affine transform from the given 2D rotation …","Creates an affine transform from the given 2D rotation …","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a rotation quaternion from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates a new vector from an array.","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from three column vectors.","Creates an affine transform from three column vectors.","Creates a 2x2 matrix from two column vectors.","Creates a 3x3 matrix from two column vectors.","Creates a 4x4 matrix from two column vectors.","Creates an affine transform from a <code>[f32; 6]</code> array stored …","Creates an affine transform from a <code>[f32; 12]</code> array stored …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …","Creates an affine transform from a <code>[f64; 6]</code> array stored …","Creates an affine transform from a <code>[f64; 12]</code> array stored …","Creates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …","Creates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …","Creates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …","Creates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …","Creates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …","Creates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …","Creates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …","Creates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …","Creates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Creates an affine transform from the first 6 values in …","Creates an affine transform from the first 12 values in …","Creates a 2x2 matrix from the first 4 values in <code>slice</code>.","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Create a new <code>ComponentStore&lt;T&gt;</code> by wrapping an …","Safety","Creates a new Ulid with the given datetime","Creates a new Ulid with the given datetime and random …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …","Creates a 3D rotation matrix from the given euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates a 3D rotation matrix from the given euler rotation …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given Euler rotation …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transformation matrix from the given 2x2 …","Creates an affine transform from a 2x2 matrix (expressing …","Creates an affine transform from a 2x2 matrix (expressing …","The given <code>Mat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","The given <code>DMat3</code> must be an affine transform,","Creates an affine transform from a 3x3 matrix (expressing …","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 rotation matrix.","Creates an affine transform from a 3x3 matrix (expressing …","Creates an affine transform from a 3x3 matrix (expressing …","The given <code>Mat3A</code> must be an affine transform,","Creates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …","Creates an affine transformation matrix from the given 3x3 …","Creates a quaternion from a 3x3 SIMD aligned rotation …","The given <code>Mat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","The given <code>DMat4</code> must be an affine transform, i.e. contain …","Creates a 3x3 matrix from a 4x4 matrix, discarding the 4th …","Creates a quaternion from a 3x3 rotation matrix inside a …","Create a Ulid from separated parts.","","","","","","","","","","","","","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","Creates an affine transform from the given <code>rotation</code> …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a transform from a rotation.","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …","Gets the minimal rotation for transforming <code>from</code> to either …","Gets the minimal rotation for transforming <code>from</code> to either …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>rotation</code> and …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transform containing a 3D rotation …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Create a transform from a scale.","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates an affine transform that changes scale. Note that …","Creates an affine transform that changes scale. Note that …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates a 2x2 matrix containing the combining non-uniform …","Creates a 2x2 matrix containing the combining non-uniform …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 2D <code>scale</code>, …","Creates an affine transformation matrix from the given 2D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Creates an affine transform from the given 3D <code>scale</code>, …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians around …","Create a quaternion that rotates <code>v.length()</code> radians around …","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a rotation quaternion from a slice.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","Creates a vector from the first 2 values in <code>slice</code>.","Creates a vector from the first 3 values in <code>slice</code>.","Creates a vector from the first 4 values in <code>slice</code>.","","Creates a Ulid from a Crockford Base32 encoded string","Create a transform from a translation.","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates an affine transformation from the given 2D …","Creates an affine transformation from the given 3D …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Creates a new rotation quaternion from a 4D vector.","Creates a new rotation quaternion from a 4D vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new rotation quaternion.","Creates a new rotation quaternion.","Returns the generation of this <code>Entity</code>.","Returns a read-only pointer to the asset for the given …","Get a reference to an asset, if it exists in the store.","","Get an asset, given it’s handle","Get an asset, given it’s handle","Borrow a component in the store, if it exists for the …","Gets an immutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets an immutable reference to the component of <code>Entity</code>.","Gets an immutable reference to the component of <code>Entity</code>.","Get a read-only pointer to the component for the given …","Get’s the tile at the given position in the layer, …","Get the components of a certain type","Get a cell containing the resource data pointer for the …","Get a resource handle from the store.","Get a Bevy weak <code>Handle</code> from from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get a Bevy weak <code>HandleUntyped</code> from this bones asset handle.","Get the untyped component storage by the component’s UUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable-only pointer to the asset for the given …","Get a mutable reference to an asset, if it exists in the …","Returns a mutable reference to the wrapped value.","","Get an asset, given it’s handle","Mutably borrow a component in the store, if it exists for …","Gets a mutable reference to the component of <code>Entity</code>.","Get the asset provider for the given type","Gets a mutable reference to the component of <code>Entity</code>.","Get a mutable pointer to the component for the given <code>Entity</code>","This is called to produce the intermediate state of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the layer in tiles.","","","","","","","","","","","","","","","","","","","The height of the camera in in-game pixels.","<code>i32</code> vector types. ","The unique identifier for the stage.","Returns a unique identifier for the stage.","","","The unique identifier for the stage.","The tile index in the tilemap texture.","The sprite image handle.","Implements the <code>BitSet</code> trait members for your type through …","Increment the random number, make sure that the ts millis …","Returns the index of this <code>Entity</code>.","","","","","","","","","","","","","","This is the current index in the animation, with an <code>idx</code> of …","","","","","","","","","","","","","","Initialize component storage for type <code>T</code>.","Initialize a resource of type <code>T</code> by inserting it’s …","Initialize the contained systems for the given <code>world</code>.","This will be called to give the parameter a chance to …","","","","Initializes the resources required to run this system …","","","","This should be called once to initialize the system, …","Initialize the systems in the stages agains the <code>World</code>.","Insert a component into the store.","Inserts a component for the given <code>Entity</code> index. Returns …","Inserts a component for the given <code>Entity</code> index.","Returns true if the entity already had a component of this …","Insert a new resource","Insert a resource.","Insert a new stage, after another existing stage","Insert a new stage, before another existing stage","Install the camera utilities on the given <code>SystemStages</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonvert the type to a Bevy type.","","","Consumes the <code>AtomicRefCell</code>, returning the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to the internal, untyped <code>ComponentStore</code>.","Consume <code>Resources</code> and extract the underlying …","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Return the inverse of this transform.","Return the inverse of this transform.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Checks if the <code>Entity</code> is still alive.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if, and only if, all elements are finite.  If …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Returns a bitmask with the lowest 2 bits set to the sign …","Returns a bitmask with the lowest 3 bits set to the sign …","Returns a bitmask with the lowest 4 bits set to the sign …","Test if the Ulid is nil","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","","","","","","","","","","","","","","","","","","Iterate over all components in the store.","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type. Very …","Iterates immutably over all components of this type.","Iterates immutably over all components of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutably iterate over all components in the store.","Iterates mutably over all components of this type. Very …","Iterates mutably over all components of this type.","Iterates mutably over all components of this type.","Mutably iterate over all the components in the store that …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterates mutable over the components of this type where …","Iterate over the entities and components in the given …","Return an iterator over the provided bitset.","Iterate over all the components in the store that match …","Iterates immutably over the components of this type where …","Iterates immutably over the components of this type where …","","Iterates immutably over the components of this type where …","","","Iterates immutably over the components of this type where …","Iterates over entities using the provided bitset.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Create a new const <code>Key</code> parsed at compile time.","Kill an entity.","Returns entities in the killed list.","The optional sub-asset label","Get the layout of the components stored.","The memory layout of the resource","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","Performs a linear interpolation between <code>self</code> and <code>rhs</code> based …","","","","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a left-handed view transform using a camera …","Creates a left-handed view matrix using a camera position, …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Creates a right-handed view transform using a camera …","Creates a right-handed view matrix using a camera …","Remove the component info for dead entities.","Make a new <code>AtomicRef</code> for a component of the borrowed data.","Make a new <code>AtomicRefMut</code> for a component of the borrowed …","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","The maximum offset angle in radians that the camera shake …","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","The maximum offset position that the camera shake can …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns a vector containing the minimum values for each …","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies a quaternion by a scalar value.","","Multiplies a quaternion and a 3D vector, returning the …","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","Multiplies a quaternion and a 3D vector, returning the …","Multiplies a quaternion by a scalar value.","","","","","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","Fused multiply-add. Computes <code>(self * a) + b</code> element-wise …","","","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","Multiplies two quaternions. If they each represent a …","","","","","","","","","","","","","","","","","","","Multiplies two 2x2 matrices.","Multiplies two 2x2 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Multiplies a 2x2 matrix by a scalar.","Multiplies a 3x3 matrix by a scalar.","Multiplies a 4x4 matrix by a scalar.","Transforms a 2D vector.","Transforms a 2D vector.","Transforms a 3D vector.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","Transforms a 4D vector.","The human-readable name for the stage, used for error …","Returns the human-readable name of the label, used in …","","Returns the underlying type name of the system.","","The human-readable name for the stage, used for error …","A best-effort name for the system, for diagnostic purposes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>AtomicRefCell</code> containing <code>value</code>.","Safety","Create a <code>Key</code> from a string.","Creates a new Ulid with the current time (UTC)","Create a new asset path.","Create a new asset handle, from it’s path and label.","Create a new handle from it’s path and label.","Create a arbitrary <code>UntypedComponentStore</code>.","Create a new <code>AtlasSprite</code> from the given atlas handle.","Create a new tile layer","Create a new <code>CameraShake</code> component with the provided …","Creates a new <code>UntypedResource</code> from an instance of a Rust …","Create a new, empty stage, for the given label.","Create an empty <code>UntypedResources</code>.","Create an empty <code>Resources</code>.","Create a new <code>World</code>.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector mask.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Creates a new vector.","Create a new <code>UntypedResource</code> from raw <code>UntypedResourceInfo</code>.","","","","","","","The ‘nil Ulid’.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Take this path, treat it as a path relative to <code>base_path</code>, …","","","","","","","","","","","","Creates a left-handed orthographic projection matrix with …","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The virtual filesystem path","The <code>AssetPath</code> for the asset.","The unique identifier of the asset this handle represents.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","The perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with […","Creates a right-handed perspective projection matrix with […","Play a sound.","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","Returns a vector containing each element of <code>self</code> raised to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Returns the vector projection of <code>self</code> onto <code>rhs</code>.","Transforms the given 3D vector as a point, applying …","Transforms the given 3D vector as a point, applying …","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","List of audio events that haven’t been handled by the …","The event queue.","The system queue that will be run at the end of the stage","Gets the random section of this ulid","Clone the value at <code>src</code>, writing the new value to <code>dst</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drop the value at <code>ptr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","Returns the vector rejection of <code>self</code> from <code>rhs</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove a component from an entity, returning the previous …","Removes the component of <code>Entity</code>. Returns <code>Some(T)</code> if the …","Remove an asset provider.","Removes the component of <code>Entity</code>.","If there is a previous value, <code>true</code> will be returned.","Remove a resource","Whether or not to repeat the animation","Stores the world resources.","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","Returns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …","The rotation of the entity.","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Execute the systems on the given <code>world</code>.","Execute the systems on the given <code>world</code>.","","Runs the system’s function using the provided <code>World</code>","This is run every time the system is executed","Run a system once, assuming any necessary initialization …","Run a system once.","The scale of the entity.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Add an event to the audio event queue.","Send a camera trauma event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the tile at the given position, to a certain entity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","The logical size of the window’s client area.","Performs a spherical linear interpolation between <code>self</code> and …","Performs a spherical linear interpolation between <code>self</code> and …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","The stages in the collection, in the order that they will …","The starting frame of the animation.","","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","Subtracts the <code>rhs</code> quaternion from <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subtracts two 2x2 matrices.","Subtracts two 2x2 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Traits adding swizzle methods to all vector types. ","Convert into a <code>System</code>.","","The list of systems in the stage.","The size of each tile in the layer.","The vector of tile slots in this layer.","The amount of time the current frame has been playing","Gets the timestamp section of this ulid","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Returns the rotation axis and angle (in radians) of <code>self</code>.","Creates a <code>[f32; 6]</code> array storing data in column major …","Creates a <code>[f32; 12]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 4]</code> array storing data in column major …","Creates a <code>[f32; 9]</code> array storing data in column major …","Creates a <code>[f32; 16]</code> array storing data in column major …","Creates a <code>[f64; 6]</code> array storing data in column major …","Creates a <code>[f64; 12]</code> array storing data in column major …","Creates a <code>[f64; 4]</code> array storing data in column major …","Creates a <code>[f64; 9]</code> array storing data in column major …","Creates a <code>[f64; 16]</code> array storing data in column major …","Creates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …","Creates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …","Creates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …","Creates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …","Creates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …","Returns the rotation angles for the given euler rotation …","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","Returns the rotation axis scaled by the rotation in …","Creates a Crockford Base32 encoded string that represents …","","","","","Creates a Crockford Base32 encoded string that represents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 2D vector as a point.","Transforms the given 2D point, applying shear, scale, …","Transforms the given 2D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given 3D points, applying shear, scale, …","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code>, applying shear, scale, …","Transforms the given <code>Vec3A</code> as 3D point.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Rotates the given 2D vector.","Transforms the given 2D vector, applying shear, scale and …","Rotates the given 2D vector.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given 3D vector, applying shear, scale and …","Transforms the give 3D vector as a direction.","Transforms the given <code>Vec3A</code>, applying shear, scale and …","Transforms the give <code>Vec3A</code> as 3D vector.","The position of the entity in the world.","","","","","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Value from 0-1 that indicates the intensity of the shake. …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","Attempts to immutably borrow the wrapped value, but …","Attempts to mutably borrow the wrapped value, but instead …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the asset provider for the given asset type, if it …","Get the components of a certain type","Gets a resource handle from the store if it exists.","Get the untyped component storage by the component’s UUID","Get the asset provider for the given asset type, if it …","Initialize component storage for type <code>T</code>.","Try to insert a resource.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Remove an asset provider.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a typed <code>Handle&lt;T&gt;</code> from this <code>UntypedHandle</code>.","<code>u32</code> vector types. ","","","","","","","","","","","","","","","","","","","","","","","Convert the handle to an <code>UntypedHandle</code>.","Borrow the underlying <code>UntypedResources</code> store.","Mutably borrow the underlying <code>UntypedResources</code> store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>SystemStages</code> collection, initialized with a stage …","Creates a new Ulid using data from the given random number …","Create a new <code>CameraShake</code> component with the provided …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the columns of <code>self</code> to the first 6 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 12 elements in …","Writes the columns of <code>self</code> to the first 4 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 9 elements in <code>slice</code>…","Writes the columns of <code>self</code> to the first 16 elements in …","","","","","","","","","","","","","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …","Writes the elements of <code>self</code> to the first 2 elements in …","Writes the elements of <code>self</code> to the first 3 elements in …","Writes the elements of <code>self</code> to the first 4 elements in …eturns the vector part of the quaternion.","","","Returns the vector part of the quaternionhe handle to the sound to play.","The volume to play the sound at.","","","A 2-dimensional <code>bool</code> vector mask.","A 3-dimensional <code>bool</code> vector mask.","A 3-dimensional SIMD vector mask.","A 4-dimensional <code>bool</code> vector mask.","A 4-dimensional SIMD vector mask.","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 3-dimensional vector with SIMD support.","A 4-dimensional vector with SIMD support.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","","","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","","","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","A 2D affine transform, which can represent translation, …","A 3D affine transform, which can represent translation, …","A 2x2 column major matrix.","A 3x3 column major matrix.","A 4x4 column major matrix.","A quaternion representing an orientation.","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2x2 matrix from column vectors.","Creates a 3x3 matrix from column vectors.","Creates a 4x4 matrix from column vectors.","Creates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","A 2-dimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vectordimensional vector.","A 3-dimensional vector.","A 4-dimensional vector.","Creates a 2-dimensional vector.","Creates a 3-dimensional vector.","Creates a 4-dimensional vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A rectangular damage region.","A component that may be added to a damage region entity to …","","","","","","","","","","","","","","","","","Get the collision rectangle of this damage region, given it…","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The size of the damage region in pixels","","","","","","","","","","","","","","","","Component containing an element’s metadata handle.","Marker component added to map elements that have been …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How long the grenade has been lit.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The entity ID of the map element that spawned the grenade","The entity ID of the map element that spawned the grenade.","","","","","","","","","","","","","","","","Resource that stores the next spawner to use when spawning …","Marker component for player spawners.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Player control input state","Player input, not just controls, but also other status …","The inputs for each player in this simulation frame.","The player is currently “connected” and actively …","","","","","","","","","","","","","","","","","","","","","","","","","The player control input","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The player control input from the last fixed update","","","","","","","This may be a null handle if a player hasn’t been …","","","","","","","","","","","","","","","","","","","","","","","","","","A helper struct containing a player-inventory pair that …","An intventory component, indicating another entity that …","Marker component for items.","Marker component added to items when they are dropped.","Marker component added to items when they are grabbed.","Marker component added to items when they are used.","System param that can be used to conveniently get the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","The player that dropped the item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The lifetime state of an entity","How long the entity has lived in seconds.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","How long the entity should be allowed to live in seconds.","","","","","","","","","","","","","","Resource containing the map metadata for this game session.","","Resource indicating whether the map has been spawned.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An animated decoration such as seaweed or anemones","","The kind of built-in","","","","Resource containing the session’s <code>CoreMeta</code>.","A crab roaming on the ocean floor","The throwable crate item","","","","","Grenades item","","","","","","","","The mine item","This is not a built-in item","","","","","Player spawner","","This is a sproinger","","This is a sword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The parallax background layers","The background color of the map, behind the parallax layers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the bounding rect for the element in the editor","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Size of the map in tiles","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The layers of the map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the tiles in pixels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the type name of this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","Returns the UUID associated with this value’s type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The delay after throwing the mine, before it becomes armed …","","","","","","","The grenade atlas","","","","","","","The grenade atlas","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time in seconds before a grenade explodes","The time in seconds before a grenade explodes","","","","","","","","","","","","","","","","","","","","","","45 fix updates per second, so if this is 45 the maximum …","","","","","A kinematic physics body","Angular velocity in degrees per second","","","","","","","","","","","","Modified from macroquad platformer:","","","Whether or not the body should fall through jump_through …","","Returns the argument unchanged.","","","","If this is <code>true</code> the body will be affected by gravity","","Calls <code>U::from(self)</code>.","","","","","","Will be <code>true</code> if the body is currently on top of a …","Indicates that we should reset the collider like it was …","","","","","","","","","","","","","","","An actor in the physics simulation.","","A collider body in the physics simulation.","","","","","A solid in the physics simulation.","","","Returns the collisions that one actor has with any other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Despawn a player.","","Kill a player.","Events that can be used to trigger player actions, such as …","Resource containing the player event queue.","The player index, for example Player 1, Player 2, and so …","Marker component indicating that a player has been killed.","The state of the player controller.","","","Set the player’s inventory","Have the player use the item they are carrying, if any.","","The number of frames that this state has been active.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ID for the current state.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The ID of the state that the player was in in the last …","","","","","","","","","","","","","","","","Send a player event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The implementation of a Jumpy game session.","Information needed to start a game session.","Run a single simulation frame","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The selected map","The core metadata.","Create a new game session","The player selections.","","","","Restore the world state","","Set the game metadata.","Snapshot the world state","","","","","","","","","","","Provide a closure to update the game inputs.","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,69,70,71,72,86,45,1,2,3,4,5,6,7,8,9,10,30,32,33,0,0,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,0,0,0,0,0,0,0,38,39,40,41,42,92,0,0,11,14,15,16,17,18,19,20,22,23,24,25,26,0,0,0,0,0,0,234,0,0,92,0,0,0,0,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,1,2,3,4,5,6,7,8,9,10,4,7,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,2,3,4,6,7,9,10,73,115,1,2,3,4,5,6,7,8,9,10,30,32,33,235,66,92,92,0,0,71,0,0,0,0,0,0,0,0,0,235,0,115,0,0,0,0,71,38,39,40,41,42,0,0,0,73,0,0,0,115,0,0,236,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,237,238,0,0,239,238,0,0,0,239,237,0,4,7,10,33,0,0,1,2,3,4,5,6,7,8,9,10,30,32,33,43,43,1,2,3,4,5,6,7,8,9,10,30,32,33,43,43,2,3,4,6,7,9,10,32,33,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,43,43,1,2,3,4,5,6,7,8,9,10,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,67,27,28,15,1,1,2,2,16,17,18,19,3,3,4,4,23,24,25,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,15,1,1,2,2,16,17,18,3,3,4,4,23,24,25,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,16,23,15,17,24,18,25,240,35,36,37,38,39,40,41,42,1,2,19,3,26,5,6,38,39,40,41,42,2,3,6,2,3,6,2,3,6,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,234,46,47,47,61,62,63,51,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,70,71,71,27,46,72,73,74,74,47,75,75,76,77,78,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,89,56,90,91,92,28,106,115,93,43,43,43,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,11,11,14,14,15,15,1,1,2,2,16,16,17,17,18,18,19,19,3,3,4,4,20,20,22,22,23,23,24,24,25,25,26,26,5,5,6,6,7,7,8,8,8,9,9,9,10,10,10,30,30,30,32,32,32,33,33,33,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,43,38,38,39,39,40,40,41,41,42,42,11,11,14,14,15,15,1,1,2,2,16,16,17,17,18,18,19,19,3,3,4,4,20,20,22,22,23,23,24,24,25,25,26,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,16,15,17,18,1,8,30,2,3,9,32,4,10,33,70,71,74,75,78,89,43,38,39,40,41,42,8,9,10,30,32,33,26,19,1,5,30,2,3,6,32,4,7,33,23,24,25,15,1,2,16,18,3,4,23,24,25,5,6,7,8,9,10,30,32,33,15,1,2,16,18,4,8,9,10,30,32,33,51,15,1,2,16,18,19,3,4,23,24,25,26,5,6,7,8,9,10,30,32,33,15,1,2,16,18,4,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,1,5,8,2,3,6,9,4,7,10,5,8,30,6,9,32,6,9,32,7,10,33,80,82,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,38,39,40,41,42,8,8,9,9,10,10,30,30,32,32,33,33,38,39,40,41,42,38,39,40,41,42,38,39,40,41,42,8,8,9,9,10,10,30,30,32,32,33,33,0,38,39,40,41,42,54,46,47,55,56,0,38,39,40,41,42,8,8,9,9,10,10,30,30,32,32,33,33,38,39,40,41,42,0,235,61,62,63,51,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,46,72,73,74,47,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,58,36,35,34,104,104,105,105,45,59,59,88,89,56,90,91,92,28,106,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,61,62,63,51,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,58,36,35,34,104,105,45,59,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,150,37,1,2,3,4,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,56,61,62,63,51,57,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,55,79,80,81,82,37,83,84,85,86,87,45,59,88,89,56,90,91,92,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,150,61,62,63,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,55,79,80,81,82,37,83,84,85,86,87,45,59,88,89,56,90,91,92,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,61,62,63,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,55,79,80,81,82,37,83,84,85,86,87,45,59,88,89,56,90,91,92,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,51,71,1,2,3,4,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,8,9,10,30,32,33,15,16,17,18,23,24,25,15,16,17,18,23,24,25,93,19,26,54,46,47,45,91,56,0,15,1,2,16,18,4,8,9,10,30,32,33,2,3,6,9,32,71,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,37,0,61,62,63,51,65,67,54,68,69,70,71,27,72,74,75,76,77,78,79,80,81,37,83,84,85,86,45,59,88,56,90,91,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,62,57,60,69,72,86,104,105,45,106,11,14,16,19,3,4,20,22,62,60,69,72,86,105,45,106,11,14,16,19,3,4,20,22,68,70,75,78,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,15,16,17,18,23,24,25,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,1,2,2,19,3,3,4,4,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,0,0,0,1,2,19,3,4,26,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,8,9,10,30,32,33,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,0,55,87,150,0,0,0,51,70,71,74,75,78,89,43,38,39,40,41,42,8,9,10,30,32,33,70,71,74,75,78,89,43,38,39,40,41,42,8,9,10,30,32,33,61,68,51,70,71,74,75,78,89,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,51,70,71,74,75,78,89,43,38,39,40,41,42,8,9,10,30,32,33,68,70,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,1,2,3,5,6,8,9,30,32,0,0,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,57,60,79,80,83,79,80,83,1,2,3,4,5,6,7,61,63,51,113,113,114,114,53,53,53,53,57,64,65,66,60,67,68,70,70,71,71,73,73,74,75,76,77,78,79,80,82,37,83,85,34,45,89,92,28,115,115,43,38,38,39,39,40,40,41,41,42,42,11,11,14,14,15,15,1,1,2,2,16,16,17,17,18,18,19,19,3,3,4,4,20,20,22,22,23,23,24,24,25,25,26,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,55,68,1,2,3,4,5,6,7,61,62,63,51,51,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,71,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,15,15,1,1,1,2,2,2,2,2,16,17,17,17,18,18,19,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,20,22,23,24,24,25,25,26,5,5,5,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,9,9,9,9,10,10,10,10,10,10,10,30,30,30,32,32,32,32,33,33,33,33,33,33,33,19,26,11,15,1,16,17,20,23,24,5,11,20,1,2,19,3,4,26,5,6,7,8,9,10,30,32,33,14,15,17,18,19,22,24,25,26,11,14,15,16,17,18,20,22,23,24,25,11,14,15,16,17,18,20,22,23,24,25,11,14,15,16,17,18,20,22,23,24,25,11,14,15,16,17,18,20,22,23,24,25,54,54,59,71,71,15,16,17,18,23,24,25,15,17,18,19,24,25,26,11,15,17,20,24,11,20,11,14,16,18,19,20,22,23,25,26,14,22,11,16,18,19,14,15,17,19,22,24,26,71,15,1,2,16,18,4,8,9,10,30,32,33,14,15,17,18,22,24,25,38,39,40,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,85,19,26,19,26,19,26,14,18,22,25,14,15,17,18,19,22,24,25,26,14,15,17,18,19,22,24,25,26,14,15,17,18,19,22,24,25,26,85,11,14,15,17,18,20,22,24,25,16,23,11,15,17,20,24,14,18,22,25,19,26,1,2,19,3,4,26,5,6,7,8,9,10,30,32,33,71,71,85,11,14,15,17,18,20,22,24,25,19,26,61,62,63,51,65,67,54,68,69,70,71,27,72,74,75,76,77,78,79,80,81,37,83,84,85,86,45,59,88,56,90,91,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,19,26,89,157,125,125,126,127,128,54,27,46,47,55,82,88,90,91,75,78,75,88,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,70,71,74,75,78,89,43,38,39,40,41,42,8,9,10,30,32,33,157,125,51,125,127,128,54,27,47,55,235,46,47,104,105,106,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,82,70,71,74,75,78,89,43,38,39,40,41,42,8,9,10,30,32,33,67,0,240,242,35,92,35,83,79,0,71,89,1,2,3,4,5,6,7,8,9,10,30,32,33,80,1,2,3,4,5,6,7,8,9,10,30,32,33,88,91,240,235,46,47,35,34,104,105,106,34,36,128,54,47,55,90,91,36,36,0,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,43,38,38,39,39,40,40,41,41,42,42,11,11,14,14,15,15,1,1,2,2,16,16,17,17,18,18,19,19,3,3,4,4,20,20,22,22,23,23,24,24,25,25,26,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,61,62,63,51,113,114,53,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,143,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,243,74,85,51,141,138,142,139,140,143,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,54,91,11,14,15,16,17,18,19,20,22,23,24,25,26,56,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,1,2,3,4,5,6,7,19,26,1,2,3,4,5,6,7,8,9,10,71,1,2,19,3,4,26,5,6,7,15,1,2,16,18,19,4,23,24,25,26,5,6,7,8,9,10,30,32,33,128,54,46,47,55,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,128,54,47,55,128,54,47,55,56,234,128,54,46,46,47,47,47,55,56,0,0,0,0,56,56,74,55,150,1,2,19,3,4,26,5,6,7,1,2,19,3,4,26,5,6,7,1,2,19,3,4,26,5,6,7,1,2,19,3,4,26,5,6,7,75,75,78,14,18,22,25,14,18,22,25,14,18,22,25,14,18,22,25,93,57,60,0,0,0,0,11,20,14,22,1,2,3,4,5,6,7,8,9,10,30,32,33,37,1,2,3,4,5,6,7,8,9,10,30,32,33,37,1,2,3,4,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,8,9,10,30,32,33,11,11,11,14,14,15,15,15,15,15,1,1,2,2,16,16,16,17,17,17,17,17,18,18,18,18,19,19,19,19,3,3,4,4,20,20,22,22,23,23,23,24,24,24,24,25,25,25,25,26,26,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,1,2,3,4,5,6,7,15,15,1,1,2,2,16,16,17,17,18,18,19,3,3,4,4,23,23,24,24,25,25,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,16,23,15,17,24,18,25,19,26,15,16,17,18,23,24,25,16,23,15,17,19,24,26,15,17,19,18,25,240,242,35,34,92,35,34,38,39,40,11,14,15,1,2,16,17,18,3,4,20,22,23,24,25,5,6,7,8,9,10,30,32,33,15,1,2,16,17,18,19,3,4,23,24,25,26,5,6,7,8,9,10,51,128,70,71,74,75,78,55,80,82,37,87,35,90,91,93,38,39,40,41,42,1,2,3,4,5,6,7,8,9,10,30,32,33,87,141,138,142,139,140,143,71,1,2,19,3,4,26,5,6,7,1,2,3,4,5,6,7,74,38,39,40,41,42,8,9,10,30,32,33,18,25,18,25,18,25,51,71,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,74,75,78,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,1,5,8,1,5,8,18,25,18,25,18,25,18,25,18,25,18,25,18,25,65,1,2,3,4,5,6,7,11,14,15,15,1,1,2,2,16,16,17,17,18,18,19,19,3,3,4,4,20,22,23,23,24,24,25,25,26,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,1,2,3,4,5,6,7,1,2,3,4,5,6,7,18,25,73,115,0,65,84,28,71,244,61,62,63,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,55,79,80,81,82,37,83,84,85,86,87,45,59,88,89,56,90,91,92,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,244,61,62,63,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,55,79,80,81,82,37,83,84,85,86,87,45,59,88,89,56,90,91,92,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,15,1,2,16,18,4,8,9,10,30,32,33,1,2,3,4,5,6,7,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,38,39,40,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,128,54,27,47,55,90,68,93,1,5,8,85,1,2,3,4,5,6,7,15,16,17,18,23,24,25,240,36,35,34,34,93,93,85,1,2,3,4,5,6,7,8,9,10,30,32,33,65,84,68,70,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,82,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,30,30,30,30,30,30,30,30,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,30,30,30,30,30,30,30,30,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,1,2,3,4,5,6,7,8,9,10,63,19,26,38,39,40,41,42,1,2,3,4,5,6,7,8,9,10,30,32,33,36,68,15,1,1,2,2,16,17,18,19,3,3,4,4,23,24,25,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,15,1,1,2,2,16,17,18,3,3,4,4,23,24,25,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,16,23,15,17,24,18,25,15,15,1,1,2,2,16,16,17,17,18,18,19,19,3,3,4,4,23,23,24,24,25,25,26,26,5,5,6,6,7,7,8,8,9,9,10,10,30,30,32,32,33,33,0,245,34,35,82,82,68,71,1,2,19,3,4,26,5,6,7,8,9,10,30,32,33,19,26,11,14,15,16,17,18,20,22,23,24,25,11,14,15,16,17,18,20,22,23,24,25,19,26,61,62,63,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,55,79,80,81,82,37,83,84,85,86,87,45,59,88,89,56,90,91,92,28,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,14,18,22,25,19,26,71,113,114,53,70,71,71,73,115,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,11,15,17,20,24,14,18,22,25,14,18,11,15,17,20,24,14,18,22,25,14,18,85,11,14,20,22,15,16,17,18,23,24,25,37,2,3,4,6,7,9,10,32,33,51,51,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,27,88,91,88,27,88,91,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,1,2,3,4,5,6,7,27,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,78,0,61,62,63,64,65,67,68,69,72,76,77,79,80,81,82,37,83,84,85,86,56,28,75,91,91,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,0,0,0,0,0,0,0,61,62,63,51,141,113,114,138,53,142,139,126,127,57,128,64,65,66,60,67,54,68,69,70,71,27,46,72,73,74,47,75,76,77,78,55,79,80,81,82,37,83,84,85,86,140,143,150,87,58,36,35,34,104,105,45,59,88,89,56,90,91,92,28,106,115,93,43,38,39,40,41,42,11,14,15,1,2,16,17,18,19,3,4,20,22,23,24,25,26,5,6,7,8,9,10,30,32,33,40,26,7,10,33,18,25,36,71,37,11,14,15,16,17,18,20,22,23,24,25,15,1,2,16,18,4,8,9,10,30,32,33,1,2,19,3,4,26,5,6,7,8,9,10,30,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,38,39,40,1,2,26,5,6,7,8,9,10,30,32,33,15,17,18,23,24,25,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,239,239,239,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,238,237,237,237,2,19,3,4,26,6,7,9,10,32,33,238,238,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,38,39,40,1,2,26,5,6,7,8,9,10,30,32,33,15,17,18,23,24,25,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,238,4,7,10,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,239,237,238,1,2,3,4,5,6,7,8,9,10,30,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,39,40,2,26,6,7,9,10,32,33,15,17,18,24,25,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,238,4,7,10,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,237,238,2,3,4,6,7,9,10,32,33,246,246,247,248,0,0,0,0,0,40,38,39,40,38,39,40,39,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,14,0,11,14,0,0,0,0,18,1,2,15,17,18,1,2,15,17,18,2,15,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,22,20,22,26,7,25,26,5,6,7,23,24,25,26,5,6,7,23,24,25,26,6,7,24,25,0,0,0,0,0,0,10,8,9,10,8,9,10,9,10,237,238,0,239,238,0,239,237,0,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,237,238,238,238,238,238,238,239,237,238,238,239,237,238,239,237,238,237,238,239,237,238,238,239,237,238,239,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,239,238,238,238,238,238,239,237,238,238,239,237,238,239,237,238,237,238,239,237,238,238,239,237,238,239,237,238,237,238,238,237,238,237,238,237,238,237,238,237,238,238,238,238,238,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,237,238,238,238,238,238,238,239,237,238,238,239,237,238,239,237,238,237,238,239,237,238,238,239,237,238,239,237,238,237,238,237,238,238,237,238,237,238,237,238,239,237,238,238,238,238,238,238,239,237,238,238,239,237,238,239,237,238,237,238,239,237,238,238,239,237,238,239,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,238,238,238,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,237,238,238,238,238,238,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,238,238,238,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,238,238,238,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,237,238,238,237,238,237,238,237,238,0,0,0,0,0,0,33,30,32,33,30,32,33,32,33,0,0,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,166,165,166,166,165,166,166,165,0,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,165,166,170,0,0,169,170,169,170,169,170,169,170,169,170,169,170,169,170,169,170,169,169,169,170,169,170,169,170,169,0,169,170,169,170,169,170,169,170,169,170,169,170,169,169,170,169,170,169,170,169,170,169,170,169,170,169,170,173,0,0,172,173,172,173,172,173,172,173,172,173,172,173,172,173,172,173,0,173,173,173,172,173,172,173,173,0,0,172,173,172,173,172,173,172,173,0,172,173,172,173,0,0,172,173,172,173,172,173,172,173,172,173,172,173,172,173,0,0,0,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,0,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,174,175,177,0,0,176,177,176,177,176,177,176,177,176,177,176,177,176,177,176,177,177,176,177,176,177,176,177,177,0,176,177,176,177,176,177,176,177,176,177,176,177,176,177,176,177,176,177,176,177,176,177,176,177,176,177,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,180,180,180,0,0,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,180,179,179,180,179,180,179,180,0,179,180,179,180,179,180,179,180,179,180,179,180,179,179,180,179,180,179,180,179,180,179,179,180,179,180,249,250,0,0,0,182,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,182,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,183,183,0,181,182,183,181,182,183,181,182,183,181,182,183,183,183,183,183,183,181,182,181,182,183,181,182,183,182,183,183,183,183,181,182,183,181,182,183,181,182,183,181,182,183,181,182,181,182,183,181,182,183,185,0,0,0,0,0,0,0,184,185,186,190,187,188,189,184,185,186,190,187,188,189,184,185,186,190,187,188,189,184,185,186,190,190,187,188,189,184,185,186,190,187,188,189,184,185,186,187,188,189,184,185,186,187,188,189,184,185,186,187,188,189,185,185,190,185,190,184,185,186,190,187,188,189,186,190,184,185,186,190,187,188,189,185,190,190,184,185,186,190,187,188,189,184,185,186,190,187,188,189,184,185,186,190,187,188,189,184,185,186,190,187,188,189,186,186,187,184,185,186,187,188,189,184,185,186,187,188,189,184,185,186,187,188,189,184,185,186,190,187,188,189,184,185,186,190,187,188,189,184,185,186,190,187,188,189,184,185,187,188,189,184,185,186,190,187,188,189,184,185,186,190,187,188,189,0,191,191,191,191,191,191,191,191,191,191,191,191,191,0,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,192,193,194,0,0,0,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,0,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,192,193,194,0,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,197,212,199,0,0,0,0,0,0,199,199,204,0,0,0,199,0,199,0,0,0,0,0,199,199,0,0,0,0,199,0,199,199,199,204,210,209,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,209,200,200,209,214,214,214,214,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,198,213,198,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,197,198,199,201,205,206,207,209,210,211,212,213,214,215,214,202,212,212,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,211,211,198,207,206,203,208,213,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,197,198,199,201,205,206,207,209,210,211,212,213,214,215,211,211,209,215,200,205,203,208,202,198,200,209,213,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,211,210,208,211,203,211,211,200,201,199,201,202,203,204,205,206,207,208,210,211,214,215,214,214,198,200,209,202,213,214,213,207,208,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,202,208,202,210,209,201,213,209,215,215,200,205,205,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,198,200,209,213,198,200,209,213,198,200,202,209,212,213,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,210,214,214,251,252,253,252,254,253,254,254,254,254,254,251,255,256,257,252,258,254,253,251,257,252,258,254,259,253,251,257,252,258,254,259,253,251,252,253,258,258,258,258,258,251,252,253,256,256,252,251,254,253,251,254,253,255,256,254,254,251,254,253,251,253,251,253,251,253,251,254,253,254,253,251,255,256,251,253,253,251,251,253,251,258,254,259,253,259,259,256,256,257,252,257,252,257,255,256,251,252,258,254,253,256,256,260,261,0,0,217,217,217,217,217,217,217,217,217,217,217,217,0,217,217,217,217,217,217,217,217,217,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,223,0,223,0,0,223,223,223,0,0,0,218,218,218,218,218,219,220,221,222,222,223,223,218,219,220,221,222,223,218,219,220,221,222,223,218,218,219,220,221,222,223,218,219,220,221,222,223,219,220,221,222,223,219,220,221,222,223,219,220,221,222,223,221,218,218,218,219,220,221,222,223,218,221,218,219,220,221,222,223,222,223,222,223,222,223,219,220,221,222,223,218,219,220,221,222,223,219,220,221,222,223,218,218,221,218,218,219,220,221,222,223,218,219,220,221,222,223,218,219,220,221,222,223,218,219,220,221,222,223,219,220,218,218,221,219,220,221,222,223,219,220,221,222,223,221,221,218,218,218,218,218,221,221,218,219,220,221,222,223,218,219,220,221,222,223,218,219,220,221,222,223,218,219,220,221,222,223,219,220,221,222,223,218,219,220,221,222,223,218,219,220,221,222,223,221,221,221,226,229,224,229,0,0,0,0,0,0,0,229,229,224,225,230,224,225,226,227,228,229,230,224,225,226,227,228,229,230,224,225,226,227,228,229,230,224,225,226,227,228,229,230,224,225,226,227,228,229,225,226,227,228,229,225,226,227,228,229,225,226,227,228,229,225,224,225,228,228,230,224,225,226,227,228,229,230,224,228,229,230,224,225,226,227,228,229,224,225,228,230,224,224,0,230,224,225,226,227,228,229,230,224,225,226,227,228,229,230,224,225,226,227,228,229,230,224,225,226,227,228,229,228,225,230,224,224,228,225,226,227,228,229,225,226,227,228,229,224,228,228,225,226,227,228,229,230,224,225,226,227,228,229,230,224,225,226,227,228,229,230,224,225,226,227,228,229,225,226,227,228,230,224,225,226,227,228,229,228,230,224,225,226,227,228,229,262,263,264,262,265,0,0,168,168,232,168,232,168,232,168,232,168,232,232,232,232,168,232,232,168,232,168,168,232,168,232,168,232,168,232,232,232,168,232,232,232,168,168,168,168,168,168,232,168,232,168,232,168,232,168,232,168,168,232,168,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[[11,11,12],13],[[14,14,12],13],[[15,15,12],13],[[1,1,12],13],[[2,2,12],13],[[16,16,12],13],[[17,17,12],13],[[18,18,12],13],[[19,19,12],13],[[3,3,12],13],[[4,4,12],13],[[20,20,21],13],[[22,22,21],13],[[23,23,21],13],[[24,24,21],13],[[25,25,21],13],[[26,26,21],13],[[5,5,21],13],[[6,6,21],13],[[7,7,21],13],0,[27],[28],[[15,15]],[[1,1],1],[[1,12],1],[[2,12],2],[[2,2],2],[[16,16]],[[17,17]],[[18,18]],[[19,19],19],[[3,12],3],[[3,3],3],[[4,12],4],[[4,4],4],[[23,23]],[[24,24]],[[25,25]],[[26,26],26],[[5,5],5],[[5,21],5],[[6,6],6],[[6,21],6],[[7,21],7],[[7,7],7],[[8,8],8],[[8,29],8],[[9,9],9],[[9,29],9],[[10,29],10],[[10,10],10],[[30,31],30],[[30,30],30],[[32,31],32],[[32,32],32],[[33,33],33],[[33,31],33],[[15,15]],[[1,1]],[[1,12]],[[2,2]],[[2,12]],[[16,16]],[[17,17]],[[18,18]],[[3,3]],[[3,12]],[[4,4]],[[4,12]],[[23,23]],[[24,24]],[[25,25]],[[5,5]],[[5,21]],[[6,21]],[[6,6]],[[7,7]],[[7,21]],[[8,29]],[[8,8]],[[9,9]],[[9,29]],[[10,10]],[[10,29]],[[30,31]],[[30,30]],[[32,31]],[[32,32]],[[33,33]],[[33,31]],[[16,16],16],[[23,23],23],[[15,15],15],[[17,17],17],[[24,24],24],[[18,18],18],[[25,25],25],[34],[[35,34]],[36,36],[[37,12]],[38,13],[39,13],[40,13],[41,13],[42,13],[[1,1],12],[[2,2],12],[[19,19],12],[[3,3],12],[[26,26],21],[[5,5],21],[[6,6],21],[38,13],[39,13],[40,13],[41,13],[42,13],[2,2],[3,3],[6,6],[2],[3],[6],[2,2],[3,3],[6,6],[[43,44]],[[38,44]],[[39,44]],[[40,44]],[[41,44]],[[42,44]],[[11,44]],[[14,44]],[[15,44]],[[1,44]],[[2,44]],[[16,44]],[[17,44]],[[18,44]],[[19,44]],[[3,44]],[[4,44]],[[20,44]],[[22,44]],[[23,44]],[[24,44]],[[25,44]],[[26,44]],[[5,44]],[[6,44]],[[7,44]],[[8,44]],[[9,44]],[[10,44]],[[30,44]],[[32,44]],[[33,44]],[45],[[46,45]],[[47,45]],[[47,45]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[43,48],[[],48],[[],48],[38,48],[[],48],[[],48],[39,48],[40,48],[[],48],[[],48],[41,48],[[],48],[[],48],[42,48],[[],48],[[],48],[11,48],[[],48],[14,48],[[],48],[15,48],[[],48],[1,48],[[],48],[[],48],[2,48],[[],48],[16,48],[17,48],[[],48],[[],48],[18,48],[19,48],[[],48],[[],48],[3,48],[[],48],[4,48],[[],48],[20,48],[22,48],[[],48],[23,48],[[],48],[[],48],[24,48],[25,48],[[],48],[26,48],[[],48],[[],48],[5,48],[[],48],[6,48],[[],48],[7,48],[[],48],[[],48],[8,48],[9,48],[[],48],[[],48],[[],48],[10,48],[[],48],[[],48],[[],48],[30,48],[32,48],[[],48],[[],48],[33,48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[43,48],[[],48],[38,48],[[],48],[[],48],[39,48],[40,48],[[],48],[41,48],[[],48],[[],48],[42,48],[[],48],[11,48],[14,48],[[],48],[15,48],[[],48],[1,48],[[],48],[[],48],[2,48],[[],48],[16,48],[[],48],[17,48],[[],48],[18,48],[19,48],[[],48],[3,48],[[],48],[4,48],[[],48],[[],48],[20,48],[[],48],[22,48],[[],48],[23,48],[24,48],[[],48],[25,48],[[],48],[[],48],[26,48],[5,48],[[],48],[6,48],[[],48],[[],48],[7,48],[8,48],[[],48],[9,48],[[],48],[10,48],[[],48],[30,48],[[],48],[32,48],[[],48],[[],48],[33,48],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[16,23],[15,24],[17,24],[18,25],[1,5],[8,5],[30,5],[2,6],[3,6],[9,6],[32,6],[4,7],[10,7],[33,7],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[26,19],[19,26],[1,8],[5,8],[30,8],[2,9],[3,9],[6,9],[32,9],[4,10],[7,10],[33,10],[23,16],[24,15],[25,18],[15],[1],[2],[16],[18],[3],[4],[23],[24],[25],[5],[6],[7],[8],[9],[10],[30],[32],[33],[15],[1],[2],[16],[18],[4],[8],[9],[10],[30],[32],[33],[51],[15],[1],[2],[16],[18],[19],[3],[4],[23],[24],[25],[26],[5],[6],[7],[8],[9],[10],[30],[32],[33],[15],[1],[2],[16],[18],[4],[8],[9],[10],[30],[32],[33],[43,44],[38,44],[39,44],[40,44],[41,44],[42,44],[11,44],[14,44],[15,44],[1,44],[2,44],[16,44],[17,44],[18,44],[19,44],[3,44],[4,44],[20,44],[22,44],[23,44],[24,44],[25,44],[26,44],[5,44],[6,44],[7,44],[8,44],[9,44],[10,44],[30,44],[32,44],[33,44],[43,44],[38,44],[39,44],[40,44],[41,44],[42,44],[11,44],[14,44],[15,44],[1,44],[2,44],[16,44],[17,44],[18,44],[19,44],[3,44],[4,44],[20,44],[22,44],[23,44],[24,44],[25,44],[26,44],[5,44],[6,44],[7,44],[8,44],[9,44],[10,44],[30,44],[32,44],[33,44],[1,30],[5,30],[8,30],[2,32],[3,32],[6,32],[9,32],[4,33],[7,33],[10,33],[5,1],[8,1],[30,1],[6,2],[9,2],[32,2],[6,3],[9,3],[32,3],[7,4],[10,4],[33,4],0,0,[[],13],[[]],[[]],[[],13],[[52,13]],[[],52],[[],13],[[],13],[52],[[],53],[[],53],[13],[[],52],[[]],[[],13],[[],13],[[]],[[]],[52],[52],[[],13],[[],13],[[],13],[52,13],[[]],[[38,38],38],[[39,39],39],[[40,40],40],[[41,41],41],[[42,42],42],[[8,29]],[[8,8]],[[9,9]],[[9,29]],[[10,10]],[[10,29]],[[30,31]],[[30,30]],[[32,31]],[[32,32]],[[33,31]],[[33,33]],[[38,38]],[[39,39]],[[40,40]],[[41,41]],[[42,42]],[38,31],[39,31],[40,31],[41,31],[42,31],[[38,38],38],[[39,39],39],[[40,40],40],[[41,41],41],[[42,42],42],[[8,8]],[[8,29]],[[9,29]],[[9,9]],[[10,29]],[[10,10]],[[30,30]],[[30,31]],[[32,32]],[[32,31]],[[33,31]],[[33,33]],0,[[38,38]],[[39,39]],[[40,40]],[[41,41]],[[42,42]],[54,45],[46,45],[47,45],[55,45],[56,45],0,[[38,38],38],[[39,39],39],[[40,40],40],[[41,41],41],[[42,42],42],[[8,8]],[[8,29]],[[9,9]],[[9,29]],[[10,29]],[[10,10]],[[30,30]],[[30,31]],[[32,32]],[[32,31]],[[33,31]],[[33,33]],[[38,38]],[[39,39]],[[40,40]],[[41,41]],[[42,42]],0,[[]],[[]],[[]],[[]],[51,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],0,0,[[1,1,1],1],[[2,2,2],2],[[3,3,3],3],[[4,4,4],4],[[5,5,5],5],[[6,6,6],6],[[7,7,7],7],[[8,8,8],8],[[9,9,9],9],[[10,10,10],10],[[30,30,30],30],[[32,32,32],32],[[33,33,33],33],[[1,12,12],1],[[2,12,12],2],[[3,12,12],3],[[4,12,12],4],[[5,21,21],5],[[6,21,21],6],[[7,21,21],7],[[1,12],1],[[2,12],2],[[3,12],3],[[4,12],4],[[5,21],5],[[6,21],6],[[7,21],7],[[1,12],1],[[2,12],2],[[3,12],3],[[4,12],4],[[5,21],5],[[6,21],6],[[7,21],7],[56],[61,61],[62,62],[63,63],[51,51],[57,57],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[55,55],[79,79],[80,80],[81,81],[82,82],[37,37],[83,83],[84,84],[85,85],[86,86],[87,87],[45,45],[59,59],[88,88],[89,89],[56,56],[90,90],[91,91],[92,92],[28,28],[93,93],[43,43],[38,38],[39,39],[40,40],[41,41],[42,42],[11,11],[14,14],[15,15],[1,1],[2,2],[16,16],[17,17],[18,18],[19,19],[3,3],[4,4],[20,20],[22,22],[23,23],[24,24],[25,25],[26,26],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[30,30],[32,32],[33,33],[38,94],[39,94],[40,94],[11,94],[14,94],[15,94],[1,94],[2,94],[16,94],[17,94],[18,94],[3,94],[4,94],[20,94],[22,94],[23,94],[24,94],[25,94],[5,94],[6,94],[7,94],[8,94],[9,94],[10,94],[30,94],[32,94],[33,94],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[43,[[97,[44,96]]]],[38,[[97,[44,96]]]],[39,[[97,[44,96]]]],[40,[[97,[44,96]]]],[41,[[97,[44,96]]]],[42,[[97,[44,96]]]],[11,[[97,[44,96]]]],[14,[[97,[44,96]]]],[15,[[97,[44,96]]]],[1,[[97,[44,96]]]],[2,[[97,[44,96]]]],[16,[[97,[44,96]]]],[17,[[97,[44,96]]]],[18,[[97,[44,96]]]],[19,[[97,[44,96]]]],[3,[[97,[44,96]]]],[4,[[97,[44,96]]]],[20,[[97,[44,96]]]],[22,[[97,[44,96]]]],[23,[[97,[44,96]]]],[24,[[97,[44,96]]]],[25,[[97,[44,96]]]],[26,[[97,[44,96]]]],[5,[[97,[44,96]]]],[6,[[97,[44,96]]]],[7,[[97,[44,96]]]],[8,[[97,[44,96]]]],[9,[[97,[44,96]]]],[10,[[97,[44,96]]]],[30,[[97,[44,96]]]],[32,[[97,[44,96]]]],[33,[[97,[44,96]]]],[[51,51],98],[[71,71],98],[[1,1],38],[[2,2],39],[[3,3],41],[[4,4],42],[[5,5],38],[[6,6],39],[[7,7],40],[[8,8],38],[[9,9],39],[[10,10],40],[[30,30],38],[[32,32],39],[[33,33],40],[[1,1],38],[[2,2],39],[[3,3],41],[[4,4],42],[[5,5],38],[[6,6],39],[[7,7],40],[[8,8],38],[[9,9],39],[[10,10],40],[[30,30],38],[[32,32],39],[[33,33],40],[[1,1],38],[[2,2],39],[[3,3],41],[[4,4],42],[[5,5],38],[[6,6],39],[[7,7],40],[[8,8],38],[[9,9],39],[[10,10],40],[[30,30],38],[[32,32],39],[[33,33],40],[[1,1],38],[[2,2],39],[[3,3],41],[[4,4],42],[[5,5],38],[[6,6],39],[[7,7],40],[[8,8],38],[[9,9],39],[[10,10],40],[[30,30],38],[[32,32],39],[[33,33],40],[[1,1],38],[[2,2],39],[[3,3],41],[[4,4],42],[[5,5],38],[[6,6],39],[[7,7],40],[[8,8],38],[[9,9],39],[[10,10],40],[[30,30],38],[[32,32],39],[[33,33],40],[[1,1],38],[[2,2],39],[[3,3],41],[[4,4],42],[[5,5],38],[[6,6],39],[[7,7],40],[[8,8],38],[[9,9],39],[[10,10],40],[[30,30],38],[[32,32],39],[[33,33],40],[[15,52],2],[[16,52],1],[[17,52],3],[[18,52],4],[[23,52],5],[[24,52],6],[[25,52],7],[[15,52],2],[[16,52],1],[[17,52],3],[[18,52],4],[[23,52],5],[[24,52],6],[[25,52],7],0,[19,19],[26,26],[[54,89],13],[[46,89],13],[[47,89],13],[[45,89],13],[91,13],[56,89],[[],45],[99,15],[99,1],[99,2],[99,16],[99,18],[99,4],[99,8],[99,9],[99,10],[99,30],[99,32],[99,33],[[2,2],2],[[3,3],3],[[6,6],6],[[9,9],9],[[32,32],32],[71,100],[[43,101],[[103,[102]]]],[[38,101],[[103,[102]]]],[[39,101],[[103,[102]]]],[[40,101],[[103,[102]]]],[[41,101],[[103,[102]]]],[[42,101],[[103,[102]]]],[[11,101],[[103,[102]]]],[[14,101],[[103,[102]]]],[[15,101],[[103,[102]]]],[[1,101],[[103,[102]]]],[[2,101],[[103,[102]]]],[[16,101],[[103,[102]]]],[[17,101],[[103,[102]]]],[[18,101],[[103,[102]]]],[[19,101],[[103,[102]]]],[[3,101],[[103,[102]]]],[[4,101],[[103,[102]]]],[[20,101],[[103,[102]]]],[[22,101],[[103,[102]]]],[[23,101],[[103,[102]]]],[[24,101],[[103,[102]]]],[[25,101],[[103,[102]]]],[[26,101],[[103,[102]]]],[[5,101],[[103,[102]]]],[[6,101],[[103,[102]]]],[[7,101],[[103,[102]]]],[[8,101],[[103,[102]]]],[[9,101],[[103,[102]]]],[[10,101],[[103,[102]]]],[[30,101],[[103,[102]]]],[[32,101],[[103,[102]]]],[[33,101],[[103,[102]]]],0,[[]],[[],61],[[],62],[[],63],[[],51],[[],65],[[],67],[[],54],[[],68],[[],69],[[],70],[[],71],[[],27],[[],72],[[],74],[[],75],[[],76],[[],77],[[],78],[[],79],[[],80],[[],81],[[],37],[[],83],[[],84],[[],85],[[],86],[[],45],[[],59],[[],88],[[],56],[[],90],[[],91],[[],28],[[],93],[[],43],[[],38],[[],39],[[],40],[[],41],[[],42],[[],11],[[],14],[[],15],[[],1],[[],2],[[],16],[[],17],[[],18],[[],19],[[],3],[[],4],[[],20],[[],22],[[],23],[[],24],[[],25],[[],26],[[],5],[[],6],[[],7],[[],8],[[],9],[[],10],[[],30],[[],32],[[],33],[62],[57],[60],[69],[72],[86],[104],[105],[45],[106],[11],[14],[16],[19],[3],[4],[20],[22],[62],[60],[69],[72],[86],[105],[45],[106],[11],[14],[16],[19],[3],[4],[20],[22],[[],[[103,[68]]]],[[],[[103,[70]]]],[[],[[103,[75]]]],[[],[[103,[78]]]],[[],[[103,[43]]]],[[],[[103,[38]]]],[[],[[103,[39]]]],[[],[[103,[40]]]],[[],[[103,[41]]]],[[],[[103,[42]]]],[[],[[103,[11]]]],[[],[[103,[14]]]],[[],[[103,[15]]]],[[],[[103,[1]]]],[[],[[103,[2]]]],[[],[[103,[16]]]],[[],[[103,[17]]]],[[],[[103,[18]]]],[[],[[103,[19]]]],[[],[[103,[3]]]],[[],[[103,[4]]]],[[],[[103,[20]]]],[[],[[103,[22]]]],[[],[[103,[23]]]],[[],[[103,[24]]]],[[],[[103,[25]]]],[[],[[103,[26]]]],[[],[[103,[5]]]],[[],[[103,[6]]]],[[],[[103,[7]]]],[[],[[103,[8]]]],[[],[[103,[9]]]],[[],[[103,[10]]]],[[],[[103,[30]]]],[[],[[103,[32]]]],[[],[[103,[33]]]],[15,12],[16,12],[17,12],[18,12],[23,21],[24,21],[25,21],[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[5,5],21],[[6,6],21],[[7,7],21],[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[5,5],21],[[6,6],21],[[7,7],21],[[1,12],1],[[1,1],1],[[2,12],2],[[2,2],2],[[19,12],19],[[3,12],3],[[3,3],3],[[4,4],4],[[4,12],4],[[26,21],26],[[5,5],5],[[5,21],5],[[6,21],6],[[6,6],6],[[7,7],7],[[7,21],7],[[8,29],8],[[8,8],8],[[9,9],9],[[9,29],9],[[10,29],10],[[10,10],10],[[30,30],30],[[30,31],30],[[32,31],32],[[32,32],32],[[33,33],33],[[33,31],33],[[1,12]],[[1,1]],[[2,12]],[[2,2]],[[3,12]],[[3,3]],[[4,12]],[[4,4]],[[5,5]],[[5,21]],[[6,21]],[[6,6]],[[7,7]],[[7,21]],[[8,8]],[[8,29]],[[9,9]],[[9,29]],[[10,10]],[[10,29]],[[30,30]],[[30,31]],[[32,32]],[[32,31]],[[33,33]],[[33,31]],[[5,5],23],[[6,6,6],24],[[7,7,7,7],25],[[1,1],12],[[2,2],12],[[19,19],12],[[3,3],12],[[4,4],12],[[26,26],21],[[5,5],21],[[6,6],21],[[7,7],21],[[8,8],29],[[9,9],29],[[10,10],29],[[30,30],31],[[32,32],31],[[33,33],31],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[30,30],30],[[32,32],32],[[33,33],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,21,21,21],26],[55],[87],0,[[21,21],5],[[21,21,21],6],[[21,21,21,21],7],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[50,13],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],[107],0,0,[[51,51],13],[[70,70],13],[[71,71],13],[[74,74],13],[[75,75],13],[[78,78],13],[[89,89],13],[[43,43],13],[[38,38],13],[[39,39],13],[[40,40],13],[[41,41],13],[[42,42],13],[[11,11],13],[[14,14],13],[[15,15],13],[[1,1],13],[[2,2],13],[[16,16],13],[[17,17],13],[[18,18],13],[[19,19],13],[[3,3],13],[[4,4],13],[[20,20],13],[[22,22],13],[[23,23],13],[[24,24],13],[[25,25],13],[[26,26],13],[[5,5],13],[[6,6],13],[[7,7],13],[[8,8],13],[[9,9],13],[[10,10],13],[[30,30],13],[[32,32],13],[[33,33],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[108,[[103,[109,110]]]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[1,12],2],[[2,12],4],[[3,12],4],[[5,21],6],[[6,21],7],[[8,29],9],[[9,29],10],[[30,31],32],[[32,31],33],0,0,[[38,111],[[112,[44]]]],[[39,111],[[112,[44]]]],[[40,111],[[112,[44]]]],[[11,111],[[112,[44]]]],[[14,111],[[112,[44]]]],[[15,111],[[112,[44]]]],[[1,111],[[112,[44]]]],[[2,111],[[112,[44]]]],[[16,111],[[112,[44]]]],[[17,111],[[112,[44]]]],[[18,111],[[112,[44]]]],[[3,111],[[112,[44]]]],[[4,111],[[112,[44]]]],[[20,111],[[112,[44]]]],[[22,111],[[112,[44]]]],[[23,111],[[112,[44]]]],[[24,111],[[112,[44]]]],[[25,111],[[112,[44]]]],[[5,111],[[112,[44]]]],[[6,111],[[112,[44]]]],[[7,111],[[112,[44]]]],[[8,111],[[112,[44]]]],[[9,111],[[112,[44]]]],[[10,111],[[112,[44]]]],[[30,111],[[112,[44]]]],[[32,111],[[112,[44]]]],[[33,111],[[112,[44]]]],[[38,52],[[112,[44]]]],[[39,52],[[112,[44]]]],[[40,52],[[112,[44]]]],[[11,52],[[112,[44]]]],[[14,52],[[112,[44]]]],[[15,52],[[112,[44]]]],[[1,52],[[112,[44]]]],[[2,52],[[112,[44]]]],[[16,52],[[112,[44]]]],[[17,52],[[112,[44]]]],[[18,52],[[112,[44]]]],[[3,52],[[112,[44]]]],[[4,52],[[112,[44]]]],[[20,52],[[112,[44]]]],[[22,52],[[112,[44]]]],[[23,52],[[112,[44]]]],[[24,52],[[112,[44]]]],[[25,52],[[112,[44]]]],[[5,52],[[112,[44]]]],[[6,52],[[112,[44]]]],[[7,52],[[112,[44]]]],[[8,52],[[112,[44]]]],[[9,52],[[112,[44]]]],[[10,52],[[112,[44]]]],[[30,52],[[112,[44]]]],[[32,52],[[112,[44]]]],[[33,52],[[112,[44]]]],[[38,52],[[112,[44]]]],[[39,52],[[112,[44]]]],[[40,52],[[112,[44]]]],[[11,52],[[112,[44]]]],[[14,52],[[112,[44]]]],[[15,52],[[112,[44]]]],[[1,52],[[112,[44]]]],[[2,52],[[112,[44]]]],[[16,52],[[112,[44]]]],[[17,52],[[112,[44]]]],[[18,52],[[112,[44]]]],[[3,52],[[112,[44]]]],[[4,52],[[112,[44]]]],[[20,52],[[112,[44]]]],[[22,52],[[112,[44]]]],[[23,52],[[112,[44]]]],[[24,52],[[112,[44]]]],[[25,52],[[112,[44]]]],[[5,52],[[112,[44]]]],[[6,52],[[112,[44]]]],[[7,52],[[112,[44]]]],[[8,52],[[112,[44]]]],[[9,52],[[112,[44]]]],[[10,52],[[112,[44]]]],[[30,52],[[112,[44]]]],[[32,52],[[112,[44]]]],[[33,52],[[112,[44]]]],[38,52],[39,52],[40,52],[11,52],[14,52],[15,52],[1,52],[2,52],[16,52],[17,52],[18,52],[3,52],[4,52],[20,52],[22,52],[23,52],[24,52],[25,52],[5,52],[6,52],[7,52],[8,52],[9,52],[10,52],[30,52],[32,52],[33,52],[[38,111],[[112,[44]]]],[[39,111],[[112,[44]]]],[[40,111],[[112,[44]]]],[[11,111],[[112,[44]]]],[[14,111],[[112,[44]]]],[[15,111],[[112,[44]]]],[[1,111],[[112,[44]]]],[[2,111],[[112,[44]]]],[[16,111],[[112,[44]]]],[[17,111],[[112,[44]]]],[[18,111],[[112,[44]]]],[[3,111],[[112,[44]]]],[[4,111],[[112,[44]]]],[[20,111],[[112,[44]]]],[[22,111],[[112,[44]]]],[[23,111],[[112,[44]]]],[[24,111],[[112,[44]]]],[[25,111],[[112,[44]]]],[[5,111],[[112,[44]]]],[[6,111],[[112,[44]]]],[[7,111],[[112,[44]]]],[[8,111],[[112,[44]]]],[[9,111],[[112,[44]]]],[[10,111],[[112,[44]]]],[[30,111],[[112,[44]]]],[[32,111],[[112,[44]]]],[[33,111],[[112,[44]]]],[57,[[112,[57]]]],[60,[[112,[60]]]],0,0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[61,101],[[103,[102]]]],[[63,101],[[103,[102]]]],[[51,101],[[103,[102]]]],[[113,101],[[103,[102]]]],[[113,101],[[103,[102]]]],[[114,101],[[103,[102]]]],[[114,101],[[103,[102]]]],[[53,101],[[103,[102]]]],[[53,101],[[103,[102]]]],[[53,101],[[103,[102]]]],[[53,101],[[103,[102]]]],[[57,101],[[103,[102]]]],[[64,101],[[103,[102]]]],[[65,101],[[103,[102]]]],[[66,101],[[103,[102]]]],[[60,101],[[103,[102]]]],[[67,101],[[103,[102]]]],[[68,101],[[103,[102]]]],[[70,101],[[103,[102]]]],[[70,101],[[103,[102]]]],[[71,101],[[103,[102]]]],[[71,101],[[103,[102]]]],[[73,101],[[103,[102]]]],[[73,101],[[103,[102]]]],[[74,101],[[103,[102]]]],[[75,101],[[103,[102]]]],[[76,101],[[103,[102]]]],[[77,101],[[103,[102]]]],[[78,101],[[103,[102]]]],[[79,101],[[103,[102]]]],[[80,101],[[103,[102]]]],[[82,101],[[103,[102]]]],[[37,101],[[103,[102]]]],[[83,101],[[103,[102]]]],[[85,101],[[103,[102]]]],[[34,101],[[103,[102]]]],[[45,101],[[103,[102]]]],[[89,101],[[103,[102]]]],[[92,101],[[103,[102]]]],[[28,101],[[103,[102]]]],[[115,101],[[103,[102]]]],[[115,101],[[103,[102]]]],[[43,101],[[103,[102]]]],[[38,101],[[103,[102]]]],[[38,101],[[103,[102]]]],[[39,101],[[103,[102]]]],[[39,101],[[103,[102]]]],[[40,101],[[103,[102]]]],[[40,101],[[103,[102]]]],[[41,101],[[103,[102]]]],[[41,101],[[103,[102]]]],[[42,101],[[103,[102]]]],[[42,101],[[103,[102]]]],[[11,101],[[103,[102]]]],[[11,101],[[103,[102]]]],[[14,101],[[103,[102]]]],[[14,101],[[103,[102]]]],[[15,101],[[103,[102]]]],[[15,101],[[103,[102]]]],[[1,101],[[103,[102]]]],[[1,101],[[103,[102]]]],[[2,101],[[103,[102]]]],[[2,101],[[103,[102]]]],[[16,101],[[103,[102]]]],[[16,101],[[103,[102]]]],[[17,101],[[103,[102]]]],[[17,101],[[103,[102]]]],[[18,101],[[103,[102]]]],[[18,101],[[103,[102]]]],[[19,101],[[103,[102]]]],[[19,101],[[103,[102]]]],[[3,101],[[103,[102]]]],[[3,101],[[103,[102]]]],[[4,101],[[103,[102]]]],[[4,101],[[103,[102]]]],[[20,101],[[103,[102]]]],[[20,101],[[103,[102]]]],[[22,101],[[103,[102]]]],[[22,101],[[103,[102]]]],[[23,101],[[103,[102]]]],[[23,101],[[103,[102]]]],[[24,101],[[103,[102]]]],[[24,101],[[103,[102]]]],[[25,101],[[103,[102]]]],[[25,101],[[103,[102]]]],[[26,101],[[103,[102]]]],[[26,101],[[103,[102]]]],[[5,101],[[103,[102]]]],[[5,101],[[103,[102]]]],[[6,101],[[103,[102]]]],[[6,101],[[103,[102]]]],[[7,101],[[103,[102]]]],[[7,101],[[103,[102]]]],[[8,101],[[103,[102]]]],[[8,101],[[103,[102]]]],[[9,101],[[103,[102]]]],[[9,101],[[103,[102]]]],[[10,101],[[103,[102]]]],[[10,101],[[103,[102]]]],[[30,101],[[103,[102]]]],[[30,101],[[103,[102]]]],[[32,101],[[103,[102]]]],[[32,101],[[103,[102]]]],[[33,101],[[103,[102]]]],[[33,101],[[103,[102]]]],[[],55],0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[116],[[],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],71],[[]],[117,71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,15],[17,15],[[],1],[[],1],[[]],[[]],[[],2],[[],2],[[],2],[3,2],[[]],[15,17],[[]],[11,17],[14,18],[[]],[[]],[118,3],[[]],[4,3],[[],3],[[],3],[[],3],[2,3],[[],4],[[],4],[19,4],[119,4],[[],4],[[],4],[[],4],[[]],[[],4],[118,4],[[],4],[[],4],[[]],[[]],[[]],[[]],[20,24],[22,25],[[]],[[]],[[],5],[[],5],[[]],[[],6],[[]],[[],6],[[],6],[[],7],[[],7],[26,7],[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[]],[[],8],[[],9],[[]],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[],10],[[],30],[[],30],[[]],[[],32],[[]],[[],32],[[],32],[[],33],[[],33],[[],33],[[]],[[],33],[[],33],[[],33],[14,19],[22,26],[12,11],[12,15],[12,1],[12,16],[12,17],[21,20],[21,23],[21,24],[21,5],[[12,1],11],[[21,5],20],[[],1],[[],2],[[],19],[[],3],[[],4],[[],26],[[],5],[[],6],[[],7],[[],8],[[],9],[[],10],[[],30],[[],32],[[],33],[[2,12],14],[[2,12],15],[[2,12],17],[[2,12],18],[[2,12],19],[[6,21],22],[[6,21],24],[[6,21],25],[[6,21],26],[[1,1,1],11],[[3,3,3,3],14],[[2,2,2],15],[[1,1],16],[[3,3,3],17],[[4,4,4,4],18],[[5,5,5],20],[[6,6,6,6],22],[[5,5],23],[[6,6,6],24],[[7,7,7,7],25],[[],11],[[],14],[[],15],[[],16],[[],17],[[],18],[[],20],[[],22],[[],23],[[],24],[[],25],[[],11],[[],14],[[],15],[[],16],[[],17],[[],18],[[],20],[[],22],[[],23],[[],24],[[],25],[[],11],[[],14],[[],15],[[],16],[[],17],[[],18],[[],20],[[],22],[[],23],[[],24],[[],25],[55,54],[55,54],[[[120,[[51,[55]]]]],59],[100,71],[100,71],[2,15],[1,16],[2,17],[4,18],[5,23],[6,24],[7,25],[[43,12,12,12],15],[[43,12,12,12],17],[[43,12,12,12],18],[[43,12,12,12],19],[[43,21,21,21],24],[[43,21,21,21],25],[[43,21,21,21],26],[16,11],[16,15],[16,17],[23,20],[23,24],[[16,1],11],[[23,5],20],[15,11],[15,14],[15,16],[15,18],[15,19],[24,20],[24,22],[24,23],[24,25],[24,26],[[15,2],14],[[24,6],22],[17,11],[17,16],[17,18],[17,19],[18,14],[18,15],[18,17],[18,19],[25,22],[25,24],[25,26],[[121,117],71],[[],15],[[],1],[[],2],[[],16],[[],18],[[],4],[[],8],[[],9],[[],10],[[],30],[[],32],[[],33],[19,14],[19,15],[19,17],[19,18],[26,22],[26,24],[26,25],[44,[[112,[38]]]],[44,[[112,[39]]]],[44,[[112,[40]]]],[44,[[112,[11]]]],[44,[[112,[14]]]],[44,[[112,[15]]]],[44,[[112,[1]]]],[44,[[112,[2]]]],[44,[[112,[16]]]],[44,[[112,[17]]]],[44,[[112,[18]]]],[44,[[112,[19]]]],[44,[[112,[3]]]],[44,[[112,[4]]]],[44,[[112,[20]]]],[44,[[112,[22]]]],[44,[[112,[23]]]],[44,[[112,[24]]]],[44,[[112,[25]]]],[44,[[112,[26]]]],[44,[[112,[5]]]],[44,[[112,[6]]]],[44,[[112,[7]]]],[44,[[112,[8]]]],[44,[[112,[9]]]],[44,[[112,[10]]]],[44,[[112,[30]]]],[44,[[112,[32]]]],[44,[[112,[33]]]],[19,85],[[2,2],19],[[6,6],26],[[1,1],19],[[5,5],26],[[2,2],19],[[6,6],26],[[19,2],14],[[19,2],18],[[26,6],22],[[26,6],25],[12,14],[12,15],[12,17],[12,18],[12,19],[21,22],[21,24],[21,25],[21,26],[12,14],[12,15],[12,17],[12,18],[12,19],[21,22],[21,24],[21,25],[21,26],[12,14],[12,15],[12,17],[12,18],[12,19],[21,22],[21,24],[21,25],[21,26],[2,85],[1,11],[2,14],[1,15],[1,17],[2,18],[5,20],[6,22],[5,24],[6,25],[[1,12],16],[[5,21],23],[[1,12,1],11],[[1,12,1],15],[[1,12,1],17],[[5,21,5],20],[[5,21,5],24],[[2,19,2],14],[[2,19,2],18],[[6,26,6],22],[[6,26,6],25],[2,19],[6,26],[[],1],[[],2],[[],19],[[],3],[[],4],[[],26],[[],5],[[],6],[[],7],[[],8],[[],9],[[],10],[[],30],[[],32],[[],33],[111,[[103,[71]]]],[111,[[103,[71,122]]]],[2,85],[1,11],[2,14],[1,15],[1,17],[2,18],[5,20],[6,22],[5,24],[6,25],[4,19],[7,26],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[[12,12,12,12],19],[[21,21,21,21],26],[89,31],[78,124],[75,112],[[125,78],124],[[126,75],112],[[127,75],112],[[128,55,89],112],[[54,89],112],[27,126],[[46,89],112],[[47,89],112],[[55,89],[[112,[124]]]],[[82,30],[[112,[89]]]],[88,59],[[90,71],[[112,[[120,[[51,[124]]]]]]]],[91,58],[75,129],[78,130],[75,130],[[88,71],[[120,[[51,[55]]]]]],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[111,112],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[[],121],[78,124],[75,112],[51],[[125,78],124],[[127,75],112],[[128,55,89],112],[[54,89],112],[27,127],[[47,89],112],[[55,89],[[112,[124]]]],[93],[93],[93],[93],[93],[93],[43,131],[38,131],[39,131],[40,131],[41,131],[42,131],[11,131],[14,131],[15,131],[1,131],[2,131],[16,131],[17,131],[18,131],[19,131],[3,131],[4,131],[20,131],[22,131],[23,131],[24,131],[25,131],[26,131],[5,131],[6,131],[7,131],[8,131],[9,131],[10,131],[30,131],[32,131],[33,131],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],[[],132],0,[70],[71],[74],[75],[78],[89],[43],[38],[39],[40],[41],[42],[8],[9],[10],[30],[32],[33],0,0,[[],71],[[],71],[35,71],[92,71],0,0,0,0,[71,[[112,[71]]]],[89,31],[[1,52]],[[2,52]],[[3,52]],[[4,52]],[[5,52]],[[6,52]],[[7,52]],[[8,52]],[[9,52]],[[10,52]],[[30,52]],[[32,52]],[[33,52]],0,[[1,52]],[[2,52]],[[3,52]],[[4,52]],[[5,52]],[[6,52]],[[7,52]],[[8,52]],[[9,52]],[[10,52]],[[30,52]],[[32,52]],[[33,52]],[88],[91],[93],[93],[93],[93],[[35,93]],[[34,93]],[93],[93],[93],0,[[36,93]],[[128,55,89],112],[[54,89],112],[[47,89],112],[[55,89,124],13],[[90,71,87],[[112,[87]]]],[91],[36],[36],[36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[43,96]]],[[97,[48,96]]]],[[[97,[38,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[39,96]]],[[97,[48,96]]]],[[[97,[40,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[41,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[42,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[11,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[14,96]]],[[97,[48,96]]]],[[[97,[15,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[1,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[2,96]]],[[97,[48,96]]]],[[[97,[16,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[17,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[18,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[19,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[3,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[4,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[20,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[22,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[23,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[24,96]]],[[97,[48,96]]]],[[[97,[25,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[26,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[5,96]]],[[97,[48,96]]]],[[[97,[6,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[7,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[8,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[9,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[10,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[30,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[32,96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[33,96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[]],[74,134],[85,135],[51],[[]],[[]],[[]],[[]],[[]],[[]],[[[97,[43,96]]],[[97,[44,96]]]],[[[97,[38,96]]],[[97,[44,96]]]],[[[97,[39,96]]],[[97,[44,96]]]],[[[97,[40,96]]],[[97,[44,96]]]],[[[97,[41,96]]],[[97,[44,96]]]],[[[97,[42,96]]],[[97,[44,96]]]],[[[97,[11,96]]],[[97,[44,96]]]],[[[97,[14,96]]],[[97,[44,96]]]],[[[97,[15,96]]],[[97,[44,96]]]],[[[97,[1,96]]],[[97,[44,96]]]],[[[97,[2,96]]],[[97,[44,96]]]],[[[97,[16,96]]],[[97,[44,96]]]],[[[97,[17,96]]],[[97,[44,96]]]],[[[97,[18,96]]],[[97,[44,96]]]],[[[97,[19,96]]],[[97,[44,96]]]],[[[97,[3,96]]],[[97,[44,96]]]],[[[97,[4,96]]],[[97,[44,96]]]],[[[97,[20,96]]],[[97,[44,96]]]],[[[97,[22,96]]],[[97,[44,96]]]],[[[97,[23,96]]],[[97,[44,96]]]],[[[97,[24,96]]],[[97,[44,96]]]],[[[97,[25,96]]],[[97,[44,96]]]],[[[97,[26,96]]],[[97,[44,96]]]],[[[97,[5,96]]],[[97,[44,96]]]],[[[97,[6,96]]],[[97,[44,96]]]],[[[97,[7,96]]],[[97,[44,96]]]],[[[97,[8,96]]],[[97,[44,96]]]],[[[97,[9,96]]],[[97,[44,96]]]],[[[97,[10,96]]],[[97,[44,96]]]],[[[97,[30,96]]],[[97,[44,96]]]],[[[97,[32,96]]],[[97,[44,96]]]],[[[97,[33,96]]],[[97,[44,96]]]],[54,55],[91,90],[11,11],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[22,22],[23,23],[24,24],[25,25],[26,26],[[56,89],13],[11,13],[14,13],[15,13],[1,13],[2,13],[16,13],[17,13],[18,13],[19,13],[3,13],[4,13],[20,13],[22,13],[23,13],[24,13],[25,13],[26,13],[5,13],[6,13],[7,13],[11,13],[14,13],[15,13],[1,13],[2,13],[16,13],[17,13],[18,13],[19,13],[3,13],[4,13],[20,13],[22,13],[23,13],[24,13],[25,13],[26,13],[5,13],[6,13],[7,13],[1,38],[2,39],[3,41],[4,42],[5,38],[6,39],[7,40],[19,13],[26,13],[1,31],[2,31],[3,31],[4,31],[5,31],[6,31],[7,31],[8,31],[9,31],[10,31],[71,13],[1,13],[2,13],[19,13],[3,13],[4,13],[26,13],[5,13],[6,13],[7,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[128,55],136],[54,136],[46,136],[47,136],[55,136],[38,137],[39,137],[40,137],[11,137],[14,137],[15,137],[1,137],[2,137],[16,137],[17,137],[18,137],[3,137],[4,137],[20,137],[22,137],[23,137],[24,137],[25,137],[5,137],[6,137],[7,137],[8,137],[9,137],[10,137],[30,137],[32,137],[33,137],[[128,55],136],[54,136],[47,136],[55,136],[[128,55,[133,[45]]],138],[[54,[133,[45]]],138],[[47,[133,[45]]],138],[[55,[133,[45]]],139],[56,140],[[[133,[45]]]],[[128,55,[133,[45]]],141],[[54,[133,[45]]],141],[[46,[133,[45]]],141],[[46,[133,[45]]]],[[47,[133,[45]]],141],[[47,[133,[45]]]],[[47,[133,[45]]]],[[55,[133,[45]]],142],[[56,45],143],[[29,29],8],[[29,29,29],9],[[29,29,29,29],10],0,[[56,89]],[56,144],0,[55,145],0,[1,12],[2,12],[19,12],[3,12],[4,12],[26,21],[5,21],[6,21],[7,21],[1,12],[2,12],[19,12],[3,12],[4,12],[26,21],[5,21],[6,21],[7,21],[1,12],[2,12],[19,12],[3,12],[4,12],[26,21],[5,21],[6,21],[7,21],[[1,1,12],1],[[2,2,12],2],[[19,19,12],19],[[3,3,12],3],[[4,4,12],4],[[26,26,21],26],[[5,5,21],5],[[6,6,21],6],[[7,7,21],7],[[75,146,144]],[[75,147],148],[[78,147],148],[[2,2,2],14],[[2,2,2],18],[[6,6,6],22],[[6,6,6],25],[[2,2,2],14],[[2,2,2],18],[[6,6,6],22],[[6,6,6],25],[[2,2,2],14],[[2,2,2],18],[[6,6,6],22],[[6,6,6],25],[[2,2,2],14],[[2,2,2],18],[[6,6,6],22],[[6,6,6],25],[93],[57,57],[60,60],[[1,1],16],[[2,2,2],15],[[3,3,3],17],[[4,4,4,4],18],0,0,0,0,[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[30,30],30],[[32,32],32],[[33,33],33],0,[1,12],[2,12],[3,12],[4,12],[5,21],[6,21],[7,21],[8,29],[9,29],[10,29],[30,31],[32,31],[33,31],0,[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[8,8],8],[[9,9],9],[[10,10],10],[[30,30],30],[[32,32],32],[[33,33],33],[1,12],[2,12],[3,12],[4,12],[5,21],[6,21],[7,21],[8,29],[9,29],[10,29],[30,31],[32,31],[33,31],[[11,15]],[[11,17]],[[11,11]],[[14,14]],[[14,18]],[[15,2]],[[15,11]],[[15,3],3],[[15,15]],[[15,12]],[[1,12],1],[[1,1],1],[[2,2],2],[[2,12],2],[[16,1]],[[16,16]],[[16,12]],[[17,12]],[[17,2],2],[[17,17]],[[17,11]],[[17,3]],[[18,18]],[[18,12]],[[18,4]],[[18,14]],[[19,12],19],[[19,3]],[[19,2]],[[19,19],19],[[3,12],3],[[3,3],3],[[4,12],4],[[4,4],4],[[20,20]],[[20,24]],[[22,25]],[[22,22]],[[23,21]],[[23,23]],[[23,5]],[[24,20]],[[24,21]],[[24,6]],[[24,24]],[[25,21]],[[25,22]],[[25,7]],[[25,25]],[[26,26],26],[[26,6]],[[26,21],26],[[5,21],5],[[5,5],5],[[6,6],6],[[6,21],6],[[7,21],7],[[7,7],7],[[8,8],8],[[8,29],8],[[9,29],9],[[9,9],9],[[10,29],10],[[10,10],10],[[30,31],30],[[30,30],30],[[32,31],32],[[32,32],32],[[33,33],33],[[33,31],33],[[1,1,1],1],[[2,2,2],2],[[3,3,3],3],[[4,4,4],4],[[5,5,5],5],[[6,6,6],6],[[7,7,7],7],[[15,12]],[[15,15]],[[1,12]],[[1,1]],[[2,12]],[[2,2]],[[16,12]],[[16,16]],[[17,12]],[[17,17]],[[18,18]],[[18,12]],[[19,19]],[[3,3]],[[3,12]],[[4,12]],[[4,4]],[[23,21]],[[23,23]],[[24,21]],[[24,24]],[[25,25]],[[25,21]],[[26,26]],[[5,5]],[[5,21]],[[6,6]],[[6,21]],[[7,7]],[[7,21]],[[8,29]],[[8,8]],[[9,29]],[[9,9]],[[10,10]],[[10,29]],[[30,31]],[[30,30]],[[32,32]],[[32,31]],[[33,31]],[[33,33]],[[16,16],16],[[23,23],23],[[15,15],15],[[17,17],17],[[24,24],24],[[18,18],18],[[25,25],25],[[19,19],19],[[26,26],26],[[15,12],15],[[16,12],16],[[17,12],17],[[18,12],18],[[23,21],23],[[24,21],24],[[25,21],25],[[16,1],1],[[23,5],5],[[15,2],2],[[17,2],2],[[19,2],2],[[24,6],6],[[26,6],6],[[15,3],3],[[17,3],3],[[19,3],3],[[18,4],4],[[25,7],7],[[],149],[[],149],[35,149],[34,111],[92,149],0,0,[[38,52],[[112,[111]]]],[[39,52],[[112,[111]]]],[[40,52],[[112,[111]]]],[[11,52],[[112,[111]]]],[[14,52],[[112,[111]]]],[[15,52],[[112,[111]]]],[[1,52],[[112,[111]]]],[[2,52],[[112,[111]]]],[[16,52],[[112,[111]]]],[[17,52],[[112,[111]]]],[[18,52],[[112,[111]]]],[[3,52],[[112,[111]]]],[[4,52],[[112,[111]]]],[[20,52],[[112,[111]]]],[[22,52],[[112,[111]]]],[[23,52],[[112,[111]]]],[[24,52],[[112,[111]]]],[[25,52],[[112,[111]]]],[[5,52],[[112,[111]]]],[[6,52],[[112,[111]]]],[[7,52],[[112,[111]]]],[[8,52],[[112,[111]]]],[[9,52],[[112,[111]]]],[[10,52],[[112,[111]]]],[[30,52],[[112,[111]]]],[[32,52],[[112,[111]]]],[[33,52],[[112,[111]]]],[15],[1,1],[2,2],[16],[17],[18],[19,19],[3,3],[4,4],[23],[24],[25],[26,26],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[[],51],[[],128],[111,[[103,[70,73]]]],[[],71],[[[112,[149]]],74],[[[112,[149]]],75],[[[112,[149]]],78],[[145,112],55],[[[75,[77]]],80],[[30,1,[75,[77]]],82],[[12,1,12],37],[[],87],[[],35],[[],90],[[],91],[[],93],[[13,13],38],[[13,13,13],39],[[13,13,13,13],40],[[13,13,13],41],[[13,13,13,13],42],[[12,12],1],[[12,12,12],2],[[12,12,12],3],[[12,12,12,12],4],[[21,21],5],[[21,21,21],6],[[21,21,21,21],7],[[29,29],8],[[29,29,29],9],[[29,29,29,29],10],[[31,31],30],[[31,31,31],32],[[31,31,31,31],33],[150,87],[141,112],[138,112],[142,112],[139,112],[140,112],[143,112],[[],71],[1,1],[2,2],[19,19],[3,3],[4,4],[26,26],[5,5],[6,6],[7,7],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[74,151]],[38,38],[39,39],[40,40],[41,41],[42,42],[8],[9],[10],[30],[32],[33],[[12,12,12,12,12,12],18],[[21,21,21,21,21,21],25],[[12,12,12,12,12,12],18],[[21,21,21,21,21,21],25],[[12,12,12,12,12,12],18],[[21,21,21,21,21,21],25],[[51,51],[[112,[98]]]],[[71,71],[[112,[98]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],0,0,0,[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[111,[[103,[44,152]]]],[1,1],[5,5],[8,8],[[1,1],12],[[5,5],21],[[8,8],29],[[12,12,12],18],[[21,21,21],25],[[12,12,12],18],[[21,21,21],25],[[12,12,12],18],[[21,21,21],25],[[12,12,12],18],[[21,21,21],25],[[12,12,12,12],18],[[21,21,21,21],25],[[12,12,12,12],18],[[21,21,21,21],25],[[12,12,12,12],18],[[21,21,21,21],25],[[65,[75,[64]],12]],[[1,12],1],[[2,12],2],[[3,12],3],[[4,12],4],[[5,21],5],[[6,21],6],[[7,21],7],[[],11],[[],14],[[],15],[[],15],[[],1],[[],1],[[],2],[[],2],[[],16],[[],16],[[],17],[[],17],[[],18],[[],18],[[],19],[[],19],[[],3],[[],3],[[],4],[[],4],[[],20],[[],22],[[],23],[[],23],[[],24],[[],24],[[],25],[[],25],[[],26],[[],26],[[],5],[[],5],[[],6],[[],6],[[],7],[[],7],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[],30],[[],30],[[],32],[[],32],[[],33],[[],33],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[18,2],2],[[25,6],6],[153],[153],[[12,12,12,12],19],0,0,0,[71,117],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[[15,99]],[[1,99]],[[2,99]],[[16,99]],[[18,99]],[[4,99]],[[8,99]],[[9,99]],[[10,99]],[[30,99]],[[32,99]],[[33,99]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[43,154],[38,154],[39,154],[40,154],[41,154],[42,154],[11,154],[14,154],[15,154],[1,154],[2,154],[16,154],[17,154],[18,154],[19,154],[3,154],[4,154],[20,154],[22,154],[23,154],[24,154],[25,154],[26,154],[5,154],[6,154],[7,154],[8,154],[9,154],[10,154],[30,154],[32,154],[33,154],[[[97,[43,96]]],155],[[[97,[38,96]]],155],[[[97,[39,96]]],155],[[[97,[40,96]]],155],[[[97,[41,96]]],155],[[[97,[42,96]]],155],[[[97,[11,96]]],155],[[[97,[14,96]]],155],[[[97,[15,96]]],155],[[[97,[1,96]]],155],[[[97,[2,96]]],155],[[[97,[16,96]]],155],[[[97,[17,96]]],155],[[[97,[18,96]]],155],[[[97,[19,96]]],155],[[[97,[3,96]]],155],[[[97,[4,96]]],155],[[[97,[20,96]]],155],[[[97,[22,96]]],155],[[[97,[23,96]]],155],[[[97,[24,96]]],155],[[[97,[25,96]]],155],[[[97,[26,96]]],155],[[[97,[5,96]]],155],[[[97,[6,96]]],155],[[[97,[7,96]]],155],[[[97,[8,96]]],155],[[[97,[9,96]]],155],[[[97,[10,96]]],155],[[[97,[30,96]]],155],[[[97,[32,96]]],155],[[[97,[33,96]]],155],[[38,44],[[112,[13]]]],[[39,44],[[112,[13]]]],[[40,44],[[112,[13]]]],[[11,44],[[112,[13]]]],[[14,44],[[112,[13]]]],[[15,44],[[112,[13]]]],[[1,44],[[112,[13]]]],[[2,44],[[112,[13]]]],[[16,44],[[112,[13]]]],[[17,44],[[112,[13]]]],[[18,44],[[112,[13]]]],[[19,44],[[112,[13]]]],[[3,44],[[112,[13]]]],[[4,44],[[112,[13]]]],[[20,44],[[112,[13]]]],[[22,44],[[112,[13]]]],[[23,44],[[112,[13]]]],[[24,44],[[112,[13]]]],[[25,44],[[112,[13]]]],[[26,44],[[112,[13]]]],[[5,44],[[112,[13]]]],[[6,44],[[112,[13]]]],[[7,44],[[112,[13]]]],[[8,44],[[112,[13]]]],[[9,44],[[112,[13]]]],[[10,44],[[112,[13]]]],[[30,44],[[112,[13]]]],[[32,44],[[112,[13]]]],[[33,44],[[112,[13]]]],[43,156],[38,156],[39,156],[40,156],[41,156],[42,156],[11,156],[14,156],[15,156],[1,156],[2,156],[16,156],[17,156],[18,156],[19,156],[3,156],[4,156],[20,156],[22,156],[23,156],[24,156],[25,156],[26,156],[5,156],[6,156],[7,156],[8,156],[9,156],[10,156],[30,156],[32,156],[33,156],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[6,6],6],[[7,7],7],[[1,1],1],[[1,12],1],[[2,2],2],[[2,12],2],[[3,3],3],[[3,12],3],[[4,12],4],[[4,4],4],[[5,5],5],[[5,21],5],[[6,21],6],[[6,6],6],[[7,7],7],[[7,21],7],[[8,29],8],[[8,8],8],[[9,9],9],[[9,29],9],[[10,10],10],[[10,29],10],[[30,31],30],[[30,30],30],[[32,31],32],[[32,32],32],[[33,33],33],[[33,31],33],[[1,1]],[[1,12]],[[2,12]],[[2,2]],[[3,12]],[[3,3]],[[4,12]],[[4,4]],[[5,5]],[[5,21]],[[6,21]],[[6,6]],[[7,21]],[[7,7]],[[8,8]],[[8,29]],[[9,9]],[[9,29]],[[10,29]],[[10,10]],[[30,31]],[[30,30]],[[32,31]],[[32,32]],[[33,33]],[[33,31]],[[128,55,89],112],[[54,89],112],[27,[[97,[157,96]]]],[[47,89],112],[[55,89,[112,[124]]],13],[[90,71],[[112,[87]]]],0,0,[[1,1],1],[[5,5],5],[[8,8],8],0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[15,52],2],[[16,52],1],[[17,52],3],[[18,52],4],[[23,52],5],[[24,52],6],[[25,52],7],[93,[[103,[158]]]],[[36,93],[[103,[158]]]],[[35,93],[[103,[158]]]],[[34,93],[[103,[158]]]],0,[93,[[103,[158]]]],[93,[[103,[158]]]],0,[[38,1,1],1],[[39,2,2],2],[[41,3,3],3],[[42,4,4],4],[[38,5,5],5],[[39,6,6],6],[[40,7,7],7],[[38,8,8],8],[[39,9,9],9],[[40,10,10],10],[[38,30,30],30],[[39,32,32],32],[[40,33,33],33],[[65,66]],[[84,12]],[68,103],[70,103],[43,103],[38,103],[39,103],[40,103],[41,103],[42,103],[11,103],[14,103],[15,103],[1,103],[2,103],[16,103],[17,103],[18,103],[19,103],[3,103],[4,103],[20,103],[22,103],[23,103],[24,103],[25,103],[26,103],[5,103],[6,103],[7,103],[8,103],[9,103],[10,103],[30,103],[32,103],[33,103],[[82,30,[112,[89]]]],[[43,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[38,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[39,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[40,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[41,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[42,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[11,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[14,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[15,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[1,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[2,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[16,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[17,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[18,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[19,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[3,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[4,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[20,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[22,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[23,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[24,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[25,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[26,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[5,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[6,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[7,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[8,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[9,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[10,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[30,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[32,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[33,[97,[44,96]]],[[103,[[97,[44,96]]]]]],[[8,29]],[[8,159]],[[8,31]],[[8,160]],[[8,8]],[[8,124]],[[8,161]],[[8,30]],[[9,31]],[[9,124]],[[9,29]],[[9,161]],[[9,160]],[[9,159]],[[9,9]],[[9,32]],[[10,33]],[[10,31]],[[10,10]],[[10,124]],[[10,159]],[[10,29]],[[10,161]],[[10,160]],[[30,30]],[[30,31]],[[30,124]],[[30,8]],[[30,161]],[[30,160]],[[30,159]],[[30,29]],[[32,29]],[[32,159]],[[32,32]],[[32,160]],[[32,161]],[[32,124]],[[32,31]],[[32,9]],[[33,10]],[[33,124]],[[33,159]],[[33,33]],[[33,161]],[[33,31]],[[33,160]],[[33,29]],[[8,124]],[[8,31]],[[8,160]],[[8,30]],[[8,29]],[[8,159]],[[8,161]],[[8,8]],[[9,9]],[[9,124]],[[9,29]],[[9,161]],[[9,159]],[[9,31]],[[9,160]],[[9,32]],[[10,159]],[[10,29]],[[10,31]],[[10,160]],[[10,124]],[[10,33]],[[10,161]],[[10,10]],[[30,29]],[[30,159]],[[30,30]],[[30,160]],[[30,124]],[[30,161]],[[30,31]],[[30,8]],[[32,31]],[[32,124]],[[32,160]],[[32,29]],[[32,9]],[[32,32]],[[32,161]],[[32,159]],[[33,124]],[[33,33]],[[33,161]],[[33,31]],[[33,159]],[[33,29]],[[33,10]],[[33,160]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],0,[[19,19,12],19],[[26,26,21],26],[13,38],[13,39],[13,40],[13,41],[13,42],[12,1],[12,2],[12,3],[12,4],[21,5],[21,6],[21,7],[29,8],[29,9],[29,10],[31,30],[31,32],[31,33],0,0,[[15,15]],[[1,1],1],[[1,12],1],[[2,2],2],[[2,12],2],[[16,16]],[[17,17]],[[18,18]],[[19,19],19],[[3,3],3],[[3,12],3],[[4,12],4],[[4,4],4],[[23,23]],[[24,24]],[[25,25]],[[26,26],26],[[5,21],5],[[5,5],5],[[6,6],6],[[6,21],6],[[7,7],7],[[7,21],7],[[8,29],8],[[8,8],8],[[9,29],9],[[9,9],9],[[10,29],10],[[10,10],10],[[30,31],30],[[30,30],30],[[32,31],32],[[32,32],32],[[33,31],33],[[33,33],33],[[15,15]],[[1,12]],[[1,1]],[[2,2]],[[2,12]],[[16,16]],[[17,17]],[[18,18]],[[3,12]],[[3,3]],[[4,12]],[[4,4]],[[23,23]],[[24,24]],[[25,25]],[[5,5]],[[5,21]],[[6,6]],[[6,21]],[[7,7]],[[7,21]],[[8,8]],[[8,29]],[[9,29]],[[9,9]],[[10,29]],[[10,10]],[[30,31]],[[30,30]],[[32,32]],[[32,31]],[[33,33]],[[33,31]],[[16,16],16],[[23,23],23],[[15,15],15],[[17,17],17],[[24,24],24],[[18,18],18],[[25,25],25],[[],15],[[],15],[[],1],[[],1],[[],2],[[],2],[[],16],[[],16],[[],17],[[],17],[[],18],[[],18],[[],19],[[],19],[[],3],[[],3],[[],4],[[],4],[[],23],[[],23],[[],24],[[],24],[[],25],[[],25],[[],26],[[],26],[[],5],[[],5],[[],6],[[],6],[[],7],[[],7],[[],8],[[],8],[[],9],[[],9],[[],10],[[],10],[[],30],[[],30],[[],32],[[],32],[[],33],[[],33],0,[[],34],[34,34],0,0,0,0,[71,121],[1],[2],[19],[3],[4],[26],[5],[6],[7],[8],[9],[10],[30],[32],[33],[19],[26],[11],[14],[15],[16],[17],[18],[20],[22],[23],[24],[25],[11],[14],[15],[16],[17],[18],[20],[22],[23],[24],[25],[[19,43]],[[26,43]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[18],[22],[25],[19,2],[26,6],[71,[[103,[111,162]]]],[[],149],[[],149],[[],149],[[],149],[71,149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[],149],[[11,1],1],[[15,1],1],[[17,1],1],[[20,5],5],[[24,5],5],[[14,2],2],[[18,2],2],[[22,6],6],[[25,6],6],[[14,3],3],[[18,3],3],[[11,1],1],[[15,1],1],[[17,1],1],[[20,5],5],[[24,5],5],[[14,2],2],[[18,2],2],[[22,6],6],[[25,6],6],[[14,3],3],[[18,3],3],0,0,0,0,0,[15,15],[16,16],[17,17],[18,18],[23,23],[24,24],[25,25],0,[2,1],[3,1],[4,2],[6,5],[7,6],[9,8],[10,9],[32,30],[33,32],[51,[[103,[57,113]]]],[51,[[103,[60,114]]]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[111,[[103,[70]]]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[27,[[112,[126]]]],[88,[[103,[59,115]]]],[91,[[112,[58]]]],[[88,71],[[103,[[120,[[51,[55]]]],115]]]],[27,[[112,[127]]]],[88,[[103,[115]]]],[91,[[103,[115]]]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[1,[[112,[1]]]],[2,[[112,[2]]]],[3,[[112,[3]]]],[4,[[112,[4]]]],[5,[[112,[5]]]],[6,[[112,[6]]]],[7,[[112,[7]]]],[27,[[112,[[97,[157,96]]]]]],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[[],131],[43,111],[38,111],[39,111],[40,111],[41,111],[42,111],[11,111],[14,111],[15,111],[1,111],[2,111],[16,111],[17,111],[18,111],[19,111],[3,111],[4,111],[20,111],[22,111],[23,111],[24,111],[25,111],[26,111],[5,111],[6,111],[7,111],[8,111],[9,111],[10,111],[30,111],[32,111],[33,111],[78,75],0,[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[75,78],[91,90],[91,90],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[31,31],30],[[31,31,31],32],[[31,31,31,31],33],[[12,12],1],[[12,12,12],2],[[12,12,12],3],[[12,12,12,12],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],36],[[],71],[[12,12,1,12],37],[11],[14],[15],[16],[17],[18],[20],[22],[23],[24],[25],[[15,164]],[[1,164]],[[2,164]],[[16,164]],[[18,164]],[[4,164]],[[8,164]],[[9,164]],[[10,164]],[[30,164]],[[32,164]],[[33,164]],[1],[2],[19],[3],[4],[26],[5],[6],[7],[8],[9],[10],[30],[32],[33],[[]],[4,1],[7,5],[10,8],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,1],[7,5],[10,8],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,1],[7,5],[10,8],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,1],[7,5],[10,8],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[4,1],[7,5],[10,8],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,1],[2,1],[3,1],[4,1],[5,5],[6,5],[7,5],[8,8],[9,8],[10,8],[30,30],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[[]],[[]],[[]],[1,1],[2,1],[3,1],[4,1],[5,5],[6,5],[7,5],[8,8],[9,8],[10,8],[30,30],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[[]],[[]],[2,2],[19,2],[3,3],[4,2],[26,6],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[[]],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,1],[3,1],[4,1],[6,5],[7,5],[9,8],[10,8],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[4,1],[7,5],[10,8],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,1],[2,1],[3,1],[4,1],[5,5],[6,5],[7,5],[8,8],[9,8],[10,8],[30,30],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[[]],[1,1],[2,1],[3,1],[4,1],[5,5],[6,5],[7,5],[8,8],[9,8],[10,8],[30,30],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[[]],[1,2],[2,2],[3,3],[4,2],[5,6],[6,6],[7,6],[8,9],[9,9],[10,9],[30,32],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[[]],[1,4],[2,4],[3,4],[4,4],[5,7],[6,7],[7,7],[8,10],[9,10],[10,10],[30,33],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,1],[3,1],[4,1],[6,5],[7,5],[9,8],[10,8],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[4,1],[7,5],[10,8],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,1],[3,1],[4,1],[6,5],[7,5],[9,8],[10,8],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,1],[3,1],[4,1],[6,5],[7,5],[9,8],[10,8],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,1],[3,1],[4,1],[6,5],[7,5],[9,8],[10,8],[32,30],[33,30],[[]],[4,2],[7,6],[10,9],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,2],[3,3],[4,2],[6,6],[7,6],[9,9],[10,9],[32,32],[33,32],[[]],[4,4],[7,7],[10,10],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],[[]],[[]],[2,4],[3,4],[4,4],[6,7],[7,7],[9,10],[10,10],[32,33],[33,33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],16],[[2,2,2],15],[[3,3,3],17],[[4,4,4,4],18],0,0,[[12,12,12,12],19],0,0,[[12,12],1],[[12,12,12],2],[[12,12,12],3],[[12,12,12,12],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,5],23],[[6,6,6],24],[[7,7,7,7],25],[[21,21,21,21],26],[[21,21],5],[[21,21,21],6],[[21,21,21,21],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[29,29],8],[[29,29,29],9],[[29,29,29,29],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[31,31],30],[[31,31,31],32],[[31,31,31,31],33],0,0,0,0,0,0,0,0,0,0,0,[[],48],[[],48],[[],48],[[],48],[49],[49],[[]],[[]],[[]],[[]],[165,165],[166,166],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],166],[[]],[[]],[[166,101],167],[[]],[[]],[123],0,[168],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],0,0,[[124,124]],[[124,124]],[124],[124],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],71],[[],71],[[],112],[[],112],[[]],[[]],0,0,0,[[],48],[[],48],[[],48],[[],48],[49],[49],[[]],[[]],[[]],[[]],[169,169],[170,170],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[169,2],171],[[],169],[[]],[[]],[[169,101],167],[[170,101],167],[[]],[[]],[123],[168],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[124,124]],[[124,124]],[124],[124],0,[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],71],[[],71],[[],112],[[],112],[[]],[[]],0,0,0,[[],48],[[],48],[[],48],[[],48],[49],[49],[[]],[[]],[[]],[[]],[172,172],[173,173],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],0,[[],173],[173],[173],[[]],[[]],[[]],[[]],[123],0,[168],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],0,[[124,124]],[[124,124]],[124],[124],0,0,[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],71],[[],71],[[],112],[[],112],[[]],[[]],[168],0,0,0,[[],48],[[],48],[[],48],[[],48],[49],[49],[[]],[[]],[[]],[[]],[174,174],[175,175],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[]],[[]],[[174,101],167],[[175,101],167],[[]],[[]],[168],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[124,124]],[[124,124]],[124],[124],0,0,[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],71],[[],71],[[],112],[[],112],[[]],[[]],0,0,0,[[],48],[[],48],[[],48],[[],48],[49],[49],[[]],[[]],[[]],[[]],[176,176],[177,177],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],177],[[]],[[]],[[176,101],167],[[177,101],167],[[]],[[]],[123],[168],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[124,124]],[[124,124]],[124],[124],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],71],[[],71],[[],112],[[],112],[[]],[[]],0,[[],48],[[],48],[49],[[]],[[]],[178,178],[[]],[[],[[97,[95,96]]]],[[],178],[[]],[[178,101],167],0,[[]],[123],[168],[[]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[[124,124]],[124],0,[[]],[[],103],[[],103],[[],163],[[],71],[[],112],[[]],0,0,0,0,0,[[],48],[[],48],[[],48],[[],48],[49],[49],[[]],[[]],[[]],[[]],[179,179],[180,180],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],179],[[],180],[[]],[[]],0,[[179,101],167],[[180,101],167],[[]],[[]],[123],[123],[168],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[124,124]],[[124,124]],[124],[124],0,[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],71],[[],112],[[],112],[[]],[[]],0,0,0,0,0,0,[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[49],[49],[49],[[]],[[]],[[]],[[]],[[]],[[]],[181,181],[182,182],[183,183],[[]],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],0,[[],181],[[],182],[[],183],[[]],[[]],[[]],[[181,101],167],[[182,101],167],[[183,101],167],[[]],[[]],[[]],[123],[123],[123],0,0,[168],[[]],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],0,0,0,0,0,0,0,[[124,124]],[[124,124]],[[124,124]],[124],[124],[124],0,0,0,0,0,[[]],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],163],[[],71],[[],71],[[],112],[[],112],[[],112],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[49],[49],[49],[49],[49],[49],[49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],185],[185],[190],[185],[190],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[186,101],167],[[190,101],167],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123],[93],[93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],0,0,0,[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[124],[124],[124],[124],[124],[124],[[]],[[]],[[]],[[]],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],71],[[],71],[[],71],[[],71],[[],71],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],48],[[],48],[49],[[]],[[]],[191,191],[[]],[[],[[97,[95,96]]]],[[],191],[[]],[[]],[123],[168],[[]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],0,[12,191],[[124,124]],[124],[[]],[[],103],[[],103],[[],163],[[],71],[[],112],[[]],0,0,0,0,0,0,[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[49],[49],[49],[[]],[[]],[[]],[[]],[[]],[[]],[192,192],[193,193],[194,194],[[]],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],192],[[],193],[[],194],[192],[193],[194],[192],[193],[194],[[]],[[]],[[]],[[]],[[]],[[]],[123],[123],[123],[168],[[]],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[124,124]],[[124,124]],[[124,124]],[124],[124],[124],[[]],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],163],[[],71],[[],71],[[],71],[[],112],[[],112],[[],112],[[]],[[]],[[]],0,[[],48],[[],48],[49],[[]],[[]],[171,12],[171,1],[171,1],[171,1],[171,171],[[]],[[],[[97,[95,96]]]],[[171,1],13],[[],171],[[]],[[171,101],167],[[]],[123],[171,12],[[]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[[],13],[171,12],[171,1],0,[171,1],0,[[12,12,12,12],171],[[171,171],13],[[124,124]],[124],[171,12],[171,1],[[]],[171,12],[171,1],[171,1],[[],103],[[],103],[[],163],[[],112],[[]],[171,12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],[49],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[195,196]],0,0,0,[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],197],[[],198],[[],199],[[],201],[[],205],[[],206],[[],207],[[],209],[[],210],[[],211],[[],212],[[],213],[[],214],[[],215],0,0,[212],[212],[[],[[103,[197]]]],[[],[[103,[198]]]],[[],[[103,[199]]]],[[],[[103,[200]]]],[[],[[103,[201]]]],[[],[[103,[202]]]],[[],[[103,[203]]]],[[],[[103,[204]]]],[[],[[103,[205]]]],[[],[[103,[206]]]],[[],[[103,[207]]]],[[],[[103,[208]]]],[[],[[103,[209]]]],[[],[[103,[210]]]],[[],[[103,[211]]]],[[],[[103,[213]]]],[[],[[103,[214]]]],[[],[[103,[215]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[108,[[103,[109,110]]]],0,[[197,101],167],[[198,101],167],[[199,101],167],[[200,101],167],[[201,101],167],[[202,101],167],[[203,101],167],[[204,101],167],[[205,101],167],[[206,101],167],[[207,101],167],[[208,101],167],[[209,101],167],[[210,101],167],[[211,101],167],[[212,101],167],[[213,101],167],[[214,101],167],[[215,101],167],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],[123],0,0,0,0,0,0,0,0,0,[196],[196],[196],[196],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],0,0,0,0,0,0,0,0,0,[[199,146,144]],[[201,146,144]],[[202,146,144]],[[203,146,144]],[[204,146,144]],[[205,146,144]],[[206,146,144]],[[207,146,144]],[[208,146,144]],[[210,146,144]],[[211,146,144]],[[214,146,144]],[[215,146,144]],0,0,0,0,0,0,0,0,0,0,0,[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],[124],0,[208,103],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],111],[[],111],[[],111],[[],111],[[],216],[[],216],[[],216],[[],216],[[],71],[[],71],[[],71],[[],71],[[],71],[[],71],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],48],[[],48],[49],[[]],[[]],0,0,[217,217],[[]],[[],[[97,[95,96]]]],[[217,2],171],0,[[],217],[[]],0,[[217,101],167],[[]],[123],0,0,0,[168],[[]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],0,0,0,0,0,[[124,124]],[124],0,[[]],[[],103],[[],103],[[],163],[[],71],[[],112],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[218,89],[[144,[89]]]],[[218,89],1],[[218,89,1,12,12]],[[218,89,1,12,12]],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[49],[49],[49],[49],[49],[49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[219,219],[220,220],[221,221],[222,222],[223,223],[[]],[[]],[[]],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],0,[[218,89,1],13],[[218,1,12,12],223],[[218,222,1,12,12],223],[[],219],[[],220],[[],221],[[],222],[[],223],[[218,89]],0,[[]],[[]],[[]],[[]],[[]],[[]],[50,13],[50,13],[[222,222],13],[[223,223],13],[[],13],[[],13],[[219,101],167],[[220,101],167],[[221,101],167],[[222,101],167],[[223,101],167],[[]],[[]],[[]],[[]],[[]],[[]],[123],[123],[123],[123],[123],[[218,89],221],[93],0,[93],[[]],[[]],[[]],[[]],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[],13],[[],13],[[218,89,12],13],[[218,89,12],13],0,[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[124],[124],[124],[124],[124],[221,171],0,[[218,89,1]],[[218,1],13],[[218,89,12,12]],[[218,89],1],[[218,89],13],0,0,[[218,1,222],13],[[]],[[]],[[]],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],71],[[],71],[[],71],[[],71],[[],71],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[224,34]],0,[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[49],[49],[49],[49],[49],[49],[49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[225,225],[226,226],[227,227],[228,228],[229,229],[[]],[[]],[[]],[[]],[[]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],[[],[[97,[95,96]]]],0,[[],224],[[],225],[[],228],[[228,89]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[230,101],167],[[224,101],167],[[228,101],167],[[229,101],167],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[123],[123],[123],[230,71],[224,71],[[224,93]],[168],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],[[228,89]],0,[230,149],[224,149],[[],224],0,[[124,124]],[[124,124]],[[124,124]],[[124,124]],[[124,124]],[124],[124],[124],[124],[124],[[224,93],231],[[228,229]],[[228,89,[112,[89]]]],[[]],[[]],[[]],[[]],[[]],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],163],[[],71],[[],71],[[],71],[[],71],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[],112],[[228,89]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[168,123]],[[],48],[[],48],[[],48],[[],48],[49],[49],[[]],[[]],[[]],[[]],[232,232],[[]],[[],[[97,[95,96]]]],[[]],[[]],[[232,101],167],[[]],[[]],0,[[]],[[]],[[[97,[96]]],[[97,[48,96]]]],[[[97,[96]]],[[97,[48,96]]]],[120,[[120,[48]]]],[120,[[120,[48]]]],[133,[[133,[48]]]],[133,[[133,[48]]]],0,0,[232,168],0,[[124,124]],[124],[168],[[168,93]],0,[[168,[120,[213]]]],[168,93],0,[[]],[[],103],[[],103],[[],103],[[],103],[[],163],[[],163],[[],112],[[],112],[[168,233]],[[]],[[]],0,[168]],"p":[[3,"Vec2"],[3,"Vec3"],[3,"Vec3A"],[3,"Vec4"],[3,"DVec2"],[3,"DVec3"],[3,"DVec4"],[3,"IVec2"],[3,"IVec3"],[3,"IVec4"],[3,"Affine2"],[15,"f32"],[15,"bool"],[3,"Affine3A"],[3,"Mat3"],[3,"Mat2"],[3,"Mat3A"],[3,"Mat4"],[3,"Quat"],[3,"DAffine2"],[15,"f64"],[3,"DAffine3"],[3,"DMat2"],[3,"DMat3"],[3,"DMat4"],[3,"DQuat"],[3,"AssetProviders"],[3,"CommandQueue"],[15,"i32"],[3,"UVec2"],[15,"u32"],[3,"UVec3"],[3,"UVec4"],[3,"System"],[3,"SimpleSystemStage"],[3,"SystemStages"],[3,"CameraShake"],[3,"BVec2"],[3,"BVec3"],[3,"BVec4"],[3,"BVec3A"],[3,"BVec4A"],[4,"EulerRot"],[8,"Reflect"],[3,"BitSetVec"],[3,"AtomicComponentStoreRef"],[3,"AtomicComponentStoreRefMut"],[8,"Any"],[3,"RenderAssets"],[8,"DynEq"],[3,"AtomicRefCell"],[15,"usize"],[3,"BitFmt"],[3,"ComponentStore"],[3,"UntypedComponentStore"],[3,"Entities"],[3,"AtomicRef"],[3,"AtomicResource"],[3,"AtomicComponentStore"],[3,"AtomicRefMut"],[3,"Time"],[3,"BevyWorld"],[3,"Window"],[3,"AudioSource"],[3,"AudioEvents"],[4,"AudioEvent"],[3,"Camera"],[3,"AnimatedSprite"],[3,"ClearColor"],[3,"Key"],[3,"Ulid"],[3,"AssetProvidersResource"],[4,"KeyError"],[3,"AssetPath"],[3,"Handle"],[3,"Image"],[3,"Atlas"],[3,"UntypedHandle"],[3,"Sprite"],[3,"AtlasSprite"],[3,"ShakeNoise"],[3,"TileLayer"],[3,"Tile"],[3,"CameraTraumaEvents"],[3,"Transform"],[3,"FrameTime"],[3,"UntypedResource"],[3,"ComponentStores"],[3,"Entity"],[3,"UntypedResources"],[3,"Resources"],[4,"CoreStage"],[3,"World"],[3,"DynamicStruct"],[8,"TypeData"],[3,"Global"],[3,"Box"],[4,"Ordering"],[3,"Reader"],[3,"SystemTime"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Res"],[3,"ResMut"],[3,"Commands"],[8,"Hasher"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[15,"str"],[4,"Option"],[3,"BorrowError"],[3,"BorrowMutError"],[4,"EcsError"],[15,"never"],[15,"u128"],[3,"__m128"],[4,"Color"],[3,"Arc"],[15,"u64"],[4,"DecodeError"],[3,"World"],[15,"u8"],[8,"AssetProvider"],[3,"AssetProviderRef"],[3,"AssetProviderMut"],[3,"TypedComponentOps"],[3,"Handle"],[3,"HandleUntyped"],[4,"TypeInfo"],[3,"TypeRegistration"],[3,"Rc"],[3,"AssetPath"],[3,"Transform"],[8,"Iterator"],[3,"FieldIter"],[3,"ComponentBitsetIteratorMut"],[3,"UntypedComponentBitsetIteratorMut"],[3,"EntitiesIterWith"],[3,"ComponentBitsetIterator"],[3,"UntypedComponentBitsetIterator"],[3,"EntityIterator"],[3,"Vec"],[3,"Layout"],[3,"LoadContext"],[3,"LoadingResources"],[3,"LoadProgress"],[3,"String"],[3,"UntypedResourceInfo"],[3,"Path"],[4,"ReflectPathError"],[3,"Demand"],[4,"ReflectMut"],[4,"ReflectOwned"],[4,"ReflectRef"],[8,"UntypedAssetProvider"],[3,"Error"],[15,"i8"],[15,"i16"],[15,"u16"],[4,"EncodeError"],[3,"TypeId"],[3,"Writer"],[3,"ParallaxBackgroundSprite"],[3,"CameraState"],[6,"Result"],[3,"GameSession"],[3,"DamageRegion"],[3,"DamageRegionOwner"],[3,"Rect"],[3,"MapElementHydrated"],[3,"ElementHandle"],[3,"IdleGrenade"],[3,"LitGrenade"],[3,"PlayerSpawner"],[3,"CurrentSpawner"],[3,"Sproinger"],[3,"Sword"],[4,"SwordState"],[3,"PlayerInputs"],[3,"PlayerInput"],[3,"PlayerControl"],[3,"Item"],[3,"Inventory"],[3,"Inv"],[3,"ItemDropped"],[3,"ItemGrabbed"],[3,"ItemUsed"],[3,"PlayerInventories"],[3,"Lifetime"],[3,"MapHandle"],[3,"MapSpawned"],[3,"MapRespawnPoint"],[3,"JumpyCoreAssetsPlugin"],[3,"App"],[3,"ColorMeta"],[3,"ElementMeta"],[4,"BuiltinElementKind"],[3,"MapMeta"],[3,"BackgroundMeta"],[3,"ParallaxLayerMeta"],[3,"MapLayerMeta"],[4,"MapLayerKind"],[3,"MapTileLayer"],[3,"ElementLayer"],[3,"ElementSpawn"],[3,"MapTileMeta"],[3,"PlayerMeta"],[3,"PlayerStats"],[3,"PlayerSounds"],[3,"CoreMetaArc"],[3,"CoreMeta"],[3,"CameraMeta"],[3,"PhysicsMeta"],[3,"Uuid"],[3,"KinematicBody"],[3,"CollisionWorld"],[3,"Actor"],[3,"Solid"],[3,"Collider"],[3,"TileCollisionTag"],[3,"TileCollision"],[3,"PlayerStateStageImpl"],[3,"PlayerState"],[3,"PlayerIdx"],[3,"PlayerKilled"],[3,"PlayerEvents"],[4,"PlayerEvent"],[3,"PlayerStateStage"],[6,"SystemResult"],[3,"GameSessionInfo"],[8,"FnOnce"],[8,"QueryItem"],[8,"SystemParam"],[8,"TypeUlid"],[8,"Vec3Swizzles"],[8,"Vec4Swizzles"],[8,"Vec2Swizzles"],[8,"SystemStage"],[8,"BitSet"],[8,"StageLabel"],[8,"IntoBevy"],[8,"RawFns"],[8,"IntoSystem"],[13,"PlaySound"],[13,"DispatcherExecutionFailed"],[13,"SystemError"],[13,"Swinging"],[13,"Cooldown"],[13,"Grenade"],[13,"Sword"],[13,"KickBomb"],[13,"Mine"],[13,"AnimatedDecoration"],[13,"Crab"],[13,"Sproinger"],[13,"Crate"],[13,"StompBoots"],[13,"Tile"],[13,"Element"],[13,"SetInventory"],[13,"Kill"],[13,"Despawn"],[13,"UseItem"]],"a":{"cross":[4511,4512,4513],"determinant":[4511,4512,4513],"magnitude":[4043,4044,4045,4046,4047,4048,4049,4050,4051],"magnitude2":[4061,4062,4063,4064,4065,4066,4067,4068,4069],"mix":[4070,4071,4072,4073,4074,4075,4076,4077,4078],"scale":[2912,2913,2914,2915,2916,2917,2918],"wedge":[4511,4512,4513]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
